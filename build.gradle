/*
 * Copyright 2017 Heroic Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'com.google.protobuf' version '0.8.2'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'org.ajoberstar.git-publish' version '0.3.0'
    id 'java'
    id 'idea'
    id 'maven-publish'
}

group = 'com.heroiclabs.nakama'
version = '0.5.0-SNAPSHOT'
def description = 'Android optimized Java client for Nakama server.'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'andreimihu'
            name 'Andrei Mihu'
            email 'andrei@heroiclabs.com'
        }
        developer {
            id 'cmolozian'
            name 'Chris Molozian'
            email 'chris@heroiclabs.com'
        }
        developer {
            id 'mofirouz'
            name 'Mo Firouz'
            email 'mo@heroiclabs.com'
        }
    }
    scm {
        url 'https://github.com/heroiclabs/nakama-java'
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava']
    pkg {
        repo = 'default'
        name = 'nakama-client'
        desc = description
        userOrg = 'heroiclabs'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/heroiclabs/nakama-java.git'
        publicDownloadNumbers = true
        version {
            name = "$project.version"
            released = new Date()
            vcsTag = project.findProperty('vcsTag')
        }
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.16.18'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.google.protobuf:protobuf-lite:3.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.stumbleupon:async:1.4.1'
    compile ('org.slf4j:slf4j-api:1.7.25') {
        force = true // don't upgrade to "1.8.0-alpha2"
    }
    testCompile 'junit:junit:4.12'
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
}

gitPublish {
    repoUri = 'git@github.com:heroiclabs/nakama-java.git'
    branch = 'gh-pages'
    contents {
        from(javadoc) {
            into "$project.version"
        }
        from(javadoc) {
            into 'current'
        }
    }
    preserve {
        include '0.1.0/**'
        include '0.1.1/**'
        include '0.1.2/**'
        include '0.2.0/**'
        include '0.3.0/**'
        include '0.4.0/**'
    }
    commitMessage = "Published javadoc '$project.version' via Gradle ${GradleVersion.current().version}."
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Nakama client',
                   'Implementation-Version': "$project.version"
    }
}

protobuf {
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java // Don't generate a copy with "protobuf-java".
            }
            task.plugins {
                javalite { // Must activate "javalite" plugin.
                }
            }
        }
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }

            groupId "$project.group"
            artifactId 'client'
            version "$project.version"

            pom.withXml {
                def root = asNode()
                root.appendNode('description', description)
                root.appendNode('name', 'Nakama client')
                root.appendNode('url', 'https://heroiclabs.com/docs/android-java-client-guide/')
                root.children().last() + pomConfig
            }
        }
    }
}

repositories {
    mavenCentral()
}

shadowJar {
}

sourceSets {
    main {
        proto {
            srcDir "$projectDir/server/server"
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    from javadoc
}
