// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama/api/api.proto

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * A user with additional account details. Always the current user.
 * </pre>
 *
 * Protobuf type {@code nakama.api.Account}
 */
public  final class Account extends
    com.google.protobuf.GeneratedMessageLite<
        Account, Account.Builder> implements
    // @@protoc_insertion_point(message_implements:nakama.api.Account)
    AccountOrBuilder {
  private Account() {
    wallet_ = "";
    email_ = "";
    devices_ = emptyProtobufList();
    customId_ = "";
  }
  private int bitField0_;
  public static final int USER_FIELD_NUMBER = 1;
  private com.heroiclabs.nakama.api.User user_;
  /**
   * <pre>
   * The user object.
   * </pre>
   *
   * <code>optional .nakama.api.User user = 1;</code>
   */
  public boolean hasUser() {
    return user_ != null;
  }
  /**
   * <pre>
   * The user object.
   * </pre>
   *
   * <code>optional .nakama.api.User user = 1;</code>
   */
  public com.heroiclabs.nakama.api.User getUser() {
    return user_ == null ? com.heroiclabs.nakama.api.User.getDefaultInstance() : user_;
  }
  /**
   * <pre>
   * The user object.
   * </pre>
   *
   * <code>optional .nakama.api.User user = 1;</code>
   */
  private void setUser(com.heroiclabs.nakama.api.User value) {
    if (value == null) {
      throw new NullPointerException();
    }
    user_ = value;
    
    }
  /**
   * <pre>
   * The user object.
   * </pre>
   *
   * <code>optional .nakama.api.User user = 1;</code>
   */
  private void setUser(
      com.heroiclabs.nakama.api.User.Builder builderForValue) {
    user_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The user object.
   * </pre>
   *
   * <code>optional .nakama.api.User user = 1;</code>
   */
  private void mergeUser(com.heroiclabs.nakama.api.User value) {
    if (user_ != null &&
        user_ != com.heroiclabs.nakama.api.User.getDefaultInstance()) {
      user_ =
        com.heroiclabs.nakama.api.User.newBuilder(user_).mergeFrom(value).buildPartial();
    } else {
      user_ = value;
    }
    
  }
  /**
   * <pre>
   * The user object.
   * </pre>
   *
   * <code>optional .nakama.api.User user = 1;</code>
   */
  private void clearUser() {  user_ = null;
    
  }

  public static final int WALLET_FIELD_NUMBER = 2;
  private java.lang.String wallet_;
  /**
   * <pre>
   * The user's wallet data.
   * </pre>
   *
   * <code>optional string wallet = 2;</code>
   */
  public java.lang.String getWallet() {
    return wallet_;
  }
  /**
   * <pre>
   * The user's wallet data.
   * </pre>
   *
   * <code>optional string wallet = 2;</code>
   */
  public com.google.protobuf.ByteString
      getWalletBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(wallet_);
  }
  /**
   * <pre>
   * The user's wallet data.
   * </pre>
   *
   * <code>optional string wallet = 2;</code>
   */
  private void setWallet(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    wallet_ = value;
  }
  /**
   * <pre>
   * The user's wallet data.
   * </pre>
   *
   * <code>optional string wallet = 2;</code>
   */
  private void clearWallet() {
    
    wallet_ = getDefaultInstance().getWallet();
  }
  /**
   * <pre>
   * The user's wallet data.
   * </pre>
   *
   * <code>optional string wallet = 2;</code>
   */
  private void setWalletBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    wallet_ = value.toStringUtf8();
  }

  public static final int EMAIL_FIELD_NUMBER = 3;
  private java.lang.String email_;
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>optional string email = 3;</code>
   */
  public java.lang.String getEmail() {
    return email_;
  }
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>optional string email = 3;</code>
   */
  public com.google.protobuf.ByteString
      getEmailBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(email_);
  }
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>optional string email = 3;</code>
   */
  private void setEmail(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    email_ = value;
  }
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>optional string email = 3;</code>
   */
  private void clearEmail() {
    
    email_ = getDefaultInstance().getEmail();
  }
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>optional string email = 3;</code>
   */
  private void setEmailBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    email_ = value.toStringUtf8();
  }

  public static final int DEVICES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<com.heroiclabs.nakama.api.AccountDevice> devices_;
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  public java.util.List<com.heroiclabs.nakama.api.AccountDevice> getDevicesList() {
    return devices_;
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  public java.util.List<? extends com.heroiclabs.nakama.api.AccountDeviceOrBuilder> 
      getDevicesOrBuilderList() {
    return devices_;
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  public int getDevicesCount() {
    return devices_.size();
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  public com.heroiclabs.nakama.api.AccountDevice getDevices(int index) {
    return devices_.get(index);
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  public com.heroiclabs.nakama.api.AccountDeviceOrBuilder getDevicesOrBuilder(
      int index) {
    return devices_.get(index);
  }
  private void ensureDevicesIsMutable() {
    if (!devices_.isModifiable()) {
      devices_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(devices_);
     }
  }

  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void setDevices(
      int index, com.heroiclabs.nakama.api.AccountDevice value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureDevicesIsMutable();
    devices_.set(index, value);
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void setDevices(
      int index, com.heroiclabs.nakama.api.AccountDevice.Builder builderForValue) {
    ensureDevicesIsMutable();
    devices_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void addDevices(com.heroiclabs.nakama.api.AccountDevice value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureDevicesIsMutable();
    devices_.add(value);
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void addDevices(
      int index, com.heroiclabs.nakama.api.AccountDevice value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureDevicesIsMutable();
    devices_.add(index, value);
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void addDevices(
      com.heroiclabs.nakama.api.AccountDevice.Builder builderForValue) {
    ensureDevicesIsMutable();
    devices_.add(builderForValue.build());
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void addDevices(
      int index, com.heroiclabs.nakama.api.AccountDevice.Builder builderForValue) {
    ensureDevicesIsMutable();
    devices_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void addAllDevices(
      java.lang.Iterable<? extends com.heroiclabs.nakama.api.AccountDevice> values) {
    ensureDevicesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, devices_);
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void clearDevices() {
    devices_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The devices which belong to the user's account.
   * </pre>
   *
   * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
   */
  private void removeDevices(int index) {
    ensureDevicesIsMutable();
    devices_.remove(index);
  }

  public static final int CUSTOM_ID_FIELD_NUMBER = 5;
  private java.lang.String customId_;
  /**
   * <pre>
   * The custom id in the user's account.
   * </pre>
   *
   * <code>optional string custom_id = 5;</code>
   */
  public java.lang.String getCustomId() {
    return customId_;
  }
  /**
   * <pre>
   * The custom id in the user's account.
   * </pre>
   *
   * <code>optional string custom_id = 5;</code>
   */
  public com.google.protobuf.ByteString
      getCustomIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(customId_);
  }
  /**
   * <pre>
   * The custom id in the user's account.
   * </pre>
   *
   * <code>optional string custom_id = 5;</code>
   */
  private void setCustomId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    customId_ = value;
  }
  /**
   * <pre>
   * The custom id in the user's account.
   * </pre>
   *
   * <code>optional string custom_id = 5;</code>
   */
  private void clearCustomId() {
    
    customId_ = getDefaultInstance().getCustomId();
  }
  /**
   * <pre>
   * The custom id in the user's account.
   * </pre>
   *
   * <code>optional string custom_id = 5;</code>
   */
  private void setCustomIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    customId_ = value.toStringUtf8();
  }

  public static final int VERIFY_TIME_FIELD_NUMBER = 6;
  private com.google.protobuf.Timestamp verifyTime_;
  /**
   * <pre>
   * The UNIX time when the user's email was verified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
   */
  public boolean hasVerifyTime() {
    return verifyTime_ != null;
  }
  /**
   * <pre>
   * The UNIX time when the user's email was verified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
   */
  public com.google.protobuf.Timestamp getVerifyTime() {
    return verifyTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : verifyTime_;
  }
  /**
   * <pre>
   * The UNIX time when the user's email was verified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
   */
  private void setVerifyTime(com.google.protobuf.Timestamp value) {
    if (value == null) {
      throw new NullPointerException();
    }
    verifyTime_ = value;
    
    }
  /**
   * <pre>
   * The UNIX time when the user's email was verified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
   */
  private void setVerifyTime(
      com.google.protobuf.Timestamp.Builder builderForValue) {
    verifyTime_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The UNIX time when the user's email was verified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
   */
  private void mergeVerifyTime(com.google.protobuf.Timestamp value) {
    if (verifyTime_ != null &&
        verifyTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      verifyTime_ =
        com.google.protobuf.Timestamp.newBuilder(verifyTime_).mergeFrom(value).buildPartial();
    } else {
      verifyTime_ = value;
    }
    
  }
  /**
   * <pre>
   * The UNIX time when the user's email was verified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
   */
  private void clearVerifyTime() {  verifyTime_ = null;
    
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (user_ != null) {
      output.writeMessage(1, getUser());
    }
    if (!wallet_.isEmpty()) {
      output.writeString(2, getWallet());
    }
    if (!email_.isEmpty()) {
      output.writeString(3, getEmail());
    }
    for (int i = 0; i < devices_.size(); i++) {
      output.writeMessage(4, devices_.get(i));
    }
    if (!customId_.isEmpty()) {
      output.writeString(5, getCustomId());
    }
    if (verifyTime_ != null) {
      output.writeMessage(6, getVerifyTime());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (user_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getUser());
    }
    if (!wallet_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getWallet());
    }
    if (!email_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getEmail());
    }
    for (int i = 0; i < devices_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, devices_.get(i));
    }
    if (!customId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getCustomId());
    }
    if (verifyTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getVerifyTime());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.heroiclabs.nakama.api.Account parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Account parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.Account parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.Account parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.Account prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * A user with additional account details. Always the current user.
   * </pre>
   *
   * Protobuf type {@code nakama.api.Account}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.heroiclabs.nakama.api.Account, Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.Account)
      com.heroiclabs.nakama.api.AccountOrBuilder {
    // Construct using com.heroiclabs.nakama.api.Account.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The user object.
     * </pre>
     *
     * <code>optional .nakama.api.User user = 1;</code>
     */
    public boolean hasUser() {
      return instance.hasUser();
    }
    /**
     * <pre>
     * The user object.
     * </pre>
     *
     * <code>optional .nakama.api.User user = 1;</code>
     */
    public com.heroiclabs.nakama.api.User getUser() {
      return instance.getUser();
    }
    /**
     * <pre>
     * The user object.
     * </pre>
     *
     * <code>optional .nakama.api.User user = 1;</code>
     */
    public Builder setUser(com.heroiclabs.nakama.api.User value) {
      copyOnWrite();
      instance.setUser(value);
      return this;
      }
    /**
     * <pre>
     * The user object.
     * </pre>
     *
     * <code>optional .nakama.api.User user = 1;</code>
     */
    public Builder setUser(
        com.heroiclabs.nakama.api.User.Builder builderForValue) {
      copyOnWrite();
      instance.setUser(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The user object.
     * </pre>
     *
     * <code>optional .nakama.api.User user = 1;</code>
     */
    public Builder mergeUser(com.heroiclabs.nakama.api.User value) {
      copyOnWrite();
      instance.mergeUser(value);
      return this;
    }
    /**
     * <pre>
     * The user object.
     * </pre>
     *
     * <code>optional .nakama.api.User user = 1;</code>
     */
    public Builder clearUser() {  copyOnWrite();
      instance.clearUser();
      return this;
    }

    /**
     * <pre>
     * The user's wallet data.
     * </pre>
     *
     * <code>optional string wallet = 2;</code>
     */
    public java.lang.String getWallet() {
      return instance.getWallet();
    }
    /**
     * <pre>
     * The user's wallet data.
     * </pre>
     *
     * <code>optional string wallet = 2;</code>
     */
    public com.google.protobuf.ByteString
        getWalletBytes() {
      return instance.getWalletBytes();
    }
    /**
     * <pre>
     * The user's wallet data.
     * </pre>
     *
     * <code>optional string wallet = 2;</code>
     */
    public Builder setWallet(
        java.lang.String value) {
      copyOnWrite();
      instance.setWallet(value);
      return this;
    }
    /**
     * <pre>
     * The user's wallet data.
     * </pre>
     *
     * <code>optional string wallet = 2;</code>
     */
    public Builder clearWallet() {
      copyOnWrite();
      instance.clearWallet();
      return this;
    }
    /**
     * <pre>
     * The user's wallet data.
     * </pre>
     *
     * <code>optional string wallet = 2;</code>
     */
    public Builder setWalletBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setWalletBytes(value);
      return this;
    }

    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>optional string email = 3;</code>
     */
    public java.lang.String getEmail() {
      return instance.getEmail();
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>optional string email = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      return instance.getEmailBytes();
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>optional string email = 3;</code>
     */
    public Builder setEmail(
        java.lang.String value) {
      copyOnWrite();
      instance.setEmail(value);
      return this;
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>optional string email = 3;</code>
     */
    public Builder clearEmail() {
      copyOnWrite();
      instance.clearEmail();
      return this;
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>optional string email = 3;</code>
     */
    public Builder setEmailBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setEmailBytes(value);
      return this;
    }

    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public java.util.List<com.heroiclabs.nakama.api.AccountDevice> getDevicesList() {
      return java.util.Collections.unmodifiableList(
          instance.getDevicesList());
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public int getDevicesCount() {
      return instance.getDevicesCount();
    }/**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public com.heroiclabs.nakama.api.AccountDevice getDevices(int index) {
      return instance.getDevices(index);
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder setDevices(
        int index, com.heroiclabs.nakama.api.AccountDevice value) {
      copyOnWrite();
      instance.setDevices(index, value);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder setDevices(
        int index, com.heroiclabs.nakama.api.AccountDevice.Builder builderForValue) {
      copyOnWrite();
      instance.setDevices(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder addDevices(com.heroiclabs.nakama.api.AccountDevice value) {
      copyOnWrite();
      instance.addDevices(value);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder addDevices(
        int index, com.heroiclabs.nakama.api.AccountDevice value) {
      copyOnWrite();
      instance.addDevices(index, value);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder addDevices(
        com.heroiclabs.nakama.api.AccountDevice.Builder builderForValue) {
      copyOnWrite();
      instance.addDevices(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder addDevices(
        int index, com.heroiclabs.nakama.api.AccountDevice.Builder builderForValue) {
      copyOnWrite();
      instance.addDevices(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder addAllDevices(
        java.lang.Iterable<? extends com.heroiclabs.nakama.api.AccountDevice> values) {
      copyOnWrite();
      instance.addAllDevices(values);
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder clearDevices() {
      copyOnWrite();
      instance.clearDevices();
      return this;
    }
    /**
     * <pre>
     * The devices which belong to the user's account.
     * </pre>
     *
     * <code>repeated .nakama.api.AccountDevice devices = 4;</code>
     */
    public Builder removeDevices(int index) {
      copyOnWrite();
      instance.removeDevices(index);
      return this;
    }

    /**
     * <pre>
     * The custom id in the user's account.
     * </pre>
     *
     * <code>optional string custom_id = 5;</code>
     */
    public java.lang.String getCustomId() {
      return instance.getCustomId();
    }
    /**
     * <pre>
     * The custom id in the user's account.
     * </pre>
     *
     * <code>optional string custom_id = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCustomIdBytes() {
      return instance.getCustomIdBytes();
    }
    /**
     * <pre>
     * The custom id in the user's account.
     * </pre>
     *
     * <code>optional string custom_id = 5;</code>
     */
    public Builder setCustomId(
        java.lang.String value) {
      copyOnWrite();
      instance.setCustomId(value);
      return this;
    }
    /**
     * <pre>
     * The custom id in the user's account.
     * </pre>
     *
     * <code>optional string custom_id = 5;</code>
     */
    public Builder clearCustomId() {
      copyOnWrite();
      instance.clearCustomId();
      return this;
    }
    /**
     * <pre>
     * The custom id in the user's account.
     * </pre>
     *
     * <code>optional string custom_id = 5;</code>
     */
    public Builder setCustomIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCustomIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The UNIX time when the user's email was verified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
     */
    public boolean hasVerifyTime() {
      return instance.hasVerifyTime();
    }
    /**
     * <pre>
     * The UNIX time when the user's email was verified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
     */
    public com.google.protobuf.Timestamp getVerifyTime() {
      return instance.getVerifyTime();
    }
    /**
     * <pre>
     * The UNIX time when the user's email was verified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
     */
    public Builder setVerifyTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setVerifyTime(value);
      return this;
      }
    /**
     * <pre>
     * The UNIX time when the user's email was verified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
     */
    public Builder setVerifyTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setVerifyTime(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the user's email was verified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
     */
    public Builder mergeVerifyTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeVerifyTime(value);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the user's email was verified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp verify_time = 6;</code>
     */
    public Builder clearVerifyTime() {  copyOnWrite();
      instance.clearVerifyTime();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.Account)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.heroiclabs.nakama.api.Account();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        devices_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.heroiclabs.nakama.api.Account other = (com.heroiclabs.nakama.api.Account) arg1;
        user_ = visitor.visitMessage(user_, other.user_);
        wallet_ = visitor.visitString(!wallet_.isEmpty(), wallet_,
            !other.wallet_.isEmpty(), other.wallet_);
        email_ = visitor.visitString(!email_.isEmpty(), email_,
            !other.email_.isEmpty(), other.email_);
        devices_= visitor.visitList(devices_, other.devices_);
        customId_ = visitor.visitString(!customId_.isEmpty(), customId_,
            !other.customId_.isEmpty(), other.customId_);
        verifyTime_ = visitor.visitMessage(verifyTime_, other.verifyTime_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.heroiclabs.nakama.api.User.Builder subBuilder = null;
                if (user_ != null) {
                  subBuilder = user_.toBuilder();
                }
                user_ = input.readMessage(com.heroiclabs.nakama.api.User.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(user_);
                  user_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                wallet_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                email_ = s;
                break;
              }
              case 34: {
                if (!devices_.isModifiable()) {
                  devices_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(devices_);
                }
                devices_.add(
                    input.readMessage(com.heroiclabs.nakama.api.AccountDevice.parser(), extensionRegistry));
                break;
              }
              case 42: {
                String s = input.readStringRequireUtf8();

                customId_ = s;
                break;
              }
              case 50: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (verifyTime_ != null) {
                  subBuilder = verifyTime_.toBuilder();
                }
                verifyTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(verifyTime_);
                  verifyTime_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.heroiclabs.nakama.api.Account.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:nakama.api.Account)
  private static final com.heroiclabs.nakama.api.Account DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Account();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.heroiclabs.nakama.api.Account getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Account> PARSER;

  public static com.google.protobuf.Parser<Account> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

