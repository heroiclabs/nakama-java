// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama/api/api.proto

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * A list of channel messages, usually a result of a list operation.
 * </pre>
 *
 * Protobuf type {@code nakama.api.ChannelMessageList}
 */
public  final class ChannelMessageList extends
    com.google.protobuf.GeneratedMessageLite<
        ChannelMessageList, ChannelMessageList.Builder> implements
    // @@protoc_insertion_point(message_implements:nakama.api.ChannelMessageList)
    ChannelMessageListOrBuilder {
  private ChannelMessageList() {
    messages_ = emptyProtobufList();
    nextCursor_ = "";
    prevCursor_ = "";
  }
  private int bitField0_;
  public static final int MESSAGES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<com.heroiclabs.nakama.api.ChannelMessage> messages_;
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  public java.util.List<com.heroiclabs.nakama.api.ChannelMessage> getMessagesList() {
    return messages_;
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  public java.util.List<? extends com.heroiclabs.nakama.api.ChannelMessageOrBuilder> 
      getMessagesOrBuilderList() {
    return messages_;
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  public int getMessagesCount() {
    return messages_.size();
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  public com.heroiclabs.nakama.api.ChannelMessage getMessages(int index) {
    return messages_.get(index);
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  public com.heroiclabs.nakama.api.ChannelMessageOrBuilder getMessagesOrBuilder(
      int index) {
    return messages_.get(index);
  }
  private void ensureMessagesIsMutable() {
    if (!messages_.isModifiable()) {
      messages_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(messages_);
     }
  }

  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void setMessages(
      int index, com.heroiclabs.nakama.api.ChannelMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.set(index, value);
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void setMessages(
      int index, com.heroiclabs.nakama.api.ChannelMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void addMessages(com.heroiclabs.nakama.api.ChannelMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.add(value);
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void addMessages(
      int index, com.heroiclabs.nakama.api.ChannelMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.add(index, value);
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void addMessages(
      com.heroiclabs.nakama.api.ChannelMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.add(builderForValue.build());
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void addMessages(
      int index, com.heroiclabs.nakama.api.ChannelMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void addAllMessages(
      java.lang.Iterable<? extends com.heroiclabs.nakama.api.ChannelMessage> values) {
    ensureMessagesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, messages_);
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void clearMessages() {
    messages_ = emptyProtobufList();
  }
  /**
   * <pre>
   * A list of messages.
   * </pre>
   *
   * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
   */
  private void removeMessages(int index) {
    ensureMessagesIsMutable();
    messages_.remove(index);
  }

  public static final int NEXT_CURSOR_FIELD_NUMBER = 2;
  private java.lang.String nextCursor_;
  /**
   * <pre>
   * The cursor to send when retireving the next page, if any.
   * </pre>
   *
   * <code>optional string next_cursor = 2;</code>
   */
  public java.lang.String getNextCursor() {
    return nextCursor_;
  }
  /**
   * <pre>
   * The cursor to send when retireving the next page, if any.
   * </pre>
   *
   * <code>optional string next_cursor = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNextCursorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(nextCursor_);
  }
  /**
   * <pre>
   * The cursor to send when retireving the next page, if any.
   * </pre>
   *
   * <code>optional string next_cursor = 2;</code>
   */
  private void setNextCursor(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    nextCursor_ = value;
  }
  /**
   * <pre>
   * The cursor to send when retireving the next page, if any.
   * </pre>
   *
   * <code>optional string next_cursor = 2;</code>
   */
  private void clearNextCursor() {
    
    nextCursor_ = getDefaultInstance().getNextCursor();
  }
  /**
   * <pre>
   * The cursor to send when retireving the next page, if any.
   * </pre>
   *
   * <code>optional string next_cursor = 2;</code>
   */
  private void setNextCursorBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    nextCursor_ = value.toStringUtf8();
  }

  public static final int PREV_CURSOR_FIELD_NUMBER = 3;
  private java.lang.String prevCursor_;
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>optional string prev_cursor = 3;</code>
   */
  public java.lang.String getPrevCursor() {
    return prevCursor_;
  }
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>optional string prev_cursor = 3;</code>
   */
  public com.google.protobuf.ByteString
      getPrevCursorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(prevCursor_);
  }
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>optional string prev_cursor = 3;</code>
   */
  private void setPrevCursor(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    prevCursor_ = value;
  }
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>optional string prev_cursor = 3;</code>
   */
  private void clearPrevCursor() {
    
    prevCursor_ = getDefaultInstance().getPrevCursor();
  }
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>optional string prev_cursor = 3;</code>
   */
  private void setPrevCursorBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    prevCursor_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < messages_.size(); i++) {
      output.writeMessage(1, messages_.get(i));
    }
    if (!nextCursor_.isEmpty()) {
      output.writeString(2, getNextCursor());
    }
    if (!prevCursor_.isEmpty()) {
      output.writeString(3, getPrevCursor());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < messages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, messages_.get(i));
    }
    if (!nextCursor_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getNextCursor());
    }
    if (!prevCursor_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getPrevCursor());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.ChannelMessageList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.ChannelMessageList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * A list of channel messages, usually a result of a list operation.
   * </pre>
   *
   * Protobuf type {@code nakama.api.ChannelMessageList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.heroiclabs.nakama.api.ChannelMessageList, Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.ChannelMessageList)
      com.heroiclabs.nakama.api.ChannelMessageListOrBuilder {
    // Construct using com.heroiclabs.nakama.api.ChannelMessageList.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public java.util.List<com.heroiclabs.nakama.api.ChannelMessage> getMessagesList() {
      return java.util.Collections.unmodifiableList(
          instance.getMessagesList());
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public int getMessagesCount() {
      return instance.getMessagesCount();
    }/**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public com.heroiclabs.nakama.api.ChannelMessage getMessages(int index) {
      return instance.getMessages(index);
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder setMessages(
        int index, com.heroiclabs.nakama.api.ChannelMessage value) {
      copyOnWrite();
      instance.setMessages(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder setMessages(
        int index, com.heroiclabs.nakama.api.ChannelMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setMessages(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder addMessages(com.heroiclabs.nakama.api.ChannelMessage value) {
      copyOnWrite();
      instance.addMessages(value);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder addMessages(
        int index, com.heroiclabs.nakama.api.ChannelMessage value) {
      copyOnWrite();
      instance.addMessages(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder addMessages(
        com.heroiclabs.nakama.api.ChannelMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addMessages(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder addMessages(
        int index, com.heroiclabs.nakama.api.ChannelMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addMessages(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder addAllMessages(
        java.lang.Iterable<? extends com.heroiclabs.nakama.api.ChannelMessage> values) {
      copyOnWrite();
      instance.addAllMessages(values);
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder clearMessages() {
      copyOnWrite();
      instance.clearMessages();
      return this;
    }
    /**
     * <pre>
     * A list of messages.
     * </pre>
     *
     * <code>repeated .nakama.api.ChannelMessage messages = 1;</code>
     */
    public Builder removeMessages(int index) {
      copyOnWrite();
      instance.removeMessages(index);
      return this;
    }

    /**
     * <pre>
     * The cursor to send when retireving the next page, if any.
     * </pre>
     *
     * <code>optional string next_cursor = 2;</code>
     */
    public java.lang.String getNextCursor() {
      return instance.getNextCursor();
    }
    /**
     * <pre>
     * The cursor to send when retireving the next page, if any.
     * </pre>
     *
     * <code>optional string next_cursor = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNextCursorBytes() {
      return instance.getNextCursorBytes();
    }
    /**
     * <pre>
     * The cursor to send when retireving the next page, if any.
     * </pre>
     *
     * <code>optional string next_cursor = 2;</code>
     */
    public Builder setNextCursor(
        java.lang.String value) {
      copyOnWrite();
      instance.setNextCursor(value);
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retireving the next page, if any.
     * </pre>
     *
     * <code>optional string next_cursor = 2;</code>
     */
    public Builder clearNextCursor() {
      copyOnWrite();
      instance.clearNextCursor();
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retireving the next page, if any.
     * </pre>
     *
     * <code>optional string next_cursor = 2;</code>
     */
    public Builder setNextCursorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNextCursorBytes(value);
      return this;
    }

    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>optional string prev_cursor = 3;</code>
     */
    public java.lang.String getPrevCursor() {
      return instance.getPrevCursor();
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>optional string prev_cursor = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPrevCursorBytes() {
      return instance.getPrevCursorBytes();
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>optional string prev_cursor = 3;</code>
     */
    public Builder setPrevCursor(
        java.lang.String value) {
      copyOnWrite();
      instance.setPrevCursor(value);
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>optional string prev_cursor = 3;</code>
     */
    public Builder clearPrevCursor() {
      copyOnWrite();
      instance.clearPrevCursor();
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>optional string prev_cursor = 3;</code>
     */
    public Builder setPrevCursorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPrevCursorBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.ChannelMessageList)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.heroiclabs.nakama.api.ChannelMessageList();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        messages_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.heroiclabs.nakama.api.ChannelMessageList other = (com.heroiclabs.nakama.api.ChannelMessageList) arg1;
        messages_= visitor.visitList(messages_, other.messages_);
        nextCursor_ = visitor.visitString(!nextCursor_.isEmpty(), nextCursor_,
            !other.nextCursor_.isEmpty(), other.nextCursor_);
        prevCursor_ = visitor.visitString(!prevCursor_.isEmpty(), prevCursor_,
            !other.prevCursor_.isEmpty(), other.prevCursor_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!messages_.isModifiable()) {
                  messages_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(messages_);
                }
                messages_.add(
                    input.readMessage(com.heroiclabs.nakama.api.ChannelMessage.parser(), extensionRegistry));
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                nextCursor_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                prevCursor_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.heroiclabs.nakama.api.ChannelMessageList.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:nakama.api.ChannelMessageList)
  private static final com.heroiclabs.nakama.api.ChannelMessageList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ChannelMessageList();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.heroiclabs.nakama.api.ChannelMessageList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ChannelMessageList> PARSER;

  public static com.google.protobuf.Parser<ChannelMessageList> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

