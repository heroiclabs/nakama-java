// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama/api/api.proto

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * Represents a complete leaderboard record with all scores and associated metadata.
 * </pre>
 *
 * Protobuf type {@code nakama.api.LeaderboardRecord}
 */
public  final class LeaderboardRecord extends
    com.google.protobuf.GeneratedMessageLite<
        LeaderboardRecord, LeaderboardRecord.Builder> implements
    // @@protoc_insertion_point(message_implements:nakama.api.LeaderboardRecord)
    LeaderboardRecordOrBuilder {
  private LeaderboardRecord() {
    leaderboardId_ = "";
    ownerId_ = "";
    metadata_ = "";
  }
  public static final int LEADERBOARD_ID_FIELD_NUMBER = 1;
  private java.lang.String leaderboardId_;
  /**
   * <pre>
   * The ID of the leaderboard this score belongs to.
   * </pre>
   *
   * <code>optional string leaderboard_id = 1;</code>
   */
  public java.lang.String getLeaderboardId() {
    return leaderboardId_;
  }
  /**
   * <pre>
   * The ID of the leaderboard this score belongs to.
   * </pre>
   *
   * <code>optional string leaderboard_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getLeaderboardIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(leaderboardId_);
  }
  /**
   * <pre>
   * The ID of the leaderboard this score belongs to.
   * </pre>
   *
   * <code>optional string leaderboard_id = 1;</code>
   */
  private void setLeaderboardId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    leaderboardId_ = value;
  }
  /**
   * <pre>
   * The ID of the leaderboard this score belongs to.
   * </pre>
   *
   * <code>optional string leaderboard_id = 1;</code>
   */
  private void clearLeaderboardId() {
    
    leaderboardId_ = getDefaultInstance().getLeaderboardId();
  }
  /**
   * <pre>
   * The ID of the leaderboard this score belongs to.
   * </pre>
   *
   * <code>optional string leaderboard_id = 1;</code>
   */
  private void setLeaderboardIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    leaderboardId_ = value.toStringUtf8();
  }

  public static final int OWNER_ID_FIELD_NUMBER = 2;
  private java.lang.String ownerId_;
  /**
   * <pre>
   * The ID of the score owner, usually a user or group.
   * </pre>
   *
   * <code>optional string owner_id = 2;</code>
   */
  public java.lang.String getOwnerId() {
    return ownerId_;
  }
  /**
   * <pre>
   * The ID of the score owner, usually a user or group.
   * </pre>
   *
   * <code>optional string owner_id = 2;</code>
   */
  public com.google.protobuf.ByteString
      getOwnerIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(ownerId_);
  }
  /**
   * <pre>
   * The ID of the score owner, usually a user or group.
   * </pre>
   *
   * <code>optional string owner_id = 2;</code>
   */
  private void setOwnerId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    ownerId_ = value;
  }
  /**
   * <pre>
   * The ID of the score owner, usually a user or group.
   * </pre>
   *
   * <code>optional string owner_id = 2;</code>
   */
  private void clearOwnerId() {
    
    ownerId_ = getDefaultInstance().getOwnerId();
  }
  /**
   * <pre>
   * The ID of the score owner, usually a user or group.
   * </pre>
   *
   * <code>optional string owner_id = 2;</code>
   */
  private void setOwnerIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    ownerId_ = value.toStringUtf8();
  }

  public static final int USERNAME_FIELD_NUMBER = 3;
  private com.google.protobuf.StringValue username_;
  /**
   * <pre>
   * The username of the score owner, if the owner is a user.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue username = 3;</code>
   */
  public boolean hasUsername() {
    return username_ != null;
  }
  /**
   * <pre>
   * The username of the score owner, if the owner is a user.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue username = 3;</code>
   */
  public com.google.protobuf.StringValue getUsername() {
    return username_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : username_;
  }
  /**
   * <pre>
   * The username of the score owner, if the owner is a user.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue username = 3;</code>
   */
  private void setUsername(com.google.protobuf.StringValue value) {
    if (value == null) {
      throw new NullPointerException();
    }
    username_ = value;
    
    }
  /**
   * <pre>
   * The username of the score owner, if the owner is a user.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue username = 3;</code>
   */
  private void setUsername(
      com.google.protobuf.StringValue.Builder builderForValue) {
    username_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The username of the score owner, if the owner is a user.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue username = 3;</code>
   */
  private void mergeUsername(com.google.protobuf.StringValue value) {
    if (username_ != null &&
        username_ != com.google.protobuf.StringValue.getDefaultInstance()) {
      username_ =
        com.google.protobuf.StringValue.newBuilder(username_).mergeFrom(value).buildPartial();
    } else {
      username_ = value;
    }
    
  }
  /**
   * <pre>
   * The username of the score owner, if the owner is a user.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue username = 3;</code>
   */
  private void clearUsername() {  username_ = null;
    
  }

  public static final int SCORE_FIELD_NUMBER = 4;
  private long score_;
  /**
   * <pre>
   * The score value.
   * </pre>
   *
   * <code>optional int64 score = 4;</code>
   */
  public long getScore() {
    return score_;
  }
  /**
   * <pre>
   * The score value.
   * </pre>
   *
   * <code>optional int64 score = 4;</code>
   */
  private void setScore(long value) {
    
    score_ = value;
  }
  /**
   * <pre>
   * The score value.
   * </pre>
   *
   * <code>optional int64 score = 4;</code>
   */
  private void clearScore() {
    
    score_ = 0L;
  }

  public static final int SUBSCORE_FIELD_NUMBER = 5;
  private long subscore_;
  /**
   * <pre>
   * An optional subscore value.
   * </pre>
   *
   * <code>optional int64 subscore = 5;</code>
   */
  public long getSubscore() {
    return subscore_;
  }
  /**
   * <pre>
   * An optional subscore value.
   * </pre>
   *
   * <code>optional int64 subscore = 5;</code>
   */
  private void setSubscore(long value) {
    
    subscore_ = value;
  }
  /**
   * <pre>
   * An optional subscore value.
   * </pre>
   *
   * <code>optional int64 subscore = 5;</code>
   */
  private void clearSubscore() {
    
    subscore_ = 0L;
  }

  public static final int NUM_SCORE_FIELD_NUMBER = 6;
  private int numScore_;
  /**
   * <pre>
   * The number of submissions to this score record.
   * </pre>
   *
   * <code>optional int32 num_score = 6;</code>
   */
  public int getNumScore() {
    return numScore_;
  }
  /**
   * <pre>
   * The number of submissions to this score record.
   * </pre>
   *
   * <code>optional int32 num_score = 6;</code>
   */
  private void setNumScore(int value) {
    
    numScore_ = value;
  }
  /**
   * <pre>
   * The number of submissions to this score record.
   * </pre>
   *
   * <code>optional int32 num_score = 6;</code>
   */
  private void clearNumScore() {
    
    numScore_ = 0;
  }

  public static final int METADATA_FIELD_NUMBER = 7;
  private java.lang.String metadata_;
  /**
   * <pre>
   * Metadata.
   * </pre>
   *
   * <code>optional string metadata = 7;</code>
   */
  public java.lang.String getMetadata() {
    return metadata_;
  }
  /**
   * <pre>
   * Metadata.
   * </pre>
   *
   * <code>optional string metadata = 7;</code>
   */
  public com.google.protobuf.ByteString
      getMetadataBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(metadata_);
  }
  /**
   * <pre>
   * Metadata.
   * </pre>
   *
   * <code>optional string metadata = 7;</code>
   */
  private void setMetadata(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    metadata_ = value;
  }
  /**
   * <pre>
   * Metadata.
   * </pre>
   *
   * <code>optional string metadata = 7;</code>
   */
  private void clearMetadata() {
    
    metadata_ = getDefaultInstance().getMetadata();
  }
  /**
   * <pre>
   * Metadata.
   * </pre>
   *
   * <code>optional string metadata = 7;</code>
   */
  private void setMetadataBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    metadata_ = value.toStringUtf8();
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 8;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * The UNIX time when the leaderboard record was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
   */
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
   */
  private void setCreateTime(com.google.protobuf.Timestamp value) {
    if (value == null) {
      throw new NullPointerException();
    }
    createTime_ = value;
    
    }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
   */
  private void setCreateTime(
      com.google.protobuf.Timestamp.Builder builderForValue) {
    createTime_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
   */
  private void mergeCreateTime(com.google.protobuf.Timestamp value) {
    if (createTime_ != null &&
        createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      createTime_ =
        com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
    } else {
      createTime_ = value;
    }
    
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
   */
  private void clearCreateTime() {  createTime_ = null;
    
  }

  public static final int UPDATE_TIME_FIELD_NUMBER = 9;
  private com.google.protobuf.Timestamp updateTime_;
  /**
   * <pre>
   * The UNIX time when the leaderboard record was updated.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
   */
  public boolean hasUpdateTime() {
    return updateTime_ != null;
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was updated.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
   */
  public com.google.protobuf.Timestamp getUpdateTime() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was updated.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
   */
  private void setUpdateTime(com.google.protobuf.Timestamp value) {
    if (value == null) {
      throw new NullPointerException();
    }
    updateTime_ = value;
    
    }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was updated.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
   */
  private void setUpdateTime(
      com.google.protobuf.Timestamp.Builder builderForValue) {
    updateTime_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was updated.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
   */
  private void mergeUpdateTime(com.google.protobuf.Timestamp value) {
    if (updateTime_ != null &&
        updateTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      updateTime_ =
        com.google.protobuf.Timestamp.newBuilder(updateTime_).mergeFrom(value).buildPartial();
    } else {
      updateTime_ = value;
    }
    
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record was updated.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
   */
  private void clearUpdateTime() {  updateTime_ = null;
    
  }

  public static final int EXPIRY_TIME_FIELD_NUMBER = 10;
  private com.google.protobuf.Timestamp expiryTime_;
  /**
   * <pre>
   * The UNIX time when the leaderboard record expires.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
   */
  public boolean hasExpiryTime() {
    return expiryTime_ != null;
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record expires.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
   */
  public com.google.protobuf.Timestamp getExpiryTime() {
    return expiryTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiryTime_;
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record expires.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
   */
  private void setExpiryTime(com.google.protobuf.Timestamp value) {
    if (value == null) {
      throw new NullPointerException();
    }
    expiryTime_ = value;
    
    }
  /**
   * <pre>
   * The UNIX time when the leaderboard record expires.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
   */
  private void setExpiryTime(
      com.google.protobuf.Timestamp.Builder builderForValue) {
    expiryTime_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record expires.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
   */
  private void mergeExpiryTime(com.google.protobuf.Timestamp value) {
    if (expiryTime_ != null &&
        expiryTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      expiryTime_ =
        com.google.protobuf.Timestamp.newBuilder(expiryTime_).mergeFrom(value).buildPartial();
    } else {
      expiryTime_ = value;
    }
    
  }
  /**
   * <pre>
   * The UNIX time when the leaderboard record expires.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
   */
  private void clearExpiryTime() {  expiryTime_ = null;
    
  }

  public static final int RANK_FIELD_NUMBER = 11;
  private long rank_;
  /**
   * <pre>
   * The rank of this record.
   * </pre>
   *
   * <code>optional int64 rank = 11;</code>
   */
  public long getRank() {
    return rank_;
  }
  /**
   * <pre>
   * The rank of this record.
   * </pre>
   *
   * <code>optional int64 rank = 11;</code>
   */
  private void setRank(long value) {
    
    rank_ = value;
  }
  /**
   * <pre>
   * The rank of this record.
   * </pre>
   *
   * <code>optional int64 rank = 11;</code>
   */
  private void clearRank() {
    
    rank_ = 0L;
  }

  public static final int MAX_NUM_SCORE_FIELD_NUMBER = 12;
  private int maxNumScore_;
  /**
   * <pre>
   * The maximum number of score updates allowed by the owner.
   * </pre>
   *
   * <code>optional uint32 max_num_score = 12;</code>
   */
  public int getMaxNumScore() {
    return maxNumScore_;
  }
  /**
   * <pre>
   * The maximum number of score updates allowed by the owner.
   * </pre>
   *
   * <code>optional uint32 max_num_score = 12;</code>
   */
  private void setMaxNumScore(int value) {
    
    maxNumScore_ = value;
  }
  /**
   * <pre>
   * The maximum number of score updates allowed by the owner.
   * </pre>
   *
   * <code>optional uint32 max_num_score = 12;</code>
   */
  private void clearMaxNumScore() {
    
    maxNumScore_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!leaderboardId_.isEmpty()) {
      output.writeString(1, getLeaderboardId());
    }
    if (!ownerId_.isEmpty()) {
      output.writeString(2, getOwnerId());
    }
    if (username_ != null) {
      output.writeMessage(3, getUsername());
    }
    if (score_ != 0L) {
      output.writeInt64(4, score_);
    }
    if (subscore_ != 0L) {
      output.writeInt64(5, subscore_);
    }
    if (numScore_ != 0) {
      output.writeInt32(6, numScore_);
    }
    if (!metadata_.isEmpty()) {
      output.writeString(7, getMetadata());
    }
    if (createTime_ != null) {
      output.writeMessage(8, getCreateTime());
    }
    if (updateTime_ != null) {
      output.writeMessage(9, getUpdateTime());
    }
    if (expiryTime_ != null) {
      output.writeMessage(10, getExpiryTime());
    }
    if (rank_ != 0L) {
      output.writeInt64(11, rank_);
    }
    if (maxNumScore_ != 0) {
      output.writeUInt32(12, maxNumScore_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!leaderboardId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getLeaderboardId());
    }
    if (!ownerId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getOwnerId());
    }
    if (username_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getUsername());
    }
    if (score_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, score_);
    }
    if (subscore_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, subscore_);
    }
    if (numScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, numScore_);
    }
    if (!metadata_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(7, getMetadata());
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getCreateTime());
    }
    if (updateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getUpdateTime());
    }
    if (expiryTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getExpiryTime());
    }
    if (rank_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, rank_);
    }
    if (maxNumScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(12, maxNumScore_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecord parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.LeaderboardRecord prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Represents a complete leaderboard record with all scores and associated metadata.
   * </pre>
   *
   * Protobuf type {@code nakama.api.LeaderboardRecord}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.heroiclabs.nakama.api.LeaderboardRecord, Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.LeaderboardRecord)
      com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder {
    // Construct using com.heroiclabs.nakama.api.LeaderboardRecord.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The ID of the leaderboard this score belongs to.
     * </pre>
     *
     * <code>optional string leaderboard_id = 1;</code>
     */
    public java.lang.String getLeaderboardId() {
      return instance.getLeaderboardId();
    }
    /**
     * <pre>
     * The ID of the leaderboard this score belongs to.
     * </pre>
     *
     * <code>optional string leaderboard_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLeaderboardIdBytes() {
      return instance.getLeaderboardIdBytes();
    }
    /**
     * <pre>
     * The ID of the leaderboard this score belongs to.
     * </pre>
     *
     * <code>optional string leaderboard_id = 1;</code>
     */
    public Builder setLeaderboardId(
        java.lang.String value) {
      copyOnWrite();
      instance.setLeaderboardId(value);
      return this;
    }
    /**
     * <pre>
     * The ID of the leaderboard this score belongs to.
     * </pre>
     *
     * <code>optional string leaderboard_id = 1;</code>
     */
    public Builder clearLeaderboardId() {
      copyOnWrite();
      instance.clearLeaderboardId();
      return this;
    }
    /**
     * <pre>
     * The ID of the leaderboard this score belongs to.
     * </pre>
     *
     * <code>optional string leaderboard_id = 1;</code>
     */
    public Builder setLeaderboardIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLeaderboardIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The ID of the score owner, usually a user or group.
     * </pre>
     *
     * <code>optional string owner_id = 2;</code>
     */
    public java.lang.String getOwnerId() {
      return instance.getOwnerId();
    }
    /**
     * <pre>
     * The ID of the score owner, usually a user or group.
     * </pre>
     *
     * <code>optional string owner_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOwnerIdBytes() {
      return instance.getOwnerIdBytes();
    }
    /**
     * <pre>
     * The ID of the score owner, usually a user or group.
     * </pre>
     *
     * <code>optional string owner_id = 2;</code>
     */
    public Builder setOwnerId(
        java.lang.String value) {
      copyOnWrite();
      instance.setOwnerId(value);
      return this;
    }
    /**
     * <pre>
     * The ID of the score owner, usually a user or group.
     * </pre>
     *
     * <code>optional string owner_id = 2;</code>
     */
    public Builder clearOwnerId() {
      copyOnWrite();
      instance.clearOwnerId();
      return this;
    }
    /**
     * <pre>
     * The ID of the score owner, usually a user or group.
     * </pre>
     *
     * <code>optional string owner_id = 2;</code>
     */
    public Builder setOwnerIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOwnerIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The username of the score owner, if the owner is a user.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue username = 3;</code>
     */
    public boolean hasUsername() {
      return instance.hasUsername();
    }
    /**
     * <pre>
     * The username of the score owner, if the owner is a user.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue username = 3;</code>
     */
    public com.google.protobuf.StringValue getUsername() {
      return instance.getUsername();
    }
    /**
     * <pre>
     * The username of the score owner, if the owner is a user.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue username = 3;</code>
     */
    public Builder setUsername(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.setUsername(value);
      return this;
      }
    /**
     * <pre>
     * The username of the score owner, if the owner is a user.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue username = 3;</code>
     */
    public Builder setUsername(
        com.google.protobuf.StringValue.Builder builderForValue) {
      copyOnWrite();
      instance.setUsername(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The username of the score owner, if the owner is a user.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue username = 3;</code>
     */
    public Builder mergeUsername(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.mergeUsername(value);
      return this;
    }
    /**
     * <pre>
     * The username of the score owner, if the owner is a user.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue username = 3;</code>
     */
    public Builder clearUsername() {  copyOnWrite();
      instance.clearUsername();
      return this;
    }

    /**
     * <pre>
     * The score value.
     * </pre>
     *
     * <code>optional int64 score = 4;</code>
     */
    public long getScore() {
      return instance.getScore();
    }
    /**
     * <pre>
     * The score value.
     * </pre>
     *
     * <code>optional int64 score = 4;</code>
     */
    public Builder setScore(long value) {
      copyOnWrite();
      instance.setScore(value);
      return this;
    }
    /**
     * <pre>
     * The score value.
     * </pre>
     *
     * <code>optional int64 score = 4;</code>
     */
    public Builder clearScore() {
      copyOnWrite();
      instance.clearScore();
      return this;
    }

    /**
     * <pre>
     * An optional subscore value.
     * </pre>
     *
     * <code>optional int64 subscore = 5;</code>
     */
    public long getSubscore() {
      return instance.getSubscore();
    }
    /**
     * <pre>
     * An optional subscore value.
     * </pre>
     *
     * <code>optional int64 subscore = 5;</code>
     */
    public Builder setSubscore(long value) {
      copyOnWrite();
      instance.setSubscore(value);
      return this;
    }
    /**
     * <pre>
     * An optional subscore value.
     * </pre>
     *
     * <code>optional int64 subscore = 5;</code>
     */
    public Builder clearSubscore() {
      copyOnWrite();
      instance.clearSubscore();
      return this;
    }

    /**
     * <pre>
     * The number of submissions to this score record.
     * </pre>
     *
     * <code>optional int32 num_score = 6;</code>
     */
    public int getNumScore() {
      return instance.getNumScore();
    }
    /**
     * <pre>
     * The number of submissions to this score record.
     * </pre>
     *
     * <code>optional int32 num_score = 6;</code>
     */
    public Builder setNumScore(int value) {
      copyOnWrite();
      instance.setNumScore(value);
      return this;
    }
    /**
     * <pre>
     * The number of submissions to this score record.
     * </pre>
     *
     * <code>optional int32 num_score = 6;</code>
     */
    public Builder clearNumScore() {
      copyOnWrite();
      instance.clearNumScore();
      return this;
    }

    /**
     * <pre>
     * Metadata.
     * </pre>
     *
     * <code>optional string metadata = 7;</code>
     */
    public java.lang.String getMetadata() {
      return instance.getMetadata();
    }
    /**
     * <pre>
     * Metadata.
     * </pre>
     *
     * <code>optional string metadata = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMetadataBytes() {
      return instance.getMetadataBytes();
    }
    /**
     * <pre>
     * Metadata.
     * </pre>
     *
     * <code>optional string metadata = 7;</code>
     */
    public Builder setMetadata(
        java.lang.String value) {
      copyOnWrite();
      instance.setMetadata(value);
      return this;
    }
    /**
     * <pre>
     * Metadata.
     * </pre>
     *
     * <code>optional string metadata = 7;</code>
     */
    public Builder clearMetadata() {
      copyOnWrite();
      instance.clearMetadata();
      return this;
    }
    /**
     * <pre>
     * Metadata.
     * </pre>
     *
     * <code>optional string metadata = 7;</code>
     */
    public Builder setMetadataBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMetadataBytes(value);
      return this;
    }

    /**
     * <pre>
     * The UNIX time when the leaderboard record was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
     */
    public boolean hasCreateTime() {
      return instance.hasCreateTime();
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      return instance.getCreateTime();
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setCreateTime(value);
      return this;
      }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateTime(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeCreateTime(value);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 8;</code>
     */
    public Builder clearCreateTime() {  copyOnWrite();
      instance.clearCreateTime();
      return this;
    }

    /**
     * <pre>
     * The UNIX time when the leaderboard record was updated.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
     */
    public boolean hasUpdateTime() {
      return instance.hasUpdateTime();
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was updated.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
     */
    public com.google.protobuf.Timestamp getUpdateTime() {
      return instance.getUpdateTime();
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was updated.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setUpdateTime(value);
      return this;
      }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was updated.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
     */
    public Builder setUpdateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setUpdateTime(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was updated.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
     */
    public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeUpdateTime(value);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record was updated.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 9;</code>
     */
    public Builder clearUpdateTime() {  copyOnWrite();
      instance.clearUpdateTime();
      return this;
    }

    /**
     * <pre>
     * The UNIX time when the leaderboard record expires.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
     */
    public boolean hasExpiryTime() {
      return instance.hasExpiryTime();
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record expires.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
     */
    public com.google.protobuf.Timestamp getExpiryTime() {
      return instance.getExpiryTime();
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record expires.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
     */
    public Builder setExpiryTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setExpiryTime(value);
      return this;
      }
    /**
     * <pre>
     * The UNIX time when the leaderboard record expires.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
     */
    public Builder setExpiryTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setExpiryTime(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record expires.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
     */
    public Builder mergeExpiryTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeExpiryTime(value);
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the leaderboard record expires.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expiry_time = 10;</code>
     */
    public Builder clearExpiryTime() {  copyOnWrite();
      instance.clearExpiryTime();
      return this;
    }

    /**
     * <pre>
     * The rank of this record.
     * </pre>
     *
     * <code>optional int64 rank = 11;</code>
     */
    public long getRank() {
      return instance.getRank();
    }
    /**
     * <pre>
     * The rank of this record.
     * </pre>
     *
     * <code>optional int64 rank = 11;</code>
     */
    public Builder setRank(long value) {
      copyOnWrite();
      instance.setRank(value);
      return this;
    }
    /**
     * <pre>
     * The rank of this record.
     * </pre>
     *
     * <code>optional int64 rank = 11;</code>
     */
    public Builder clearRank() {
      copyOnWrite();
      instance.clearRank();
      return this;
    }

    /**
     * <pre>
     * The maximum number of score updates allowed by the owner.
     * </pre>
     *
     * <code>optional uint32 max_num_score = 12;</code>
     */
    public int getMaxNumScore() {
      return instance.getMaxNumScore();
    }
    /**
     * <pre>
     * The maximum number of score updates allowed by the owner.
     * </pre>
     *
     * <code>optional uint32 max_num_score = 12;</code>
     */
    public Builder setMaxNumScore(int value) {
      copyOnWrite();
      instance.setMaxNumScore(value);
      return this;
    }
    /**
     * <pre>
     * The maximum number of score updates allowed by the owner.
     * </pre>
     *
     * <code>optional uint32 max_num_score = 12;</code>
     */
    public Builder clearMaxNumScore() {
      copyOnWrite();
      instance.clearMaxNumScore();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.LeaderboardRecord)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.heroiclabs.nakama.api.LeaderboardRecord();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.heroiclabs.nakama.api.LeaderboardRecord other = (com.heroiclabs.nakama.api.LeaderboardRecord) arg1;
        leaderboardId_ = visitor.visitString(!leaderboardId_.isEmpty(), leaderboardId_,
            !other.leaderboardId_.isEmpty(), other.leaderboardId_);
        ownerId_ = visitor.visitString(!ownerId_.isEmpty(), ownerId_,
            !other.ownerId_.isEmpty(), other.ownerId_);
        username_ = visitor.visitMessage(username_, other.username_);
        score_ = visitor.visitLong(score_ != 0L, score_,
            other.score_ != 0L, other.score_);
        subscore_ = visitor.visitLong(subscore_ != 0L, subscore_,
            other.subscore_ != 0L, other.subscore_);
        numScore_ = visitor.visitInt(numScore_ != 0, numScore_,
            other.numScore_ != 0, other.numScore_);
        metadata_ = visitor.visitString(!metadata_.isEmpty(), metadata_,
            !other.metadata_.isEmpty(), other.metadata_);
        createTime_ = visitor.visitMessage(createTime_, other.createTime_);
        updateTime_ = visitor.visitMessage(updateTime_, other.updateTime_);
        expiryTime_ = visitor.visitMessage(expiryTime_, other.expiryTime_);
        rank_ = visitor.visitLong(rank_ != 0L, rank_,
            other.rank_ != 0L, other.rank_);
        maxNumScore_ = visitor.visitInt(maxNumScore_ != 0, maxNumScore_,
            other.maxNumScore_ != 0, other.maxNumScore_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                leaderboardId_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                ownerId_ = s;
                break;
              }
              case 26: {
                com.google.protobuf.StringValue.Builder subBuilder = null;
                if (username_ != null) {
                  subBuilder = username_.toBuilder();
                }
                username_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(username_);
                  username_ = subBuilder.buildPartial();
                }

                break;
              }
              case 32: {

                score_ = input.readInt64();
                break;
              }
              case 40: {

                subscore_ = input.readInt64();
                break;
              }
              case 48: {

                numScore_ = input.readInt32();
                break;
              }
              case 58: {
                String s = input.readStringRequireUtf8();

                metadata_ = s;
                break;
              }
              case 66: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (createTime_ != null) {
                  subBuilder = createTime_.toBuilder();
                }
                createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(createTime_);
                  createTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 74: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (updateTime_ != null) {
                  subBuilder = updateTime_.toBuilder();
                }
                updateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(updateTime_);
                  updateTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 82: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (expiryTime_ != null) {
                  subBuilder = expiryTime_.toBuilder();
                }
                expiryTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expiryTime_);
                  expiryTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 88: {

                rank_ = input.readInt64();
                break;
              }
              case 96: {

                maxNumScore_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.heroiclabs.nakama.api.LeaderboardRecord.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:nakama.api.LeaderboardRecord)
  private static final com.heroiclabs.nakama.api.LeaderboardRecord DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new LeaderboardRecord();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.heroiclabs.nakama.api.LeaderboardRecord getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<LeaderboardRecord> PARSER;

  public static com.google.protobuf.Parser<LeaderboardRecord> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

