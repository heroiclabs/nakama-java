// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/api/api.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * A set of leaderboard records, may be part of a leaderboard records page or a batch of individual records.
 * </pre>
 *
 * Protobuf type {@code nakama.api.LeaderboardRecordList}
 */
public final class LeaderboardRecordList extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.api.LeaderboardRecordList)
    LeaderboardRecordListOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      LeaderboardRecordList.class.getName());
  }
  // Use LeaderboardRecordList.newBuilder() to construct.
  private LeaderboardRecordList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private LeaderboardRecordList() {
    records_ = java.util.Collections.emptyList();
    ownerRecords_ = java.util.Collections.emptyList();
    nextCursor_ = "";
    prevCursor_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_LeaderboardRecordList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_LeaderboardRecordList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.api.LeaderboardRecordList.class, com.heroiclabs.nakama.api.LeaderboardRecordList.Builder.class);
  }

  public static final int RECORDS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> records_;
  /**
   * <pre>
   * A list of leaderboard records.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
   */
  @java.lang.Override
  public java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> getRecordsList() {
    return records_;
  }
  /**
   * <pre>
   * A list of leaderboard records.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> 
      getRecordsOrBuilderList() {
    return records_;
  }
  /**
   * <pre>
   * A list of leaderboard records.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
   */
  @java.lang.Override
  public int getRecordsCount() {
    return records_.size();
  }
  /**
   * <pre>
   * A list of leaderboard records.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.api.LeaderboardRecord getRecords(int index) {
    return records_.get(index);
  }
  /**
   * <pre>
   * A list of leaderboard records.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder getRecordsOrBuilder(
      int index) {
    return records_.get(index);
  }

  public static final int OWNER_RECORDS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> ownerRecords_;
  /**
   * <pre>
   * A batched set of leaderboard records belonging to specified owners.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
   */
  @java.lang.Override
  public java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> getOwnerRecordsList() {
    return ownerRecords_;
  }
  /**
   * <pre>
   * A batched set of leaderboard records belonging to specified owners.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> 
      getOwnerRecordsOrBuilderList() {
    return ownerRecords_;
  }
  /**
   * <pre>
   * A batched set of leaderboard records belonging to specified owners.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
   */
  @java.lang.Override
  public int getOwnerRecordsCount() {
    return ownerRecords_.size();
  }
  /**
   * <pre>
   * A batched set of leaderboard records belonging to specified owners.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.api.LeaderboardRecord getOwnerRecords(int index) {
    return ownerRecords_.get(index);
  }
  /**
   * <pre>
   * A batched set of leaderboard records belonging to specified owners.
   * </pre>
   *
   * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder getOwnerRecordsOrBuilder(
      int index) {
    return ownerRecords_.get(index);
  }

  public static final int NEXT_CURSOR_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object nextCursor_ = "";
  /**
   * <pre>
   * The cursor to send when retrieving the next page, if any.
   * </pre>
   *
   * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
   * @return The nextCursor.
   */
  @java.lang.Override
  public java.lang.String getNextCursor() {
    java.lang.Object ref = nextCursor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nextCursor_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The cursor to send when retrieving the next page, if any.
   * </pre>
   *
   * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
   * @return The bytes for nextCursor.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNextCursorBytes() {
    java.lang.Object ref = nextCursor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nextCursor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PREV_CURSOR_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object prevCursor_ = "";
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
   * @return The prevCursor.
   */
  @java.lang.Override
  public java.lang.String getPrevCursor() {
    java.lang.Object ref = prevCursor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      prevCursor_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The cursor to send when retrieving the previous page, if any.
   * </pre>
   *
   * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
   * @return The bytes for prevCursor.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPrevCursorBytes() {
    java.lang.Object ref = prevCursor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      prevCursor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RANK_COUNT_FIELD_NUMBER = 5;
  private long rankCount_ = 0L;
  /**
   * <pre>
   * The total number of ranks available.
   * </pre>
   *
   * <code>int64 rank_count = 5 [json_name = "rankCount"];</code>
   * @return The rankCount.
   */
  @java.lang.Override
  public long getRankCount() {
    return rankCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < records_.size(); i++) {
      output.writeMessage(1, records_.get(i));
    }
    for (int i = 0; i < ownerRecords_.size(); i++) {
      output.writeMessage(2, ownerRecords_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(nextCursor_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, nextCursor_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(prevCursor_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, prevCursor_);
    }
    if (rankCount_ != 0L) {
      output.writeInt64(5, rankCount_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < records_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, records_.get(i));
    }
    for (int i = 0; i < ownerRecords_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, ownerRecords_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(nextCursor_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, nextCursor_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(prevCursor_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, prevCursor_);
    }
    if (rankCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, rankCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.api.LeaderboardRecordList)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.api.LeaderboardRecordList other = (com.heroiclabs.nakama.api.LeaderboardRecordList) obj;

    if (!getRecordsList()
        .equals(other.getRecordsList())) return false;
    if (!getOwnerRecordsList()
        .equals(other.getOwnerRecordsList())) return false;
    if (!getNextCursor()
        .equals(other.getNextCursor())) return false;
    if (!getPrevCursor()
        .equals(other.getPrevCursor())) return false;
    if (getRankCount()
        != other.getRankCount()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRecordsCount() > 0) {
      hash = (37 * hash) + RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getRecordsList().hashCode();
    }
    if (getOwnerRecordsCount() > 0) {
      hash = (37 * hash) + OWNER_RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getOwnerRecordsList().hashCode();
    }
    hash = (37 * hash) + NEXT_CURSOR_FIELD_NUMBER;
    hash = (53 * hash) + getNextCursor().hashCode();
    hash = (37 * hash) + PREV_CURSOR_FIELD_NUMBER;
    hash = (53 * hash) + getPrevCursor().hashCode();
    hash = (37 * hash) + RANK_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRankCount());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.api.LeaderboardRecordList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.LeaderboardRecordList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A set of leaderboard records, may be part of a leaderboard records page or a batch of individual records.
   * </pre>
   *
   * Protobuf type {@code nakama.api.LeaderboardRecordList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.LeaderboardRecordList)
      com.heroiclabs.nakama.api.LeaderboardRecordListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_LeaderboardRecordList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_LeaderboardRecordList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.api.LeaderboardRecordList.class, com.heroiclabs.nakama.api.LeaderboardRecordList.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.api.LeaderboardRecordList.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (recordsBuilder_ == null) {
        records_ = java.util.Collections.emptyList();
      } else {
        records_ = null;
        recordsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (ownerRecordsBuilder_ == null) {
        ownerRecords_ = java.util.Collections.emptyList();
      } else {
        ownerRecords_ = null;
        ownerRecordsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      nextCursor_ = "";
      prevCursor_ = "";
      rankCount_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_LeaderboardRecordList_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.LeaderboardRecordList getDefaultInstanceForType() {
      return com.heroiclabs.nakama.api.LeaderboardRecordList.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.LeaderboardRecordList build() {
      com.heroiclabs.nakama.api.LeaderboardRecordList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.LeaderboardRecordList buildPartial() {
      com.heroiclabs.nakama.api.LeaderboardRecordList result = new com.heroiclabs.nakama.api.LeaderboardRecordList(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.heroiclabs.nakama.api.LeaderboardRecordList result) {
      if (recordsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          records_ = java.util.Collections.unmodifiableList(records_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.records_ = records_;
      } else {
        result.records_ = recordsBuilder_.build();
      }
      if (ownerRecordsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          ownerRecords_ = java.util.Collections.unmodifiableList(ownerRecords_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.ownerRecords_ = ownerRecords_;
      } else {
        result.ownerRecords_ = ownerRecordsBuilder_.build();
      }
    }

    private void buildPartial0(com.heroiclabs.nakama.api.LeaderboardRecordList result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.nextCursor_ = nextCursor_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.prevCursor_ = prevCursor_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.rankCount_ = rankCount_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.api.LeaderboardRecordList) {
        return mergeFrom((com.heroiclabs.nakama.api.LeaderboardRecordList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.api.LeaderboardRecordList other) {
      if (other == com.heroiclabs.nakama.api.LeaderboardRecordList.getDefaultInstance()) return this;
      if (recordsBuilder_ == null) {
        if (!other.records_.isEmpty()) {
          if (records_.isEmpty()) {
            records_ = other.records_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRecordsIsMutable();
            records_.addAll(other.records_);
          }
          onChanged();
        }
      } else {
        if (!other.records_.isEmpty()) {
          if (recordsBuilder_.isEmpty()) {
            recordsBuilder_.dispose();
            recordsBuilder_ = null;
            records_ = other.records_;
            bitField0_ = (bitField0_ & ~0x00000001);
            recordsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getRecordsFieldBuilder() : null;
          } else {
            recordsBuilder_.addAllMessages(other.records_);
          }
        }
      }
      if (ownerRecordsBuilder_ == null) {
        if (!other.ownerRecords_.isEmpty()) {
          if (ownerRecords_.isEmpty()) {
            ownerRecords_ = other.ownerRecords_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOwnerRecordsIsMutable();
            ownerRecords_.addAll(other.ownerRecords_);
          }
          onChanged();
        }
      } else {
        if (!other.ownerRecords_.isEmpty()) {
          if (ownerRecordsBuilder_.isEmpty()) {
            ownerRecordsBuilder_.dispose();
            ownerRecordsBuilder_ = null;
            ownerRecords_ = other.ownerRecords_;
            bitField0_ = (bitField0_ & ~0x00000002);
            ownerRecordsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getOwnerRecordsFieldBuilder() : null;
          } else {
            ownerRecordsBuilder_.addAllMessages(other.ownerRecords_);
          }
        }
      }
      if (!other.getNextCursor().isEmpty()) {
        nextCursor_ = other.nextCursor_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getPrevCursor().isEmpty()) {
        prevCursor_ = other.prevCursor_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getRankCount() != 0L) {
        setRankCount(other.getRankCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.heroiclabs.nakama.api.LeaderboardRecord m =
                  input.readMessage(
                      com.heroiclabs.nakama.api.LeaderboardRecord.parser(),
                      extensionRegistry);
              if (recordsBuilder_ == null) {
                ensureRecordsIsMutable();
                records_.add(m);
              } else {
                recordsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              com.heroiclabs.nakama.api.LeaderboardRecord m =
                  input.readMessage(
                      com.heroiclabs.nakama.api.LeaderboardRecord.parser(),
                      extensionRegistry);
              if (ownerRecordsBuilder_ == null) {
                ensureOwnerRecordsIsMutable();
                ownerRecords_.add(m);
              } else {
                ownerRecordsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              nextCursor_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              prevCursor_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              rankCount_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> records_ =
      java.util.Collections.emptyList();
    private void ensureRecordsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        records_ = new java.util.ArrayList<com.heroiclabs.nakama.api.LeaderboardRecord>(records_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.api.LeaderboardRecord, com.heroiclabs.nakama.api.LeaderboardRecord.Builder, com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> recordsBuilder_;

    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> getRecordsList() {
      if (recordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(records_);
      } else {
        return recordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public int getRecordsCount() {
      if (recordsBuilder_ == null) {
        return records_.size();
      } else {
        return recordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord getRecords(int index) {
      if (recordsBuilder_ == null) {
        return records_.get(index);
      } else {
        return recordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder setRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord value) {
      if (recordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordsIsMutable();
        records_.set(index, value);
        onChanged();
      } else {
        recordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder setRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord.Builder builderForValue) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.set(index, builderForValue.build());
        onChanged();
      } else {
        recordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder addRecords(com.heroiclabs.nakama.api.LeaderboardRecord value) {
      if (recordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordsIsMutable();
        records_.add(value);
        onChanged();
      } else {
        recordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder addRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord value) {
      if (recordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordsIsMutable();
        records_.add(index, value);
        onChanged();
      } else {
        recordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder addRecords(
        com.heroiclabs.nakama.api.LeaderboardRecord.Builder builderForValue) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.add(builderForValue.build());
        onChanged();
      } else {
        recordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder addRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord.Builder builderForValue) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.add(index, builderForValue.build());
        onChanged();
      } else {
        recordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder addAllRecords(
        java.lang.Iterable<? extends com.heroiclabs.nakama.api.LeaderboardRecord> values) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, records_);
        onChanged();
      } else {
        recordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder clearRecords() {
      if (recordsBuilder_ == null) {
        records_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        recordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public Builder removeRecords(int index) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.remove(index);
        onChanged();
      } else {
        recordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord.Builder getRecordsBuilder(
        int index) {
      return getRecordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder getRecordsOrBuilder(
        int index) {
      if (recordsBuilder_ == null) {
        return records_.get(index);  } else {
        return recordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public java.util.List<? extends com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> 
         getRecordsOrBuilderList() {
      if (recordsBuilder_ != null) {
        return recordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(records_);
      }
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord.Builder addRecordsBuilder() {
      return getRecordsFieldBuilder().addBuilder(
          com.heroiclabs.nakama.api.LeaderboardRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord.Builder addRecordsBuilder(
        int index) {
      return getRecordsFieldBuilder().addBuilder(
          index, com.heroiclabs.nakama.api.LeaderboardRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of leaderboard records.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord records = 1 [json_name = "records"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord.Builder> 
         getRecordsBuilderList() {
      return getRecordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.api.LeaderboardRecord, com.heroiclabs.nakama.api.LeaderboardRecord.Builder, com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> 
        getRecordsFieldBuilder() {
      if (recordsBuilder_ == null) {
        recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.heroiclabs.nakama.api.LeaderboardRecord, com.heroiclabs.nakama.api.LeaderboardRecord.Builder, com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder>(
                records_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        records_ = null;
      }
      return recordsBuilder_;
    }

    private java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> ownerRecords_ =
      java.util.Collections.emptyList();
    private void ensureOwnerRecordsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        ownerRecords_ = new java.util.ArrayList<com.heroiclabs.nakama.api.LeaderboardRecord>(ownerRecords_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.api.LeaderboardRecord, com.heroiclabs.nakama.api.LeaderboardRecord.Builder, com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> ownerRecordsBuilder_;

    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord> getOwnerRecordsList() {
      if (ownerRecordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ownerRecords_);
      } else {
        return ownerRecordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public int getOwnerRecordsCount() {
      if (ownerRecordsBuilder_ == null) {
        return ownerRecords_.size();
      } else {
        return ownerRecordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord getOwnerRecords(int index) {
      if (ownerRecordsBuilder_ == null) {
        return ownerRecords_.get(index);
      } else {
        return ownerRecordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder setOwnerRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord value) {
      if (ownerRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOwnerRecordsIsMutable();
        ownerRecords_.set(index, value);
        onChanged();
      } else {
        ownerRecordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder setOwnerRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord.Builder builderForValue) {
      if (ownerRecordsBuilder_ == null) {
        ensureOwnerRecordsIsMutable();
        ownerRecords_.set(index, builderForValue.build());
        onChanged();
      } else {
        ownerRecordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder addOwnerRecords(com.heroiclabs.nakama.api.LeaderboardRecord value) {
      if (ownerRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOwnerRecordsIsMutable();
        ownerRecords_.add(value);
        onChanged();
      } else {
        ownerRecordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder addOwnerRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord value) {
      if (ownerRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOwnerRecordsIsMutable();
        ownerRecords_.add(index, value);
        onChanged();
      } else {
        ownerRecordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder addOwnerRecords(
        com.heroiclabs.nakama.api.LeaderboardRecord.Builder builderForValue) {
      if (ownerRecordsBuilder_ == null) {
        ensureOwnerRecordsIsMutable();
        ownerRecords_.add(builderForValue.build());
        onChanged();
      } else {
        ownerRecordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder addOwnerRecords(
        int index, com.heroiclabs.nakama.api.LeaderboardRecord.Builder builderForValue) {
      if (ownerRecordsBuilder_ == null) {
        ensureOwnerRecordsIsMutable();
        ownerRecords_.add(index, builderForValue.build());
        onChanged();
      } else {
        ownerRecordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder addAllOwnerRecords(
        java.lang.Iterable<? extends com.heroiclabs.nakama.api.LeaderboardRecord> values) {
      if (ownerRecordsBuilder_ == null) {
        ensureOwnerRecordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ownerRecords_);
        onChanged();
      } else {
        ownerRecordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder clearOwnerRecords() {
      if (ownerRecordsBuilder_ == null) {
        ownerRecords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        ownerRecordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public Builder removeOwnerRecords(int index) {
      if (ownerRecordsBuilder_ == null) {
        ensureOwnerRecordsIsMutable();
        ownerRecords_.remove(index);
        onChanged();
      } else {
        ownerRecordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord.Builder getOwnerRecordsBuilder(
        int index) {
      return getOwnerRecordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder getOwnerRecordsOrBuilder(
        int index) {
      if (ownerRecordsBuilder_ == null) {
        return ownerRecords_.get(index);  } else {
        return ownerRecordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public java.util.List<? extends com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> 
         getOwnerRecordsOrBuilderList() {
      if (ownerRecordsBuilder_ != null) {
        return ownerRecordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ownerRecords_);
      }
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord.Builder addOwnerRecordsBuilder() {
      return getOwnerRecordsFieldBuilder().addBuilder(
          com.heroiclabs.nakama.api.LeaderboardRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public com.heroiclabs.nakama.api.LeaderboardRecord.Builder addOwnerRecordsBuilder(
        int index) {
      return getOwnerRecordsFieldBuilder().addBuilder(
          index, com.heroiclabs.nakama.api.LeaderboardRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * A batched set of leaderboard records belonging to specified owners.
     * </pre>
     *
     * <code>repeated .nakama.api.LeaderboardRecord owner_records = 2 [json_name = "ownerRecords"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.api.LeaderboardRecord.Builder> 
         getOwnerRecordsBuilderList() {
      return getOwnerRecordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.api.LeaderboardRecord, com.heroiclabs.nakama.api.LeaderboardRecord.Builder, com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder> 
        getOwnerRecordsFieldBuilder() {
      if (ownerRecordsBuilder_ == null) {
        ownerRecordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.heroiclabs.nakama.api.LeaderboardRecord, com.heroiclabs.nakama.api.LeaderboardRecord.Builder, com.heroiclabs.nakama.api.LeaderboardRecordOrBuilder>(
                ownerRecords_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        ownerRecords_ = null;
      }
      return ownerRecordsBuilder_;
    }

    private java.lang.Object nextCursor_ = "";
    /**
     * <pre>
     * The cursor to send when retrieving the next page, if any.
     * </pre>
     *
     * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
     * @return The nextCursor.
     */
    public java.lang.String getNextCursor() {
      java.lang.Object ref = nextCursor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextCursor_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The cursor to send when retrieving the next page, if any.
     * </pre>
     *
     * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
     * @return The bytes for nextCursor.
     */
    public com.google.protobuf.ByteString
        getNextCursorBytes() {
      java.lang.Object ref = nextCursor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextCursor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The cursor to send when retrieving the next page, if any.
     * </pre>
     *
     * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
     * @param value The nextCursor to set.
     * @return This builder for chaining.
     */
    public Builder setNextCursor(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      nextCursor_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retrieving the next page, if any.
     * </pre>
     *
     * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNextCursor() {
      nextCursor_ = getDefaultInstance().getNextCursor();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retrieving the next page, if any.
     * </pre>
     *
     * <code>string next_cursor = 3 [json_name = "nextCursor"];</code>
     * @param value The bytes for nextCursor to set.
     * @return This builder for chaining.
     */
    public Builder setNextCursorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      nextCursor_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object prevCursor_ = "";
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
     * @return The prevCursor.
     */
    public java.lang.String getPrevCursor() {
      java.lang.Object ref = prevCursor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        prevCursor_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
     * @return The bytes for prevCursor.
     */
    public com.google.protobuf.ByteString
        getPrevCursorBytes() {
      java.lang.Object ref = prevCursor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prevCursor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
     * @param value The prevCursor to set.
     * @return This builder for chaining.
     */
    public Builder setPrevCursor(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      prevCursor_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrevCursor() {
      prevCursor_ = getDefaultInstance().getPrevCursor();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cursor to send when retrieving the previous page, if any.
     * </pre>
     *
     * <code>string prev_cursor = 4 [json_name = "prevCursor"];</code>
     * @param value The bytes for prevCursor to set.
     * @return This builder for chaining.
     */
    public Builder setPrevCursorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      prevCursor_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private long rankCount_ ;
    /**
     * <pre>
     * The total number of ranks available.
     * </pre>
     *
     * <code>int64 rank_count = 5 [json_name = "rankCount"];</code>
     * @return The rankCount.
     */
    @java.lang.Override
    public long getRankCount() {
      return rankCount_;
    }
    /**
     * <pre>
     * The total number of ranks available.
     * </pre>
     *
     * <code>int64 rank_count = 5 [json_name = "rankCount"];</code>
     * @param value The rankCount to set.
     * @return This builder for chaining.
     */
    public Builder setRankCount(long value) {

      rankCount_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of ranks available.
     * </pre>
     *
     * <code>int64 rank_count = 5 [json_name = "rankCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRankCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      rankCount_ = 0L;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.LeaderboardRecordList)
  }

  // @@protoc_insertion_point(class_scope:nakama.api.LeaderboardRecordList)
  private static final com.heroiclabs.nakama.api.LeaderboardRecordList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.api.LeaderboardRecordList();
  }

  public static com.heroiclabs.nakama.api.LeaderboardRecordList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LeaderboardRecordList>
      PARSER = new com.google.protobuf.AbstractParser<LeaderboardRecordList>() {
    @java.lang.Override
    public LeaderboardRecordList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LeaderboardRecordList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LeaderboardRecordList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.api.LeaderboardRecordList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

