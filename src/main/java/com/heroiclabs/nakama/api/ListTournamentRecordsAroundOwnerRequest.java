// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/api/api.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * List tournament records from a given tournament around the owner.
 * </pre>
 *
 * Protobuf type {@code nakama.api.ListTournamentRecordsAroundOwnerRequest}
 */
public final class ListTournamentRecordsAroundOwnerRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.api.ListTournamentRecordsAroundOwnerRequest)
    ListTournamentRecordsAroundOwnerRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      ListTournamentRecordsAroundOwnerRequest.class.getName());
  }
  // Use ListTournamentRecordsAroundOwnerRequest.newBuilder() to construct.
  private ListTournamentRecordsAroundOwnerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ListTournamentRecordsAroundOwnerRequest() {
    tournamentId_ = "";
    ownerId_ = "";
    cursor_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_ListTournamentRecordsAroundOwnerRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_ListTournamentRecordsAroundOwnerRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.class, com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.Builder.class);
  }

  private int bitField0_;
  public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object tournamentId_ = "";
  /**
   * <pre>
   * The ID of the tournament to list for.
   * </pre>
   *
   * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
   * @return The tournamentId.
   */
  @java.lang.Override
  public java.lang.String getTournamentId() {
    java.lang.Object ref = tournamentId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tournamentId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the tournament to list for.
   * </pre>
   *
   * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
   * @return The bytes for tournamentId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTournamentIdBytes() {
    java.lang.Object ref = tournamentId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tournamentId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LIMIT_FIELD_NUMBER = 2;
  private com.google.protobuf.UInt32Value limit_;
  /**
   * <pre>
   * Max number of records to return. Between 1 and 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
   * @return Whether the limit field is set.
   */
  @java.lang.Override
  public boolean hasLimit() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Max number of records to return. Between 1 and 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
   * @return The limit.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getLimit() {
    return limit_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : limit_;
  }
  /**
   * <pre>
   * Max number of records to return. Between 1 and 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getLimitOrBuilder() {
    return limit_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : limit_;
  }

  public static final int OWNER_ID_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object ownerId_ = "";
  /**
   * <pre>
   * The owner to retrieve records around.
   * </pre>
   *
   * <code>string owner_id = 3 [json_name = "ownerId"];</code>
   * @return The ownerId.
   */
  @java.lang.Override
  public java.lang.String getOwnerId() {
    java.lang.Object ref = ownerId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ownerId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The owner to retrieve records around.
   * </pre>
   *
   * <code>string owner_id = 3 [json_name = "ownerId"];</code>
   * @return The bytes for ownerId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOwnerIdBytes() {
    java.lang.Object ref = ownerId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ownerId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXPIRY_FIELD_NUMBER = 4;
  private com.google.protobuf.Int64Value expiry_;
  /**
   * <pre>
   * Expiry in seconds (since epoch) to begin fetching records from.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
   * @return Whether the expiry field is set.
   */
  @java.lang.Override
  public boolean hasExpiry() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Expiry in seconds (since epoch) to begin fetching records from.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
   * @return The expiry.
   */
  @java.lang.Override
  public com.google.protobuf.Int64Value getExpiry() {
    return expiry_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : expiry_;
  }
  /**
   * <pre>
   * Expiry in seconds (since epoch) to begin fetching records from.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int64ValueOrBuilder getExpiryOrBuilder() {
    return expiry_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : expiry_;
  }

  public static final int CURSOR_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cursor_ = "";
  /**
   * <pre>
   * A next or previous page cursor.
   * </pre>
   *
   * <code>string cursor = 5 [json_name = "cursor"];</code>
   * @return The cursor.
   */
  @java.lang.Override
  public java.lang.String getCursor() {
    java.lang.Object ref = cursor_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cursor_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A next or previous page cursor.
   * </pre>
   *
   * <code>string cursor = 5 [json_name = "cursor"];</code>
   * @return The bytes for cursor.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCursorBytes() {
    java.lang.Object ref = cursor_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cursor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(tournamentId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, tournamentId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getLimit());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ownerId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, ownerId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getExpiry());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(cursor_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, cursor_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(tournamentId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, tournamentId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLimit());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ownerId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, ownerId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getExpiry());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(cursor_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, cursor_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest other = (com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest) obj;

    if (!getTournamentId()
        .equals(other.getTournamentId())) return false;
    if (hasLimit() != other.hasLimit()) return false;
    if (hasLimit()) {
      if (!getLimit()
          .equals(other.getLimit())) return false;
    }
    if (!getOwnerId()
        .equals(other.getOwnerId())) return false;
    if (hasExpiry() != other.hasExpiry()) return false;
    if (hasExpiry()) {
      if (!getExpiry()
          .equals(other.getExpiry())) return false;
    }
    if (!getCursor()
        .equals(other.getCursor())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTournamentId().hashCode();
    if (hasLimit()) {
      hash = (37 * hash) + LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getLimit().hashCode();
    }
    hash = (37 * hash) + OWNER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getOwnerId().hashCode();
    if (hasExpiry()) {
      hash = (37 * hash) + EXPIRY_FIELD_NUMBER;
      hash = (53 * hash) + getExpiry().hashCode();
    }
    hash = (37 * hash) + CURSOR_FIELD_NUMBER;
    hash = (53 * hash) + getCursor().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * List tournament records from a given tournament around the owner.
   * </pre>
   *
   * Protobuf type {@code nakama.api.ListTournamentRecordsAroundOwnerRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.ListTournamentRecordsAroundOwnerRequest)
      com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_ListTournamentRecordsAroundOwnerRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_ListTournamentRecordsAroundOwnerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.class, com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getLimitFieldBuilder();
        getExpiryFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tournamentId_ = "";
      limit_ = null;
      if (limitBuilder_ != null) {
        limitBuilder_.dispose();
        limitBuilder_ = null;
      }
      ownerId_ = "";
      expiry_ = null;
      if (expiryBuilder_ != null) {
        expiryBuilder_.dispose();
        expiryBuilder_ = null;
      }
      cursor_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_ListTournamentRecordsAroundOwnerRequest_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest getDefaultInstanceForType() {
      return com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest build() {
      com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest buildPartial() {
      com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest result = new com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tournamentId_ = tournamentId_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.limit_ = limitBuilder_ == null
            ? limit_
            : limitBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.ownerId_ = ownerId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.expiry_ = expiryBuilder_ == null
            ? expiry_
            : expiryBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.cursor_ = cursor_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest) {
        return mergeFrom((com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest other) {
      if (other == com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest.getDefaultInstance()) return this;
      if (!other.getTournamentId().isEmpty()) {
        tournamentId_ = other.tournamentId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasLimit()) {
        mergeLimit(other.getLimit());
      }
      if (!other.getOwnerId().isEmpty()) {
        ownerId_ = other.ownerId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasExpiry()) {
        mergeExpiry(other.getExpiry());
      }
      if (!other.getCursor().isEmpty()) {
        cursor_ = other.cursor_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tournamentId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getLimitFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              ownerId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getExpiryFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              cursor_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object tournamentId_ = "";
    /**
     * <pre>
     * The ID of the tournament to list for.
     * </pre>
     *
     * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
     * @return The tournamentId.
     */
    public java.lang.String getTournamentId() {
      java.lang.Object ref = tournamentId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tournamentId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the tournament to list for.
     * </pre>
     *
     * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
     * @return The bytes for tournamentId.
     */
    public com.google.protobuf.ByteString
        getTournamentIdBytes() {
      java.lang.Object ref = tournamentId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tournamentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the tournament to list for.
     * </pre>
     *
     * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
     * @param value The tournamentId to set.
     * @return This builder for chaining.
     */
    public Builder setTournamentId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      tournamentId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the tournament to list for.
     * </pre>
     *
     * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTournamentId() {
      tournamentId_ = getDefaultInstance().getTournamentId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the tournament to list for.
     * </pre>
     *
     * <code>string tournament_id = 1 [json_name = "tournamentId"];</code>
     * @param value The bytes for tournamentId to set.
     * @return This builder for chaining.
     */
    public Builder setTournamentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      tournamentId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value limit_;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> limitBuilder_;
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     * @return Whether the limit field is set.
     */
    public boolean hasLimit() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     * @return The limit.
     */
    public com.google.protobuf.UInt32Value getLimit() {
      if (limitBuilder_ == null) {
        return limit_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : limit_;
      } else {
        return limitBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    public Builder setLimit(com.google.protobuf.UInt32Value value) {
      if (limitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        limit_ = value;
      } else {
        limitBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    public Builder setLimit(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (limitBuilder_ == null) {
        limit_ = builderForValue.build();
      } else {
        limitBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    public Builder mergeLimit(com.google.protobuf.UInt32Value value) {
      if (limitBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          limit_ != null &&
          limit_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
          getLimitBuilder().mergeFrom(value);
        } else {
          limit_ = value;
        }
      } else {
        limitBuilder_.mergeFrom(value);
      }
      if (limit_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    public Builder clearLimit() {
      bitField0_ = (bitField0_ & ~0x00000002);
      limit_ = null;
      if (limitBuilder_ != null) {
        limitBuilder_.dispose();
        limitBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    public com.google.protobuf.UInt32Value.Builder getLimitBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getLimitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getLimitOrBuilder() {
      if (limitBuilder_ != null) {
        return limitBuilder_.getMessageOrBuilder();
      } else {
        return limit_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : limit_;
      }
    }
    /**
     * <pre>
     * Max number of records to return. Between 1 and 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value limit = 2 [json_name = "limit"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getLimitFieldBuilder() {
      if (limitBuilder_ == null) {
        limitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getLimit(),
                getParentForChildren(),
                isClean());
        limit_ = null;
      }
      return limitBuilder_;
    }

    private java.lang.Object ownerId_ = "";
    /**
     * <pre>
     * The owner to retrieve records around.
     * </pre>
     *
     * <code>string owner_id = 3 [json_name = "ownerId"];</code>
     * @return The ownerId.
     */
    public java.lang.String getOwnerId() {
      java.lang.Object ref = ownerId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ownerId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The owner to retrieve records around.
     * </pre>
     *
     * <code>string owner_id = 3 [json_name = "ownerId"];</code>
     * @return The bytes for ownerId.
     */
    public com.google.protobuf.ByteString
        getOwnerIdBytes() {
      java.lang.Object ref = ownerId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ownerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The owner to retrieve records around.
     * </pre>
     *
     * <code>string owner_id = 3 [json_name = "ownerId"];</code>
     * @param value The ownerId to set.
     * @return This builder for chaining.
     */
    public Builder setOwnerId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ownerId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The owner to retrieve records around.
     * </pre>
     *
     * <code>string owner_id = 3 [json_name = "ownerId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOwnerId() {
      ownerId_ = getDefaultInstance().getOwnerId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The owner to retrieve records around.
     * </pre>
     *
     * <code>string owner_id = 3 [json_name = "ownerId"];</code>
     * @param value The bytes for ownerId to set.
     * @return This builder for chaining.
     */
    public Builder setOwnerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ownerId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.Int64Value expiry_;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> expiryBuilder_;
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     * @return Whether the expiry field is set.
     */
    public boolean hasExpiry() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     * @return The expiry.
     */
    public com.google.protobuf.Int64Value getExpiry() {
      if (expiryBuilder_ == null) {
        return expiry_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : expiry_;
      } else {
        return expiryBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    public Builder setExpiry(com.google.protobuf.Int64Value value) {
      if (expiryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expiry_ = value;
      } else {
        expiryBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    public Builder setExpiry(
        com.google.protobuf.Int64Value.Builder builderForValue) {
      if (expiryBuilder_ == null) {
        expiry_ = builderForValue.build();
      } else {
        expiryBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    public Builder mergeExpiry(com.google.protobuf.Int64Value value) {
      if (expiryBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          expiry_ != null &&
          expiry_ != com.google.protobuf.Int64Value.getDefaultInstance()) {
          getExpiryBuilder().mergeFrom(value);
        } else {
          expiry_ = value;
        }
      } else {
        expiryBuilder_.mergeFrom(value);
      }
      if (expiry_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    public Builder clearExpiry() {
      bitField0_ = (bitField0_ & ~0x00000008);
      expiry_ = null;
      if (expiryBuilder_ != null) {
        expiryBuilder_.dispose();
        expiryBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    public com.google.protobuf.Int64Value.Builder getExpiryBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getExpiryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getExpiryOrBuilder() {
      if (expiryBuilder_ != null) {
        return expiryBuilder_.getMessageOrBuilder();
      } else {
        return expiry_ == null ?
            com.google.protobuf.Int64Value.getDefaultInstance() : expiry_;
      }
    }
    /**
     * <pre>
     * Expiry in seconds (since epoch) to begin fetching records from.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value expiry = 4 [json_name = "expiry"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
        getExpiryFieldBuilder() {
      if (expiryBuilder_ == null) {
        expiryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                getExpiry(),
                getParentForChildren(),
                isClean());
        expiry_ = null;
      }
      return expiryBuilder_;
    }

    private java.lang.Object cursor_ = "";
    /**
     * <pre>
     * A next or previous page cursor.
     * </pre>
     *
     * <code>string cursor = 5 [json_name = "cursor"];</code>
     * @return The cursor.
     */
    public java.lang.String getCursor() {
      java.lang.Object ref = cursor_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cursor_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A next or previous page cursor.
     * </pre>
     *
     * <code>string cursor = 5 [json_name = "cursor"];</code>
     * @return The bytes for cursor.
     */
    public com.google.protobuf.ByteString
        getCursorBytes() {
      java.lang.Object ref = cursor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cursor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A next or previous page cursor.
     * </pre>
     *
     * <code>string cursor = 5 [json_name = "cursor"];</code>
     * @param value The cursor to set.
     * @return This builder for chaining.
     */
    public Builder setCursor(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cursor_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A next or previous page cursor.
     * </pre>
     *
     * <code>string cursor = 5 [json_name = "cursor"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCursor() {
      cursor_ = getDefaultInstance().getCursor();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A next or previous page cursor.
     * </pre>
     *
     * <code>string cursor = 5 [json_name = "cursor"];</code>
     * @param value The bytes for cursor to set.
     * @return This builder for chaining.
     */
    public Builder setCursorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cursor_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.ListTournamentRecordsAroundOwnerRequest)
  }

  // @@protoc_insertion_point(class_scope:nakama.api.ListTournamentRecordsAroundOwnerRequest)
  private static final com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest();
  }

  public static com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListTournamentRecordsAroundOwnerRequest>
      PARSER = new com.google.protobuf.AbstractParser<ListTournamentRecordsAroundOwnerRequest>() {
    @java.lang.Override
    public ListTournamentRecordsAroundOwnerRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ListTournamentRecordsAroundOwnerRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListTournamentRecordsAroundOwnerRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.api.ListTournamentRecordsAroundOwnerRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

