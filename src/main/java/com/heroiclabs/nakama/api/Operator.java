// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/api/api.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * Operator that can be used to override the one set in the leaderboard.
 * </pre>
 *
 * Protobuf enum {@code nakama.api.Operator}
 */
public enum Operator
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Do not override the leaderboard operator.
   * </pre>
   *
   * <code>NO_OVERRIDE = 0;</code>
   */
  NO_OVERRIDE(0),
  /**
   * <pre>
   * Override the leaderboard operator with BEST.
   * </pre>
   *
   * <code>BEST = 1;</code>
   */
  BEST(1),
  /**
   * <pre>
   * Override the leaderboard operator with SET.
   * </pre>
   *
   * <code>SET = 2;</code>
   */
  SET(2),
  /**
   * <pre>
   * Override the leaderboard operator with INCREMENT.
   * </pre>
   *
   * <code>INCREMENT = 3;</code>
   */
  INCREMENT(3),
  /**
   * <pre>
   * Override the leaderboard operator with DECREMENT.
   * </pre>
   *
   * <code>DECREMENT = 4;</code>
   */
  DECREMENT(4),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      Operator.class.getName());
  }
  /**
   * <pre>
   * Do not override the leaderboard operator.
   * </pre>
   *
   * <code>NO_OVERRIDE = 0;</code>
   */
  public static final int NO_OVERRIDE_VALUE = 0;
  /**
   * <pre>
   * Override the leaderboard operator with BEST.
   * </pre>
   *
   * <code>BEST = 1;</code>
   */
  public static final int BEST_VALUE = 1;
  /**
   * <pre>
   * Override the leaderboard operator with SET.
   * </pre>
   *
   * <code>SET = 2;</code>
   */
  public static final int SET_VALUE = 2;
  /**
   * <pre>
   * Override the leaderboard operator with INCREMENT.
   * </pre>
   *
   * <code>INCREMENT = 3;</code>
   */
  public static final int INCREMENT_VALUE = 3;
  /**
   * <pre>
   * Override the leaderboard operator with DECREMENT.
   * </pre>
   *
   * <code>DECREMENT = 4;</code>
   */
  public static final int DECREMENT_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Operator valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Operator forNumber(int value) {
    switch (value) {
      case 0: return NO_OVERRIDE;
      case 1: return BEST;
      case 2: return SET;
      case 3: return INCREMENT;
      case 4: return DECREMENT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Operator>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Operator> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Operator>() {
          public Operator findValueByNumber(int number) {
            return Operator.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.heroiclabs.nakama.api.ApiProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final Operator[] VALUES = values();

  public static Operator valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Operator(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:nakama.api.Operator)
}

