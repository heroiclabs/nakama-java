// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/api/api.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * A tournament on the server.
 * </pre>
 *
 * Protobuf type {@code nakama.api.Tournament}
 */
public final class Tournament extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.api.Tournament)
    TournamentOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      Tournament.class.getName());
  }
  // Use Tournament.newBuilder() to construct.
  private Tournament(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Tournament() {
    id_ = "";
    title_ = "";
    description_ = "";
    metadata_ = "";
    operator_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_Tournament_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_Tournament_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.api.Tournament.class, com.heroiclabs.nakama.api.Tournament.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * The ID of the tournament.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the tournament.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TITLE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object title_ = "";
  /**
   * <pre>
   * The title for the tournament.
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return The title.
   */
  @java.lang.Override
  public java.lang.String getTitle() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      title_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The title for the tournament.
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return The bytes for title.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTitleBytes() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      title_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * The description of the tournament. May be blank.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The description of the tournament. May be blank.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CATEGORY_FIELD_NUMBER = 4;
  private int category_ = 0;
  /**
   * <pre>
   * The category of the tournament. e.g. "vip" could be category 1.
   * </pre>
   *
   * <code>uint32 category = 4 [json_name = "category"];</code>
   * @return The category.
   */
  @java.lang.Override
  public int getCategory() {
    return category_;
  }

  public static final int SORT_ORDER_FIELD_NUMBER = 5;
  private int sortOrder_ = 0;
  /**
   * <pre>
   * ASC (0) or DESC (1) sort mode of scores in the tournament.
   * </pre>
   *
   * <code>uint32 sort_order = 5 [json_name = "sortOrder"];</code>
   * @return The sortOrder.
   */
  @java.lang.Override
  public int getSortOrder() {
    return sortOrder_;
  }

  public static final int SIZE_FIELD_NUMBER = 6;
  private int size_ = 0;
  /**
   * <pre>
   * The current number of players in the tournament.
   * </pre>
   *
   * <code>uint32 size = 6 [json_name = "size"];</code>
   * @return The size.
   */
  @java.lang.Override
  public int getSize() {
    return size_;
  }

  public static final int MAX_SIZE_FIELD_NUMBER = 7;
  private int maxSize_ = 0;
  /**
   * <pre>
   * The maximum number of players for the tournament.
   * </pre>
   *
   * <code>uint32 max_size = 7 [json_name = "maxSize"];</code>
   * @return The maxSize.
   */
  @java.lang.Override
  public int getMaxSize() {
    return maxSize_;
  }

  public static final int MAX_NUM_SCORE_FIELD_NUMBER = 8;
  private int maxNumScore_ = 0;
  /**
   * <pre>
   * The maximum score updates allowed per player for the current tournament.
   * </pre>
   *
   * <code>uint32 max_num_score = 8 [json_name = "maxNumScore"];</code>
   * @return The maxNumScore.
   */
  @java.lang.Override
  public int getMaxNumScore() {
    return maxNumScore_;
  }

  public static final int CAN_ENTER_FIELD_NUMBER = 9;
  private boolean canEnter_ = false;
  /**
   * <pre>
   * True if the tournament is active and can enter. A computed value.
   * </pre>
   *
   * <code>bool can_enter = 9 [json_name = "canEnter"];</code>
   * @return The canEnter.
   */
  @java.lang.Override
  public boolean getCanEnter() {
    return canEnter_;
  }

  public static final int END_ACTIVE_FIELD_NUMBER = 10;
  private int endActive_ = 0;
  /**
   * <pre>
   * The UNIX time when the tournament stops being active until next reset. A computed value.
   * </pre>
   *
   * <code>uint32 end_active = 10 [json_name = "endActive"];</code>
   * @return The endActive.
   */
  @java.lang.Override
  public int getEndActive() {
    return endActive_;
  }

  public static final int NEXT_RESET_FIELD_NUMBER = 11;
  private int nextReset_ = 0;
  /**
   * <pre>
   * The UNIX time when the tournament is next playable. A computed value.
   * </pre>
   *
   * <code>uint32 next_reset = 11 [json_name = "nextReset"];</code>
   * @return The nextReset.
   */
  @java.lang.Override
  public int getNextReset() {
    return nextReset_;
  }

  public static final int METADATA_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private volatile java.lang.Object metadata_ = "";
  /**
   * <pre>
   * Additional information stored as a JSON object.
   * </pre>
   *
   * <code>string metadata = 12 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  @java.lang.Override
  public java.lang.String getMetadata() {
    java.lang.Object ref = metadata_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      metadata_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Additional information stored as a JSON object.
   * </pre>
   *
   * <code>string metadata = 12 [json_name = "metadata"];</code>
   * @return The bytes for metadata.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMetadataBytes() {
    java.lang.Object ref = metadata_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      metadata_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 13;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
   * @return Whether the createTime field is set.
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
   * @return The createTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }

  public static final int START_TIME_FIELD_NUMBER = 14;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
   * @return Whether the startTime field is set.
   */
  @java.lang.Override
  public boolean hasStartTime() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
   * @return The startTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }

  public static final int END_TIME_FIELD_NUMBER = 15;
  private com.google.protobuf.Timestamp endTime_;
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
   * @return Whether the endTime field is set.
   */
  @java.lang.Override
  public boolean hasEndTime() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
   * @return The endTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getEndTime() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }

  public static final int DURATION_FIELD_NUMBER = 16;
  private int duration_ = 0;
  /**
   * <pre>
   * Duration of the tournament in seconds.
   * </pre>
   *
   * <code>uint32 duration = 16 [json_name = "duration"];</code>
   * @return The duration.
   */
  @java.lang.Override
  public int getDuration() {
    return duration_;
  }

  public static final int START_ACTIVE_FIELD_NUMBER = 17;
  private int startActive_ = 0;
  /**
   * <pre>
   * The UNIX time when the tournament start being active. A computed value.
   * </pre>
   *
   * <code>uint32 start_active = 17 [json_name = "startActive"];</code>
   * @return The startActive.
   */
  @java.lang.Override
  public int getStartActive() {
    return startActive_;
  }

  public static final int PREV_RESET_FIELD_NUMBER = 18;
  private int prevReset_ = 0;
  /**
   * <pre>
   * The UNIX time when the tournament was last reset. A computed value.
   * </pre>
   *
   * <code>uint32 prev_reset = 18 [json_name = "prevReset"];</code>
   * @return The prevReset.
   */
  @java.lang.Override
  public int getPrevReset() {
    return prevReset_;
  }

  public static final int OPERATOR_FIELD_NUMBER = 19;
  private int operator_ = 0;
  /**
   * <pre>
   * Operator.
   * </pre>
   *
   * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
   * @return The enum numeric value on the wire for operator.
   */
  @java.lang.Override public int getOperatorValue() {
    return operator_;
  }
  /**
   * <pre>
   * Operator.
   * </pre>
   *
   * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
   * @return The operator.
   */
  @java.lang.Override public com.heroiclabs.nakama.api.Operator getOperator() {
    com.heroiclabs.nakama.api.Operator result = com.heroiclabs.nakama.api.Operator.forNumber(operator_);
    return result == null ? com.heroiclabs.nakama.api.Operator.UNRECOGNIZED : result;
  }

  public static final int AUTHORITATIVE_FIELD_NUMBER = 20;
  private boolean authoritative_ = false;
  /**
   * <pre>
   * Whether the leaderboard was created authoritatively or not.
   * </pre>
   *
   * <code>bool authoritative = 20 [json_name = "authoritative"];</code>
   * @return The authoritative.
   */
  @java.lang.Override
  public boolean getAuthoritative() {
    return authoritative_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(title_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, title_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, description_);
    }
    if (category_ != 0) {
      output.writeUInt32(4, category_);
    }
    if (sortOrder_ != 0) {
      output.writeUInt32(5, sortOrder_);
    }
    if (size_ != 0) {
      output.writeUInt32(6, size_);
    }
    if (maxSize_ != 0) {
      output.writeUInt32(7, maxSize_);
    }
    if (maxNumScore_ != 0) {
      output.writeUInt32(8, maxNumScore_);
    }
    if (canEnter_ != false) {
      output.writeBool(9, canEnter_);
    }
    if (endActive_ != 0) {
      output.writeUInt32(10, endActive_);
    }
    if (nextReset_ != 0) {
      output.writeUInt32(11, nextReset_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(metadata_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 12, metadata_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(13, getCreateTime());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(14, getStartTime());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(15, getEndTime());
    }
    if (duration_ != 0) {
      output.writeUInt32(16, duration_);
    }
    if (startActive_ != 0) {
      output.writeUInt32(17, startActive_);
    }
    if (prevReset_ != 0) {
      output.writeUInt32(18, prevReset_);
    }
    if (operator_ != com.heroiclabs.nakama.api.Operator.NO_OVERRIDE.getNumber()) {
      output.writeEnum(19, operator_);
    }
    if (authoritative_ != false) {
      output.writeBool(20, authoritative_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(title_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, title_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, description_);
    }
    if (category_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, category_);
    }
    if (sortOrder_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, sortOrder_);
    }
    if (size_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, size_);
    }
    if (maxSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, maxSize_);
    }
    if (maxNumScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, maxNumScore_);
    }
    if (canEnter_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, canEnter_);
    }
    if (endActive_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, endActive_);
    }
    if (nextReset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(11, nextReset_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(metadata_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(12, metadata_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getCreateTime());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getStartTime());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getEndTime());
    }
    if (duration_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(16, duration_);
    }
    if (startActive_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(17, startActive_);
    }
    if (prevReset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(18, prevReset_);
    }
    if (operator_ != com.heroiclabs.nakama.api.Operator.NO_OVERRIDE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(19, operator_);
    }
    if (authoritative_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(20, authoritative_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.api.Tournament)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.api.Tournament other = (com.heroiclabs.nakama.api.Tournament) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getTitle()
        .equals(other.getTitle())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (getCategory()
        != other.getCategory()) return false;
    if (getSortOrder()
        != other.getSortOrder()) return false;
    if (getSize()
        != other.getSize()) return false;
    if (getMaxSize()
        != other.getMaxSize()) return false;
    if (getMaxNumScore()
        != other.getMaxNumScore()) return false;
    if (getCanEnter()
        != other.getCanEnter()) return false;
    if (getEndActive()
        != other.getEndActive()) return false;
    if (getNextReset()
        != other.getNextReset()) return false;
    if (!getMetadata()
        .equals(other.getMetadata())) return false;
    if (hasCreateTime() != other.hasCreateTime()) return false;
    if (hasCreateTime()) {
      if (!getCreateTime()
          .equals(other.getCreateTime())) return false;
    }
    if (hasStartTime() != other.hasStartTime()) return false;
    if (hasStartTime()) {
      if (!getStartTime()
          .equals(other.getStartTime())) return false;
    }
    if (hasEndTime() != other.hasEndTime()) return false;
    if (hasEndTime()) {
      if (!getEndTime()
          .equals(other.getEndTime())) return false;
    }
    if (getDuration()
        != other.getDuration()) return false;
    if (getStartActive()
        != other.getStartActive()) return false;
    if (getPrevReset()
        != other.getPrevReset()) return false;
    if (operator_ != other.operator_) return false;
    if (getAuthoritative()
        != other.getAuthoritative()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + TITLE_FIELD_NUMBER;
    hash = (53 * hash) + getTitle().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
    hash = (53 * hash) + getCategory();
    hash = (37 * hash) + SORT_ORDER_FIELD_NUMBER;
    hash = (53 * hash) + getSortOrder();
    hash = (37 * hash) + SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getSize();
    hash = (37 * hash) + MAX_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxSize();
    hash = (37 * hash) + MAX_NUM_SCORE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxNumScore();
    hash = (37 * hash) + CAN_ENTER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCanEnter());
    hash = (37 * hash) + END_ACTIVE_FIELD_NUMBER;
    hash = (53 * hash) + getEndActive();
    hash = (37 * hash) + NEXT_RESET_FIELD_NUMBER;
    hash = (53 * hash) + getNextReset();
    hash = (37 * hash) + METADATA_FIELD_NUMBER;
    hash = (53 * hash) + getMetadata().hashCode();
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    if (hasStartTime()) {
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasEndTime()) {
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime().hashCode();
    }
    hash = (37 * hash) + DURATION_FIELD_NUMBER;
    hash = (53 * hash) + getDuration();
    hash = (37 * hash) + START_ACTIVE_FIELD_NUMBER;
    hash = (53 * hash) + getStartActive();
    hash = (37 * hash) + PREV_RESET_FIELD_NUMBER;
    hash = (53 * hash) + getPrevReset();
    hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
    hash = (53 * hash) + operator_;
    hash = (37 * hash) + AUTHORITATIVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAuthoritative());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.api.Tournament parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.api.Tournament parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.api.Tournament parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.Tournament prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A tournament on the server.
   * </pre>
   *
   * Protobuf type {@code nakama.api.Tournament}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.Tournament)
      com.heroiclabs.nakama.api.TournamentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_Tournament_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_Tournament_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.api.Tournament.class, com.heroiclabs.nakama.api.Tournament.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.api.Tournament.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getCreateTimeFieldBuilder();
        getStartTimeFieldBuilder();
        getEndTimeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      title_ = "";
      description_ = "";
      category_ = 0;
      sortOrder_ = 0;
      size_ = 0;
      maxSize_ = 0;
      maxNumScore_ = 0;
      canEnter_ = false;
      endActive_ = 0;
      nextReset_ = 0;
      metadata_ = "";
      createTime_ = null;
      if (createTimeBuilder_ != null) {
        createTimeBuilder_.dispose();
        createTimeBuilder_ = null;
      }
      startTime_ = null;
      if (startTimeBuilder_ != null) {
        startTimeBuilder_.dispose();
        startTimeBuilder_ = null;
      }
      endTime_ = null;
      if (endTimeBuilder_ != null) {
        endTimeBuilder_.dispose();
        endTimeBuilder_ = null;
      }
      duration_ = 0;
      startActive_ = 0;
      prevReset_ = 0;
      operator_ = 0;
      authoritative_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.api.ApiProto.internal_static_nakama_api_Tournament_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.Tournament getDefaultInstanceForType() {
      return com.heroiclabs.nakama.api.Tournament.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.Tournament build() {
      com.heroiclabs.nakama.api.Tournament result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.api.Tournament buildPartial() {
      com.heroiclabs.nakama.api.Tournament result = new com.heroiclabs.nakama.api.Tournament(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.heroiclabs.nakama.api.Tournament result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.title_ = title_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.category_ = category_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.sortOrder_ = sortOrder_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.size_ = size_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.maxSize_ = maxSize_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.maxNumScore_ = maxNumScore_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.canEnter_ = canEnter_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.endActive_ = endActive_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.nextReset_ = nextReset_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.metadata_ = metadata_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.createTime_ = createTimeBuilder_ == null
            ? createTime_
            : createTimeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.startTime_ = startTimeBuilder_ == null
            ? startTime_
            : startTimeBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.endTime_ = endTimeBuilder_ == null
            ? endTime_
            : endTimeBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.duration_ = duration_;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.startActive_ = startActive_;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.prevReset_ = prevReset_;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.operator_ = operator_;
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.authoritative_ = authoritative_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.api.Tournament) {
        return mergeFrom((com.heroiclabs.nakama.api.Tournament)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.api.Tournament other) {
      if (other == com.heroiclabs.nakama.api.Tournament.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getTitle().isEmpty()) {
        title_ = other.title_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getCategory() != 0) {
        setCategory(other.getCategory());
      }
      if (other.getSortOrder() != 0) {
        setSortOrder(other.getSortOrder());
      }
      if (other.getSize() != 0) {
        setSize(other.getSize());
      }
      if (other.getMaxSize() != 0) {
        setMaxSize(other.getMaxSize());
      }
      if (other.getMaxNumScore() != 0) {
        setMaxNumScore(other.getMaxNumScore());
      }
      if (other.getCanEnter() != false) {
        setCanEnter(other.getCanEnter());
      }
      if (other.getEndActive() != 0) {
        setEndActive(other.getEndActive());
      }
      if (other.getNextReset() != 0) {
        setNextReset(other.getNextReset());
      }
      if (!other.getMetadata().isEmpty()) {
        metadata_ = other.metadata_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasEndTime()) {
        mergeEndTime(other.getEndTime());
      }
      if (other.getDuration() != 0) {
        setDuration(other.getDuration());
      }
      if (other.getStartActive() != 0) {
        setStartActive(other.getStartActive());
      }
      if (other.getPrevReset() != 0) {
        setPrevReset(other.getPrevReset());
      }
      if (other.operator_ != 0) {
        setOperatorValue(other.getOperatorValue());
      }
      if (other.getAuthoritative() != false) {
        setAuthoritative(other.getAuthoritative());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              title_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              category_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              sortOrder_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              size_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              maxSize_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              maxNumScore_ = input.readUInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              canEnter_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              endActive_ = input.readUInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              nextReset_ = input.readUInt32();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 98: {
              metadata_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000800;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getCreateTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getStartTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00002000;
              break;
            } // case 114
            case 122: {
              input.readMessage(
                  getEndTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00004000;
              break;
            } // case 122
            case 128: {
              duration_ = input.readUInt32();
              bitField0_ |= 0x00008000;
              break;
            } // case 128
            case 136: {
              startActive_ = input.readUInt32();
              bitField0_ |= 0x00010000;
              break;
            } // case 136
            case 144: {
              prevReset_ = input.readUInt32();
              bitField0_ |= 0x00020000;
              break;
            } // case 144
            case 152: {
              operator_ = input.readEnum();
              bitField0_ |= 0x00040000;
              break;
            } // case 152
            case 160: {
              authoritative_ = input.readBool();
              bitField0_ |= 0x00080000;
              break;
            } // case 160
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The ID of the tournament.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the tournament.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the tournament.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the tournament.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the tournament.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object title_ = "";
    /**
     * <pre>
     * The title for the tournament.
     * </pre>
     *
     * <code>string title = 2 [json_name = "title"];</code>
     * @return The title.
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The title for the tournament.
     * </pre>
     *
     * <code>string title = 2 [json_name = "title"];</code>
     * @return The bytes for title.
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The title for the tournament.
     * </pre>
     *
     * <code>string title = 2 [json_name = "title"];</code>
     * @param value The title to set.
     * @return This builder for chaining.
     */
    public Builder setTitle(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      title_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The title for the tournament.
     * </pre>
     *
     * <code>string title = 2 [json_name = "title"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTitle() {
      title_ = getDefaultInstance().getTitle();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The title for the tournament.
     * </pre>
     *
     * <code>string title = 2 [json_name = "title"];</code>
     * @param value The bytes for title to set.
     * @return This builder for chaining.
     */
    public Builder setTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      title_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * The description of the tournament. May be blank.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The description of the tournament. May be blank.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The description of the tournament. May be blank.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The description of the tournament. May be blank.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The description of the tournament. May be blank.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int category_ ;
    /**
     * <pre>
     * The category of the tournament. e.g. "vip" could be category 1.
     * </pre>
     *
     * <code>uint32 category = 4 [json_name = "category"];</code>
     * @return The category.
     */
    @java.lang.Override
    public int getCategory() {
      return category_;
    }
    /**
     * <pre>
     * The category of the tournament. e.g. "vip" could be category 1.
     * </pre>
     *
     * <code>uint32 category = 4 [json_name = "category"];</code>
     * @param value The category to set.
     * @return This builder for chaining.
     */
    public Builder setCategory(int value) {

      category_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The category of the tournament. e.g. "vip" could be category 1.
     * </pre>
     *
     * <code>uint32 category = 4 [json_name = "category"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCategory() {
      bitField0_ = (bitField0_ & ~0x00000008);
      category_ = 0;
      onChanged();
      return this;
    }

    private int sortOrder_ ;
    /**
     * <pre>
     * ASC (0) or DESC (1) sort mode of scores in the tournament.
     * </pre>
     *
     * <code>uint32 sort_order = 5 [json_name = "sortOrder"];</code>
     * @return The sortOrder.
     */
    @java.lang.Override
    public int getSortOrder() {
      return sortOrder_;
    }
    /**
     * <pre>
     * ASC (0) or DESC (1) sort mode of scores in the tournament.
     * </pre>
     *
     * <code>uint32 sort_order = 5 [json_name = "sortOrder"];</code>
     * @param value The sortOrder to set.
     * @return This builder for chaining.
     */
    public Builder setSortOrder(int value) {

      sortOrder_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ASC (0) or DESC (1) sort mode of scores in the tournament.
     * </pre>
     *
     * <code>uint32 sort_order = 5 [json_name = "sortOrder"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSortOrder() {
      bitField0_ = (bitField0_ & ~0x00000010);
      sortOrder_ = 0;
      onChanged();
      return this;
    }

    private int size_ ;
    /**
     * <pre>
     * The current number of players in the tournament.
     * </pre>
     *
     * <code>uint32 size = 6 [json_name = "size"];</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }
    /**
     * <pre>
     * The current number of players in the tournament.
     * </pre>
     *
     * <code>uint32 size = 6 [json_name = "size"];</code>
     * @param value The size to set.
     * @return This builder for chaining.
     */
    public Builder setSize(int value) {

      size_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The current number of players in the tournament.
     * </pre>
     *
     * <code>uint32 size = 6 [json_name = "size"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSize() {
      bitField0_ = (bitField0_ & ~0x00000020);
      size_ = 0;
      onChanged();
      return this;
    }

    private int maxSize_ ;
    /**
     * <pre>
     * The maximum number of players for the tournament.
     * </pre>
     *
     * <code>uint32 max_size = 7 [json_name = "maxSize"];</code>
     * @return The maxSize.
     */
    @java.lang.Override
    public int getMaxSize() {
      return maxSize_;
    }
    /**
     * <pre>
     * The maximum number of players for the tournament.
     * </pre>
     *
     * <code>uint32 max_size = 7 [json_name = "maxSize"];</code>
     * @param value The maxSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxSize(int value) {

      maxSize_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum number of players for the tournament.
     * </pre>
     *
     * <code>uint32 max_size = 7 [json_name = "maxSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxSize() {
      bitField0_ = (bitField0_ & ~0x00000040);
      maxSize_ = 0;
      onChanged();
      return this;
    }

    private int maxNumScore_ ;
    /**
     * <pre>
     * The maximum score updates allowed per player for the current tournament.
     * </pre>
     *
     * <code>uint32 max_num_score = 8 [json_name = "maxNumScore"];</code>
     * @return The maxNumScore.
     */
    @java.lang.Override
    public int getMaxNumScore() {
      return maxNumScore_;
    }
    /**
     * <pre>
     * The maximum score updates allowed per player for the current tournament.
     * </pre>
     *
     * <code>uint32 max_num_score = 8 [json_name = "maxNumScore"];</code>
     * @param value The maxNumScore to set.
     * @return This builder for chaining.
     */
    public Builder setMaxNumScore(int value) {

      maxNumScore_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum score updates allowed per player for the current tournament.
     * </pre>
     *
     * <code>uint32 max_num_score = 8 [json_name = "maxNumScore"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxNumScore() {
      bitField0_ = (bitField0_ & ~0x00000080);
      maxNumScore_ = 0;
      onChanged();
      return this;
    }

    private boolean canEnter_ ;
    /**
     * <pre>
     * True if the tournament is active and can enter. A computed value.
     * </pre>
     *
     * <code>bool can_enter = 9 [json_name = "canEnter"];</code>
     * @return The canEnter.
     */
    @java.lang.Override
    public boolean getCanEnter() {
      return canEnter_;
    }
    /**
     * <pre>
     * True if the tournament is active and can enter. A computed value.
     * </pre>
     *
     * <code>bool can_enter = 9 [json_name = "canEnter"];</code>
     * @param value The canEnter to set.
     * @return This builder for chaining.
     */
    public Builder setCanEnter(boolean value) {

      canEnter_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if the tournament is active and can enter. A computed value.
     * </pre>
     *
     * <code>bool can_enter = 9 [json_name = "canEnter"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCanEnter() {
      bitField0_ = (bitField0_ & ~0x00000100);
      canEnter_ = false;
      onChanged();
      return this;
    }

    private int endActive_ ;
    /**
     * <pre>
     * The UNIX time when the tournament stops being active until next reset. A computed value.
     * </pre>
     *
     * <code>uint32 end_active = 10 [json_name = "endActive"];</code>
     * @return The endActive.
     */
    @java.lang.Override
    public int getEndActive() {
      return endActive_;
    }
    /**
     * <pre>
     * The UNIX time when the tournament stops being active until next reset. A computed value.
     * </pre>
     *
     * <code>uint32 end_active = 10 [json_name = "endActive"];</code>
     * @param value The endActive to set.
     * @return This builder for chaining.
     */
    public Builder setEndActive(int value) {

      endActive_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the tournament stops being active until next reset. A computed value.
     * </pre>
     *
     * <code>uint32 end_active = 10 [json_name = "endActive"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEndActive() {
      bitField0_ = (bitField0_ & ~0x00000200);
      endActive_ = 0;
      onChanged();
      return this;
    }

    private int nextReset_ ;
    /**
     * <pre>
     * The UNIX time when the tournament is next playable. A computed value.
     * </pre>
     *
     * <code>uint32 next_reset = 11 [json_name = "nextReset"];</code>
     * @return The nextReset.
     */
    @java.lang.Override
    public int getNextReset() {
      return nextReset_;
    }
    /**
     * <pre>
     * The UNIX time when the tournament is next playable. A computed value.
     * </pre>
     *
     * <code>uint32 next_reset = 11 [json_name = "nextReset"];</code>
     * @param value The nextReset to set.
     * @return This builder for chaining.
     */
    public Builder setNextReset(int value) {

      nextReset_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the tournament is next playable. A computed value.
     * </pre>
     *
     * <code>uint32 next_reset = 11 [json_name = "nextReset"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNextReset() {
      bitField0_ = (bitField0_ & ~0x00000400);
      nextReset_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object metadata_ = "";
    /**
     * <pre>
     * Additional information stored as a JSON object.
     * </pre>
     *
     * <code>string metadata = 12 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    public java.lang.String getMetadata() {
      java.lang.Object ref = metadata_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        metadata_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Additional information stored as a JSON object.
     * </pre>
     *
     * <code>string metadata = 12 [json_name = "metadata"];</code>
     * @return The bytes for metadata.
     */
    public com.google.protobuf.ByteString
        getMetadataBytes() {
      java.lang.Object ref = metadata_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        metadata_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Additional information stored as a JSON object.
     * </pre>
     *
     * <code>string metadata = 12 [json_name = "metadata"];</code>
     * @param value The metadata to set.
     * @return This builder for chaining.
     */
    public Builder setMetadata(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      metadata_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional information stored as a JSON object.
     * </pre>
     *
     * <code>string metadata = 12 [json_name = "metadata"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMetadata() {
      metadata_ = getDefaultInstance().getMetadata();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional information stored as a JSON object.
     * </pre>
     *
     * <code>string metadata = 12 [json_name = "metadata"];</code>
     * @param value The bytes for metadata to set.
     * @return This builder for chaining.
     */
    public Builder setMetadataBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      metadata_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp createTime_;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     * @return Whether the createTime field is set.
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     * @return The createTime.
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
      } else {
        createTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          createTime_ != null &&
          createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getCreateTimeBuilder().mergeFrom(value);
        } else {
          createTime_ = value;
        }
      } else {
        createTimeBuilder_.mergeFrom(value);
      }
      if (createTime_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    public Builder clearCreateTime() {
      bitField0_ = (bitField0_ & ~0x00001000);
      createTime_ = null;
      if (createTimeBuilder_ != null) {
        createTimeBuilder_.dispose();
        createTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp startTime_;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     * @return Whether the startTime field is set.
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     * @return The startTime.
     */
    public com.google.protobuf.Timestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
      } else {
        startTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0) &&
          startTime_ != null &&
          startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getStartTimeBuilder().mergeFrom(value);
        } else {
          startTime_ = value;
        }
      } else {
        startTimeBuilder_.mergeFrom(value);
      }
      if (startTime_ != null) {
        bitField0_ |= 0x00002000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    public Builder clearStartTime() {
      bitField0_ = (bitField0_ & ~0x00002000);
      startTime_ = null;
      if (startTimeBuilder_ != null) {
        startTimeBuilder_.dispose();
        startTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will start.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 14 [json_name = "startTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private com.google.protobuf.Timestamp endTime_;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     * @return Whether the endTime field is set.
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     * @return The endTime.
     */
    public com.google.protobuf.Timestamp getEndTime() {
      if (endTimeBuilder_ == null) {
        return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      } else {
        return endTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    public Builder setEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        endTime_ = value;
      } else {
        endTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    public Builder setEndTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (endTimeBuilder_ == null) {
        endTime_ = builderForValue.build();
      } else {
        endTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0) &&
          endTime_ != null &&
          endTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getEndTimeBuilder().mergeFrom(value);
        } else {
          endTime_ = value;
        }
      } else {
        endTimeBuilder_.mergeFrom(value);
      }
      if (endTime_ != null) {
        bitField0_ |= 0x00004000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    public Builder clearEndTime() {
      bitField0_ = (bitField0_ & ~0x00004000);
      endTime_ = null;
      if (endTimeBuilder_ != null) {
        endTimeBuilder_.dispose();
        endTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
      bitField0_ |= 0x00004000;
      onChanged();
      return getEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      if (endTimeBuilder_ != null) {
        return endTimeBuilder_.getMessageOrBuilder();
      } else {
        return endTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      }
    }
    /**
     * <pre>
     * The UNIX time (for gRPC clients) or ISO string (for REST clients) when the tournament will be stopped.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 15 [json_name = "endTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getEndTimeFieldBuilder() {
      if (endTimeBuilder_ == null) {
        endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getEndTime(),
                getParentForChildren(),
                isClean());
        endTime_ = null;
      }
      return endTimeBuilder_;
    }

    private int duration_ ;
    /**
     * <pre>
     * Duration of the tournament in seconds.
     * </pre>
     *
     * <code>uint32 duration = 16 [json_name = "duration"];</code>
     * @return The duration.
     */
    @java.lang.Override
    public int getDuration() {
      return duration_;
    }
    /**
     * <pre>
     * Duration of the tournament in seconds.
     * </pre>
     *
     * <code>uint32 duration = 16 [json_name = "duration"];</code>
     * @param value The duration to set.
     * @return This builder for chaining.
     */
    public Builder setDuration(int value) {

      duration_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Duration of the tournament in seconds.
     * </pre>
     *
     * <code>uint32 duration = 16 [json_name = "duration"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDuration() {
      bitField0_ = (bitField0_ & ~0x00008000);
      duration_ = 0;
      onChanged();
      return this;
    }

    private int startActive_ ;
    /**
     * <pre>
     * The UNIX time when the tournament start being active. A computed value.
     * </pre>
     *
     * <code>uint32 start_active = 17 [json_name = "startActive"];</code>
     * @return The startActive.
     */
    @java.lang.Override
    public int getStartActive() {
      return startActive_;
    }
    /**
     * <pre>
     * The UNIX time when the tournament start being active. A computed value.
     * </pre>
     *
     * <code>uint32 start_active = 17 [json_name = "startActive"];</code>
     * @param value The startActive to set.
     * @return This builder for chaining.
     */
    public Builder setStartActive(int value) {

      startActive_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the tournament start being active. A computed value.
     * </pre>
     *
     * <code>uint32 start_active = 17 [json_name = "startActive"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStartActive() {
      bitField0_ = (bitField0_ & ~0x00010000);
      startActive_ = 0;
      onChanged();
      return this;
    }

    private int prevReset_ ;
    /**
     * <pre>
     * The UNIX time when the tournament was last reset. A computed value.
     * </pre>
     *
     * <code>uint32 prev_reset = 18 [json_name = "prevReset"];</code>
     * @return The prevReset.
     */
    @java.lang.Override
    public int getPrevReset() {
      return prevReset_;
    }
    /**
     * <pre>
     * The UNIX time when the tournament was last reset. A computed value.
     * </pre>
     *
     * <code>uint32 prev_reset = 18 [json_name = "prevReset"];</code>
     * @param value The prevReset to set.
     * @return This builder for chaining.
     */
    public Builder setPrevReset(int value) {

      prevReset_ = value;
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The UNIX time when the tournament was last reset. A computed value.
     * </pre>
     *
     * <code>uint32 prev_reset = 18 [json_name = "prevReset"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrevReset() {
      bitField0_ = (bitField0_ & ~0x00020000);
      prevReset_ = 0;
      onChanged();
      return this;
    }

    private int operator_ = 0;
    /**
     * <pre>
     * Operator.
     * </pre>
     *
     * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
     * @return The enum numeric value on the wire for operator.
     */
    @java.lang.Override public int getOperatorValue() {
      return operator_;
    }
    /**
     * <pre>
     * Operator.
     * </pre>
     *
     * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
     * @param value The enum numeric value on the wire for operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorValue(int value) {
      operator_ = value;
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Operator.
     * </pre>
     *
     * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
     * @return The operator.
     */
    @java.lang.Override
    public com.heroiclabs.nakama.api.Operator getOperator() {
      com.heroiclabs.nakama.api.Operator result = com.heroiclabs.nakama.api.Operator.forNumber(operator_);
      return result == null ? com.heroiclabs.nakama.api.Operator.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Operator.
     * </pre>
     *
     * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
     * @param value The operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperator(com.heroiclabs.nakama.api.Operator value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00040000;
      operator_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Operator.
     * </pre>
     *
     * <code>.nakama.api.Operator operator = 19 [json_name = "operator"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOperator() {
      bitField0_ = (bitField0_ & ~0x00040000);
      operator_ = 0;
      onChanged();
      return this;
    }

    private boolean authoritative_ ;
    /**
     * <pre>
     * Whether the leaderboard was created authoritatively or not.
     * </pre>
     *
     * <code>bool authoritative = 20 [json_name = "authoritative"];</code>
     * @return The authoritative.
     */
    @java.lang.Override
    public boolean getAuthoritative() {
      return authoritative_;
    }
    /**
     * <pre>
     * Whether the leaderboard was created authoritatively or not.
     * </pre>
     *
     * <code>bool authoritative = 20 [json_name = "authoritative"];</code>
     * @param value The authoritative to set.
     * @return This builder for chaining.
     */
    public Builder setAuthoritative(boolean value) {

      authoritative_ = value;
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the leaderboard was created authoritatively or not.
     * </pre>
     *
     * <code>bool authoritative = 20 [json_name = "authoritative"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthoritative() {
      bitField0_ = (bitField0_ & ~0x00080000);
      authoritative_ = false;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.Tournament)
  }

  // @@protoc_insertion_point(class_scope:nakama.api.Tournament)
  private static final com.heroiclabs.nakama.api.Tournament DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.api.Tournament();
  }

  public static com.heroiclabs.nakama.api.Tournament getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Tournament>
      PARSER = new com.google.protobuf.AbstractParser<Tournament>() {
    @java.lang.Override
    public Tournament parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Tournament> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Tournament> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.api.Tournament getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

