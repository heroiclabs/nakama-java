// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/rtapi/realtime.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.rtapi;

/**
 * <pre>
 * A realtime chat channel.
 * </pre>
 *
 * Protobuf type {@code nakama.realtime.Channel}
 */
public final class Channel extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.realtime.Channel)
    ChannelOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      Channel.class.getName());
  }
  // Use Channel.newBuilder() to construct.
  private Channel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Channel() {
    id_ = "";
    presences_ = java.util.Collections.emptyList();
    roomName_ = "";
    groupId_ = "";
    userIdOne_ = "";
    userIdTwo_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_Channel_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_Channel_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.rtapi.Channel.class, com.heroiclabs.nakama.rtapi.Channel.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * The ID of the channel.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the channel.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRESENCES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> presences_;
  /**
   * <pre>
   * The users currently in the channel.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
   */
  @java.lang.Override
  public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> getPresencesList() {
    return presences_;
  }
  /**
   * <pre>
   * The users currently in the channel.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
      getPresencesOrBuilderList() {
    return presences_;
  }
  /**
   * <pre>
   * The users currently in the channel.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
   */
  @java.lang.Override
  public int getPresencesCount() {
    return presences_.size();
  }
  /**
   * <pre>
   * The users currently in the channel.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresence getPresences(int index) {
    return presences_.get(index);
  }
  /**
   * <pre>
   * The users currently in the channel.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getPresencesOrBuilder(
      int index) {
    return presences_.get(index);
  }

  public static final int SELF_FIELD_NUMBER = 3;
  private com.heroiclabs.nakama.rtapi.UserPresence self_;
  /**
   * <pre>
   * A reference to the current user's presence in the channel.
   * </pre>
   *
   * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
   * @return Whether the self field is set.
   */
  @java.lang.Override
  public boolean hasSelf() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A reference to the current user's presence in the channel.
   * </pre>
   *
   * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
   * @return The self.
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresence getSelf() {
    return self_ == null ? com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : self_;
  }
  /**
   * <pre>
   * A reference to the current user's presence in the channel.
   * </pre>
   *
   * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getSelfOrBuilder() {
    return self_ == null ? com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : self_;
  }

  public static final int ROOM_NAME_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object roomName_ = "";
  /**
   * <pre>
   * The name of the chat room, or an empty string if this message was not sent through a chat room.
   * </pre>
   *
   * <code>string room_name = 4 [json_name = "roomName"];</code>
   * @return The roomName.
   */
  @java.lang.Override
  public java.lang.String getRoomName() {
    java.lang.Object ref = roomName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      roomName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the chat room, or an empty string if this message was not sent through a chat room.
   * </pre>
   *
   * <code>string room_name = 4 [json_name = "roomName"];</code>
   * @return The bytes for roomName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRoomNameBytes() {
    java.lang.Object ref = roomName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      roomName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_ID_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object groupId_ = "";
  /**
   * <pre>
   * The ID of the group, or an empty string if this message was not sent through a group channel.
   * </pre>
   *
   * <code>string group_id = 5 [json_name = "groupId"];</code>
   * @return The groupId.
   */
  @java.lang.Override
  public java.lang.String getGroupId() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the group, or an empty string if this message was not sent through a group channel.
   * </pre>
   *
   * <code>string group_id = 5 [json_name = "groupId"];</code>
   * @return The bytes for groupId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupIdBytes() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_ID_ONE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object userIdOne_ = "";
  /**
   * <pre>
   * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
   * @return The userIdOne.
   */
  @java.lang.Override
  public java.lang.String getUserIdOne() {
    java.lang.Object ref = userIdOne_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userIdOne_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
   * @return The bytes for userIdOne.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserIdOneBytes() {
    java.lang.Object ref = userIdOne_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userIdOne_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_ID_TWO_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object userIdTwo_ = "";
  /**
   * <pre>
   * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
   * @return The userIdTwo.
   */
  @java.lang.Override
  public java.lang.String getUserIdTwo() {
    java.lang.Object ref = userIdTwo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userIdTwo_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
   * @return The bytes for userIdTwo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserIdTwoBytes() {
    java.lang.Object ref = userIdTwo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userIdTwo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
    }
    for (int i = 0; i < presences_.size(); i++) {
      output.writeMessage(2, presences_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getSelf());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(roomName_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, roomName_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(groupId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, groupId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdOne_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, userIdOne_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdTwo_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 7, userIdTwo_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
    }
    for (int i = 0; i < presences_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, presences_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSelf());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(roomName_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, roomName_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(groupId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, groupId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdOne_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, userIdOne_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdTwo_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(7, userIdTwo_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.rtapi.Channel)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.rtapi.Channel other = (com.heroiclabs.nakama.rtapi.Channel) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getPresencesList()
        .equals(other.getPresencesList())) return false;
    if (hasSelf() != other.hasSelf()) return false;
    if (hasSelf()) {
      if (!getSelf()
          .equals(other.getSelf())) return false;
    }
    if (!getRoomName()
        .equals(other.getRoomName())) return false;
    if (!getGroupId()
        .equals(other.getGroupId())) return false;
    if (!getUserIdOne()
        .equals(other.getUserIdOne())) return false;
    if (!getUserIdTwo()
        .equals(other.getUserIdTwo())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (getPresencesCount() > 0) {
      hash = (37 * hash) + PRESENCES_FIELD_NUMBER;
      hash = (53 * hash) + getPresencesList().hashCode();
    }
    if (hasSelf()) {
      hash = (37 * hash) + SELF_FIELD_NUMBER;
      hash = (53 * hash) + getSelf().hashCode();
    }
    hash = (37 * hash) + ROOM_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getRoomName().hashCode();
    hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGroupId().hashCode();
    hash = (37 * hash) + USER_ID_ONE_FIELD_NUMBER;
    hash = (53 * hash) + getUserIdOne().hashCode();
    hash = (37 * hash) + USER_ID_TWO_FIELD_NUMBER;
    hash = (53 * hash) + getUserIdTwo().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.rtapi.Channel parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.rtapi.Channel parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.Channel parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.rtapi.Channel prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A realtime chat channel.
   * </pre>
   *
   * Protobuf type {@code nakama.realtime.Channel}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.realtime.Channel)
      com.heroiclabs.nakama.rtapi.ChannelOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_Channel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_Channel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.rtapi.Channel.class, com.heroiclabs.nakama.rtapi.Channel.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.rtapi.Channel.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getPresencesFieldBuilder();
        getSelfFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      if (presencesBuilder_ == null) {
        presences_ = java.util.Collections.emptyList();
      } else {
        presences_ = null;
        presencesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      self_ = null;
      if (selfBuilder_ != null) {
        selfBuilder_.dispose();
        selfBuilder_ = null;
      }
      roomName_ = "";
      groupId_ = "";
      userIdOne_ = "";
      userIdTwo_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_Channel_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.Channel getDefaultInstanceForType() {
      return com.heroiclabs.nakama.rtapi.Channel.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.Channel build() {
      com.heroiclabs.nakama.rtapi.Channel result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.Channel buildPartial() {
      com.heroiclabs.nakama.rtapi.Channel result = new com.heroiclabs.nakama.rtapi.Channel(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.heroiclabs.nakama.rtapi.Channel result) {
      if (presencesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          presences_ = java.util.Collections.unmodifiableList(presences_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.presences_ = presences_;
      } else {
        result.presences_ = presencesBuilder_.build();
      }
    }

    private void buildPartial0(com.heroiclabs.nakama.rtapi.Channel result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.self_ = selfBuilder_ == null
            ? self_
            : selfBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.roomName_ = roomName_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.groupId_ = groupId_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.userIdOne_ = userIdOne_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.userIdTwo_ = userIdTwo_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.rtapi.Channel) {
        return mergeFrom((com.heroiclabs.nakama.rtapi.Channel)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.rtapi.Channel other) {
      if (other == com.heroiclabs.nakama.rtapi.Channel.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (presencesBuilder_ == null) {
        if (!other.presences_.isEmpty()) {
          if (presences_.isEmpty()) {
            presences_ = other.presences_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePresencesIsMutable();
            presences_.addAll(other.presences_);
          }
          onChanged();
        }
      } else {
        if (!other.presences_.isEmpty()) {
          if (presencesBuilder_.isEmpty()) {
            presencesBuilder_.dispose();
            presencesBuilder_ = null;
            presences_ = other.presences_;
            bitField0_ = (bitField0_ & ~0x00000002);
            presencesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPresencesFieldBuilder() : null;
          } else {
            presencesBuilder_.addAllMessages(other.presences_);
          }
        }
      }
      if (other.hasSelf()) {
        mergeSelf(other.getSelf());
      }
      if (!other.getRoomName().isEmpty()) {
        roomName_ = other.roomName_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getGroupId().isEmpty()) {
        groupId_ = other.groupId_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.getUserIdOne().isEmpty()) {
        userIdOne_ = other.userIdOne_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getUserIdTwo().isEmpty()) {
        userIdTwo_ = other.userIdTwo_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.heroiclabs.nakama.rtapi.UserPresence m =
                  input.readMessage(
                      com.heroiclabs.nakama.rtapi.UserPresence.parser(),
                      extensionRegistry);
              if (presencesBuilder_ == null) {
                ensurePresencesIsMutable();
                presences_.add(m);
              } else {
                presencesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSelfFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              roomName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              groupId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              userIdOne_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              userIdTwo_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The ID of the channel.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the channel.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the channel.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the channel.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the channel.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> presences_ =
      java.util.Collections.emptyList();
    private void ensurePresencesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        presences_ = new java.util.ArrayList<com.heroiclabs.nakama.rtapi.UserPresence>(presences_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> presencesBuilder_;

    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> getPresencesList() {
      if (presencesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(presences_);
      } else {
        return presencesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public int getPresencesCount() {
      if (presencesBuilder_ == null) {
        return presences_.size();
      } else {
        return presencesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence getPresences(int index) {
      if (presencesBuilder_ == null) {
        return presences_.get(index);
      } else {
        return presencesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder setPresences(
        int index, com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (presencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePresencesIsMutable();
        presences_.set(index, value);
        onChanged();
      } else {
        presencesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder setPresences(
        int index, com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (presencesBuilder_ == null) {
        ensurePresencesIsMutable();
        presences_.set(index, builderForValue.build());
        onChanged();
      } else {
        presencesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder addPresences(com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (presencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePresencesIsMutable();
        presences_.add(value);
        onChanged();
      } else {
        presencesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder addPresences(
        int index, com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (presencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePresencesIsMutable();
        presences_.add(index, value);
        onChanged();
      } else {
        presencesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder addPresences(
        com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (presencesBuilder_ == null) {
        ensurePresencesIsMutable();
        presences_.add(builderForValue.build());
        onChanged();
      } else {
        presencesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder addPresences(
        int index, com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (presencesBuilder_ == null) {
        ensurePresencesIsMutable();
        presences_.add(index, builderForValue.build());
        onChanged();
      } else {
        presencesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder addAllPresences(
        java.lang.Iterable<? extends com.heroiclabs.nakama.rtapi.UserPresence> values) {
      if (presencesBuilder_ == null) {
        ensurePresencesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, presences_);
        onChanged();
      } else {
        presencesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder clearPresences() {
      if (presencesBuilder_ == null) {
        presences_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        presencesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public Builder removePresences(int index) {
      if (presencesBuilder_ == null) {
        ensurePresencesIsMutable();
        presences_.remove(index);
        onChanged();
      } else {
        presencesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder getPresencesBuilder(
        int index) {
      return getPresencesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getPresencesOrBuilder(
        int index) {
      if (presencesBuilder_ == null) {
        return presences_.get(index);  } else {
        return presencesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
         getPresencesOrBuilderList() {
      if (presencesBuilder_ != null) {
        return presencesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(presences_);
      }
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder addPresencesBuilder() {
      return getPresencesFieldBuilder().addBuilder(
          com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance());
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder addPresencesBuilder(
        int index) {
      return getPresencesFieldBuilder().addBuilder(
          index, com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance());
    }
    /**
     * <pre>
     * The users currently in the channel.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence presences = 2 [json_name = "presences"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence.Builder> 
         getPresencesBuilderList() {
      return getPresencesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
        getPresencesFieldBuilder() {
      if (presencesBuilder_ == null) {
        presencesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder>(
                presences_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        presences_ = null;
      }
      return presencesBuilder_;
    }

    private com.heroiclabs.nakama.rtapi.UserPresence self_;
    private com.google.protobuf.SingleFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> selfBuilder_;
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     * @return Whether the self field is set.
     */
    public boolean hasSelf() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     * @return The self.
     */
    public com.heroiclabs.nakama.rtapi.UserPresence getSelf() {
      if (selfBuilder_ == null) {
        return self_ == null ? com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : self_;
      } else {
        return selfBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    public Builder setSelf(com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (selfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        self_ = value;
      } else {
        selfBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    public Builder setSelf(
        com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (selfBuilder_ == null) {
        self_ = builderForValue.build();
      } else {
        selfBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    public Builder mergeSelf(com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (selfBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          self_ != null &&
          self_ != com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance()) {
          getSelfBuilder().mergeFrom(value);
        } else {
          self_ = value;
        }
      } else {
        selfBuilder_.mergeFrom(value);
      }
      if (self_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    public Builder clearSelf() {
      bitField0_ = (bitField0_ & ~0x00000004);
      self_ = null;
      if (selfBuilder_ != null) {
        selfBuilder_.dispose();
        selfBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder getSelfBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSelfFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getSelfOrBuilder() {
      if (selfBuilder_ != null) {
        return selfBuilder_.getMessageOrBuilder();
      } else {
        return self_ == null ?
            com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : self_;
      }
    }
    /**
     * <pre>
     * A reference to the current user's presence in the channel.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence self = 3 [json_name = "self"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
        getSelfFieldBuilder() {
      if (selfBuilder_ == null) {
        selfBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder>(
                getSelf(),
                getParentForChildren(),
                isClean());
        self_ = null;
      }
      return selfBuilder_;
    }

    private java.lang.Object roomName_ = "";
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @return The roomName.
     */
    public java.lang.String getRoomName() {
      java.lang.Object ref = roomName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @return The bytes for roomName.
     */
    public com.google.protobuf.ByteString
        getRoomNameBytes() {
      java.lang.Object ref = roomName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @param value The roomName to set.
     * @return This builder for chaining.
     */
    public Builder setRoomName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      roomName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRoomName() {
      roomName_ = getDefaultInstance().getRoomName();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @param value The bytes for roomName to set.
     * @return This builder for chaining.
     */
    public Builder setRoomNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      roomName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object groupId_ = "";
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @return The groupId.
     */
    public java.lang.String getGroupId() {
      java.lang.Object ref = groupId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @return The bytes for groupId.
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      java.lang.Object ref = groupId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @param value The groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      groupId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupId() {
      groupId_ = getDefaultInstance().getGroupId();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @param value The bytes for groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      groupId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object userIdOne_ = "";
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @return The userIdOne.
     */
    public java.lang.String getUserIdOne() {
      java.lang.Object ref = userIdOne_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userIdOne_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @return The bytes for userIdOne.
     */
    public com.google.protobuf.ByteString
        getUserIdOneBytes() {
      java.lang.Object ref = userIdOne_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userIdOne_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @param value The userIdOne to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdOne(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      userIdOne_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUserIdOne() {
      userIdOne_ = getDefaultInstance().getUserIdOne();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @param value The bytes for userIdOne to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdOneBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      userIdOne_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object userIdTwo_ = "";
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @return The userIdTwo.
     */
    public java.lang.String getUserIdTwo() {
      java.lang.Object ref = userIdTwo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userIdTwo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @return The bytes for userIdTwo.
     */
    public com.google.protobuf.ByteString
        getUserIdTwoBytes() {
      java.lang.Object ref = userIdTwo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userIdTwo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @param value The userIdTwo to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdTwo(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      userIdTwo_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUserIdTwo() {
      userIdTwo_ = getDefaultInstance().getUserIdTwo();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @param value The bytes for userIdTwo to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdTwoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      userIdTwo_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.realtime.Channel)
  }

  // @@protoc_insertion_point(class_scope:nakama.realtime.Channel)
  private static final com.heroiclabs.nakama.rtapi.Channel DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.rtapi.Channel();
  }

  public static com.heroiclabs.nakama.rtapi.Channel getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Channel>
      PARSER = new com.google.protobuf.AbstractParser<Channel>() {
    @java.lang.Override
    public Channel parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Channel> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Channel> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.Channel getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

