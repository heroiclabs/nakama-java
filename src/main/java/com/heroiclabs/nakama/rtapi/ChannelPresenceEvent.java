// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/rtapi/realtime.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.rtapi;

/**
 * <pre>
 * A set of joins and leaves on a particular channel.
 * </pre>
 *
 * Protobuf type {@code nakama.realtime.ChannelPresenceEvent}
 */
public final class ChannelPresenceEvent extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.realtime.ChannelPresenceEvent)
    ChannelPresenceEventOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      ChannelPresenceEvent.class.getName());
  }
  // Use ChannelPresenceEvent.newBuilder() to construct.
  private ChannelPresenceEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ChannelPresenceEvent() {
    channelId_ = "";
    joins_ = java.util.Collections.emptyList();
    leaves_ = java.util.Collections.emptyList();
    roomName_ = "";
    groupId_ = "";
    userIdOne_ = "";
    userIdTwo_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_ChannelPresenceEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_ChannelPresenceEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.class, com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.Builder.class);
  }

  public static final int CHANNEL_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object channelId_ = "";
  /**
   * <pre>
   * The channel identifier this event is for.
   * </pre>
   *
   * <code>string channel_id = 1 [json_name = "channelId"];</code>
   * @return The channelId.
   */
  @java.lang.Override
  public java.lang.String getChannelId() {
    java.lang.Object ref = channelId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      channelId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The channel identifier this event is for.
   * </pre>
   *
   * <code>string channel_id = 1 [json_name = "channelId"];</code>
   * @return The bytes for channelId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getChannelIdBytes() {
    java.lang.Object ref = channelId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      channelId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int JOINS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> joins_;
  /**
   * <pre>
   * Presences joining the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
   */
  @java.lang.Override
  public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> getJoinsList() {
    return joins_;
  }
  /**
   * <pre>
   * Presences joining the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
      getJoinsOrBuilderList() {
    return joins_;
  }
  /**
   * <pre>
   * Presences joining the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
   */
  @java.lang.Override
  public int getJoinsCount() {
    return joins_.size();
  }
  /**
   * <pre>
   * Presences joining the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresence getJoins(int index) {
    return joins_.get(index);
  }
  /**
   * <pre>
   * Presences joining the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getJoinsOrBuilder(
      int index) {
    return joins_.get(index);
  }

  public static final int LEAVES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> leaves_;
  /**
   * <pre>
   * Presences leaving the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
   */
  @java.lang.Override
  public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> getLeavesList() {
    return leaves_;
  }
  /**
   * <pre>
   * Presences leaving the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
      getLeavesOrBuilderList() {
    return leaves_;
  }
  /**
   * <pre>
   * Presences leaving the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
   */
  @java.lang.Override
  public int getLeavesCount() {
    return leaves_.size();
  }
  /**
   * <pre>
   * Presences leaving the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresence getLeaves(int index) {
    return leaves_.get(index);
  }
  /**
   * <pre>
   * Presences leaving the channel as part of this event, if any.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getLeavesOrBuilder(
      int index) {
    return leaves_.get(index);
  }

  public static final int ROOM_NAME_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object roomName_ = "";
  /**
   * <pre>
   * The name of the chat room, or an empty string if this message was not sent through a chat room.
   * </pre>
   *
   * <code>string room_name = 4 [json_name = "roomName"];</code>
   * @return The roomName.
   */
  @java.lang.Override
  public java.lang.String getRoomName() {
    java.lang.Object ref = roomName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      roomName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the chat room, or an empty string if this message was not sent through a chat room.
   * </pre>
   *
   * <code>string room_name = 4 [json_name = "roomName"];</code>
   * @return The bytes for roomName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRoomNameBytes() {
    java.lang.Object ref = roomName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      roomName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_ID_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object groupId_ = "";
  /**
   * <pre>
   * The ID of the group, or an empty string if this message was not sent through a group channel.
   * </pre>
   *
   * <code>string group_id = 5 [json_name = "groupId"];</code>
   * @return The groupId.
   */
  @java.lang.Override
  public java.lang.String getGroupId() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the group, or an empty string if this message was not sent through a group channel.
   * </pre>
   *
   * <code>string group_id = 5 [json_name = "groupId"];</code>
   * @return The bytes for groupId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupIdBytes() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_ID_ONE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object userIdOne_ = "";
  /**
   * <pre>
   * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
   * @return The userIdOne.
   */
  @java.lang.Override
  public java.lang.String getUserIdOne() {
    java.lang.Object ref = userIdOne_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userIdOne_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
   * @return The bytes for userIdOne.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserIdOneBytes() {
    java.lang.Object ref = userIdOne_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userIdOne_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_ID_TWO_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object userIdTwo_ = "";
  /**
   * <pre>
   * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
   * @return The userIdTwo.
   */
  @java.lang.Override
  public java.lang.String getUserIdTwo() {
    java.lang.Object ref = userIdTwo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userIdTwo_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
   * </pre>
   *
   * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
   * @return The bytes for userIdTwo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserIdTwoBytes() {
    java.lang.Object ref = userIdTwo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userIdTwo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(channelId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, channelId_);
    }
    for (int i = 0; i < joins_.size(); i++) {
      output.writeMessage(2, joins_.get(i));
    }
    for (int i = 0; i < leaves_.size(); i++) {
      output.writeMessage(3, leaves_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(roomName_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, roomName_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(groupId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, groupId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdOne_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, userIdOne_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdTwo_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 7, userIdTwo_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(channelId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, channelId_);
    }
    for (int i = 0; i < joins_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, joins_.get(i));
    }
    for (int i = 0; i < leaves_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, leaves_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(roomName_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, roomName_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(groupId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, groupId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdOne_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, userIdOne_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userIdTwo_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(7, userIdTwo_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.rtapi.ChannelPresenceEvent)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.rtapi.ChannelPresenceEvent other = (com.heroiclabs.nakama.rtapi.ChannelPresenceEvent) obj;

    if (!getChannelId()
        .equals(other.getChannelId())) return false;
    if (!getJoinsList()
        .equals(other.getJoinsList())) return false;
    if (!getLeavesList()
        .equals(other.getLeavesList())) return false;
    if (!getRoomName()
        .equals(other.getRoomName())) return false;
    if (!getGroupId()
        .equals(other.getGroupId())) return false;
    if (!getUserIdOne()
        .equals(other.getUserIdOne())) return false;
    if (!getUserIdTwo()
        .equals(other.getUserIdTwo())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
    hash = (53 * hash) + getChannelId().hashCode();
    if (getJoinsCount() > 0) {
      hash = (37 * hash) + JOINS_FIELD_NUMBER;
      hash = (53 * hash) + getJoinsList().hashCode();
    }
    if (getLeavesCount() > 0) {
      hash = (37 * hash) + LEAVES_FIELD_NUMBER;
      hash = (53 * hash) + getLeavesList().hashCode();
    }
    hash = (37 * hash) + ROOM_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getRoomName().hashCode();
    hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGroupId().hashCode();
    hash = (37 * hash) + USER_ID_ONE_FIELD_NUMBER;
    hash = (53 * hash) + getUserIdOne().hashCode();
    hash = (37 * hash) + USER_ID_TWO_FIELD_NUMBER;
    hash = (53 * hash) + getUserIdTwo().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.rtapi.ChannelPresenceEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A set of joins and leaves on a particular channel.
   * </pre>
   *
   * Protobuf type {@code nakama.realtime.ChannelPresenceEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.realtime.ChannelPresenceEvent)
      com.heroiclabs.nakama.rtapi.ChannelPresenceEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_ChannelPresenceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_ChannelPresenceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.class, com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      channelId_ = "";
      if (joinsBuilder_ == null) {
        joins_ = java.util.Collections.emptyList();
      } else {
        joins_ = null;
        joinsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (leavesBuilder_ == null) {
        leaves_ = java.util.Collections.emptyList();
      } else {
        leaves_ = null;
        leavesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      roomName_ = "";
      groupId_ = "";
      userIdOne_ = "";
      userIdTwo_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_ChannelPresenceEvent_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.ChannelPresenceEvent getDefaultInstanceForType() {
      return com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.ChannelPresenceEvent build() {
      com.heroiclabs.nakama.rtapi.ChannelPresenceEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.ChannelPresenceEvent buildPartial() {
      com.heroiclabs.nakama.rtapi.ChannelPresenceEvent result = new com.heroiclabs.nakama.rtapi.ChannelPresenceEvent(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.heroiclabs.nakama.rtapi.ChannelPresenceEvent result) {
      if (joinsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          joins_ = java.util.Collections.unmodifiableList(joins_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.joins_ = joins_;
      } else {
        result.joins_ = joinsBuilder_.build();
      }
      if (leavesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          leaves_ = java.util.Collections.unmodifiableList(leaves_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.leaves_ = leaves_;
      } else {
        result.leaves_ = leavesBuilder_.build();
      }
    }

    private void buildPartial0(com.heroiclabs.nakama.rtapi.ChannelPresenceEvent result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.channelId_ = channelId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.roomName_ = roomName_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.groupId_ = groupId_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.userIdOne_ = userIdOne_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.userIdTwo_ = userIdTwo_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.rtapi.ChannelPresenceEvent) {
        return mergeFrom((com.heroiclabs.nakama.rtapi.ChannelPresenceEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.rtapi.ChannelPresenceEvent other) {
      if (other == com.heroiclabs.nakama.rtapi.ChannelPresenceEvent.getDefaultInstance()) return this;
      if (!other.getChannelId().isEmpty()) {
        channelId_ = other.channelId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (joinsBuilder_ == null) {
        if (!other.joins_.isEmpty()) {
          if (joins_.isEmpty()) {
            joins_ = other.joins_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureJoinsIsMutable();
            joins_.addAll(other.joins_);
          }
          onChanged();
        }
      } else {
        if (!other.joins_.isEmpty()) {
          if (joinsBuilder_.isEmpty()) {
            joinsBuilder_.dispose();
            joinsBuilder_ = null;
            joins_ = other.joins_;
            bitField0_ = (bitField0_ & ~0x00000002);
            joinsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getJoinsFieldBuilder() : null;
          } else {
            joinsBuilder_.addAllMessages(other.joins_);
          }
        }
      }
      if (leavesBuilder_ == null) {
        if (!other.leaves_.isEmpty()) {
          if (leaves_.isEmpty()) {
            leaves_ = other.leaves_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLeavesIsMutable();
            leaves_.addAll(other.leaves_);
          }
          onChanged();
        }
      } else {
        if (!other.leaves_.isEmpty()) {
          if (leavesBuilder_.isEmpty()) {
            leavesBuilder_.dispose();
            leavesBuilder_ = null;
            leaves_ = other.leaves_;
            bitField0_ = (bitField0_ & ~0x00000004);
            leavesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getLeavesFieldBuilder() : null;
          } else {
            leavesBuilder_.addAllMessages(other.leaves_);
          }
        }
      }
      if (!other.getRoomName().isEmpty()) {
        roomName_ = other.roomName_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getGroupId().isEmpty()) {
        groupId_ = other.groupId_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.getUserIdOne().isEmpty()) {
        userIdOne_ = other.userIdOne_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getUserIdTwo().isEmpty()) {
        userIdTwo_ = other.userIdTwo_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              channelId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.heroiclabs.nakama.rtapi.UserPresence m =
                  input.readMessage(
                      com.heroiclabs.nakama.rtapi.UserPresence.parser(),
                      extensionRegistry);
              if (joinsBuilder_ == null) {
                ensureJoinsIsMutable();
                joins_.add(m);
              } else {
                joinsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.heroiclabs.nakama.rtapi.UserPresence m =
                  input.readMessage(
                      com.heroiclabs.nakama.rtapi.UserPresence.parser(),
                      extensionRegistry);
              if (leavesBuilder_ == null) {
                ensureLeavesIsMutable();
                leaves_.add(m);
              } else {
                leavesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              roomName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              groupId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              userIdOne_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              userIdTwo_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object channelId_ = "";
    /**
     * <pre>
     * The channel identifier this event is for.
     * </pre>
     *
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return The channelId.
     */
    public java.lang.String getChannelId() {
      java.lang.Object ref = channelId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        channelId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The channel identifier this event is for.
     * </pre>
     *
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return The bytes for channelId.
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      java.lang.Object ref = channelId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The channel identifier this event is for.
     * </pre>
     *
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @param value The channelId to set.
     * @return This builder for chaining.
     */
    public Builder setChannelId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      channelId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The channel identifier this event is for.
     * </pre>
     *
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearChannelId() {
      channelId_ = getDefaultInstance().getChannelId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The channel identifier this event is for.
     * </pre>
     *
     * <code>string channel_id = 1 [json_name = "channelId"];</code>
     * @param value The bytes for channelId to set.
     * @return This builder for chaining.
     */
    public Builder setChannelIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      channelId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> joins_ =
      java.util.Collections.emptyList();
    private void ensureJoinsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        joins_ = new java.util.ArrayList<com.heroiclabs.nakama.rtapi.UserPresence>(joins_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> joinsBuilder_;

    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> getJoinsList() {
      if (joinsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(joins_);
      } else {
        return joinsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public int getJoinsCount() {
      if (joinsBuilder_ == null) {
        return joins_.size();
      } else {
        return joinsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence getJoins(int index) {
      if (joinsBuilder_ == null) {
        return joins_.get(index);
      } else {
        return joinsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder setJoins(
        int index, com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (joinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJoinsIsMutable();
        joins_.set(index, value);
        onChanged();
      } else {
        joinsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder setJoins(
        int index, com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (joinsBuilder_ == null) {
        ensureJoinsIsMutable();
        joins_.set(index, builderForValue.build());
        onChanged();
      } else {
        joinsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder addJoins(com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (joinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJoinsIsMutable();
        joins_.add(value);
        onChanged();
      } else {
        joinsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder addJoins(
        int index, com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (joinsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJoinsIsMutable();
        joins_.add(index, value);
        onChanged();
      } else {
        joinsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder addJoins(
        com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (joinsBuilder_ == null) {
        ensureJoinsIsMutable();
        joins_.add(builderForValue.build());
        onChanged();
      } else {
        joinsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder addJoins(
        int index, com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (joinsBuilder_ == null) {
        ensureJoinsIsMutable();
        joins_.add(index, builderForValue.build());
        onChanged();
      } else {
        joinsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder addAllJoins(
        java.lang.Iterable<? extends com.heroiclabs.nakama.rtapi.UserPresence> values) {
      if (joinsBuilder_ == null) {
        ensureJoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, joins_);
        onChanged();
      } else {
        joinsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder clearJoins() {
      if (joinsBuilder_ == null) {
        joins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        joinsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public Builder removeJoins(int index) {
      if (joinsBuilder_ == null) {
        ensureJoinsIsMutable();
        joins_.remove(index);
        onChanged();
      } else {
        joinsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder getJoinsBuilder(
        int index) {
      return getJoinsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getJoinsOrBuilder(
        int index) {
      if (joinsBuilder_ == null) {
        return joins_.get(index);  } else {
        return joinsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
         getJoinsOrBuilderList() {
      if (joinsBuilder_ != null) {
        return joinsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(joins_);
      }
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder addJoinsBuilder() {
      return getJoinsFieldBuilder().addBuilder(
          com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance());
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder addJoinsBuilder(
        int index) {
      return getJoinsFieldBuilder().addBuilder(
          index, com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance());
    }
    /**
     * <pre>
     * Presences joining the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence joins = 2 [json_name = "joins"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence.Builder> 
         getJoinsBuilderList() {
      return getJoinsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
        getJoinsFieldBuilder() {
      if (joinsBuilder_ == null) {
        joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder>(
                joins_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        joins_ = null;
      }
      return joinsBuilder_;
    }

    private java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> leaves_ =
      java.util.Collections.emptyList();
    private void ensureLeavesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        leaves_ = new java.util.ArrayList<com.heroiclabs.nakama.rtapi.UserPresence>(leaves_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> leavesBuilder_;

    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> getLeavesList() {
      if (leavesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(leaves_);
      } else {
        return leavesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public int getLeavesCount() {
      if (leavesBuilder_ == null) {
        return leaves_.size();
      } else {
        return leavesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence getLeaves(int index) {
      if (leavesBuilder_ == null) {
        return leaves_.get(index);
      } else {
        return leavesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder setLeaves(
        int index, com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (leavesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLeavesIsMutable();
        leaves_.set(index, value);
        onChanged();
      } else {
        leavesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder setLeaves(
        int index, com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (leavesBuilder_ == null) {
        ensureLeavesIsMutable();
        leaves_.set(index, builderForValue.build());
        onChanged();
      } else {
        leavesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder addLeaves(com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (leavesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLeavesIsMutable();
        leaves_.add(value);
        onChanged();
      } else {
        leavesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder addLeaves(
        int index, com.heroiclabs.nakama.rtapi.UserPresence value) {
      if (leavesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLeavesIsMutable();
        leaves_.add(index, value);
        onChanged();
      } else {
        leavesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder addLeaves(
        com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (leavesBuilder_ == null) {
        ensureLeavesIsMutable();
        leaves_.add(builderForValue.build());
        onChanged();
      } else {
        leavesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder addLeaves(
        int index, com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
      if (leavesBuilder_ == null) {
        ensureLeavesIsMutable();
        leaves_.add(index, builderForValue.build());
        onChanged();
      } else {
        leavesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder addAllLeaves(
        java.lang.Iterable<? extends com.heroiclabs.nakama.rtapi.UserPresence> values) {
      if (leavesBuilder_ == null) {
        ensureLeavesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, leaves_);
        onChanged();
      } else {
        leavesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder clearLeaves() {
      if (leavesBuilder_ == null) {
        leaves_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        leavesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public Builder removeLeaves(int index) {
      if (leavesBuilder_ == null) {
        ensureLeavesIsMutable();
        leaves_.remove(index);
        onChanged();
      } else {
        leavesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder getLeavesBuilder(
        int index) {
      return getLeavesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getLeavesOrBuilder(
        int index) {
      if (leavesBuilder_ == null) {
        return leaves_.get(index);  } else {
        return leavesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
         getLeavesOrBuilderList() {
      if (leavesBuilder_ != null) {
        return leavesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(leaves_);
      }
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder addLeavesBuilder() {
      return getLeavesFieldBuilder().addBuilder(
          com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance());
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public com.heroiclabs.nakama.rtapi.UserPresence.Builder addLeavesBuilder(
        int index) {
      return getLeavesFieldBuilder().addBuilder(
          index, com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance());
    }
    /**
     * <pre>
     * Presences leaving the channel as part of this event, if any.
     * </pre>
     *
     * <code>repeated .nakama.realtime.UserPresence leaves = 3 [json_name = "leaves"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.UserPresence.Builder> 
         getLeavesBuilderList() {
      return getLeavesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
        getLeavesFieldBuilder() {
      if (leavesBuilder_ == null) {
        leavesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder>(
                leaves_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        leaves_ = null;
      }
      return leavesBuilder_;
    }

    private java.lang.Object roomName_ = "";
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @return The roomName.
     */
    public java.lang.String getRoomName() {
      java.lang.Object ref = roomName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @return The bytes for roomName.
     */
    public com.google.protobuf.ByteString
        getRoomNameBytes() {
      java.lang.Object ref = roomName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @param value The roomName to set.
     * @return This builder for chaining.
     */
    public Builder setRoomName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      roomName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRoomName() {
      roomName_ = getDefaultInstance().getRoomName();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the chat room, or an empty string if this message was not sent through a chat room.
     * </pre>
     *
     * <code>string room_name = 4 [json_name = "roomName"];</code>
     * @param value The bytes for roomName to set.
     * @return This builder for chaining.
     */
    public Builder setRoomNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      roomName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object groupId_ = "";
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @return The groupId.
     */
    public java.lang.String getGroupId() {
      java.lang.Object ref = groupId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @return The bytes for groupId.
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      java.lang.Object ref = groupId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @param value The groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      groupId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupId() {
      groupId_ = getDefaultInstance().getGroupId();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the group, or an empty string if this message was not sent through a group channel.
     * </pre>
     *
     * <code>string group_id = 5 [json_name = "groupId"];</code>
     * @param value The bytes for groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      groupId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object userIdOne_ = "";
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @return The userIdOne.
     */
    public java.lang.String getUserIdOne() {
      java.lang.Object ref = userIdOne_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userIdOne_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @return The bytes for userIdOne.
     */
    public com.google.protobuf.ByteString
        getUserIdOneBytes() {
      java.lang.Object ref = userIdOne_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userIdOne_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @param value The userIdOne to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdOne(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      userIdOne_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUserIdOne() {
      userIdOne_ = getDefaultInstance().getUserIdOne();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the first DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_one = 6 [json_name = "userIdOne"];</code>
     * @param value The bytes for userIdOne to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdOneBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      userIdOne_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object userIdTwo_ = "";
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @return The userIdTwo.
     */
    public java.lang.String getUserIdTwo() {
      java.lang.Object ref = userIdTwo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userIdTwo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @return The bytes for userIdTwo.
     */
    public com.google.protobuf.ByteString
        getUserIdTwoBytes() {
      java.lang.Object ref = userIdTwo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userIdTwo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @param value The userIdTwo to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdTwo(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      userIdTwo_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUserIdTwo() {
      userIdTwo_ = getDefaultInstance().getUserIdTwo();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the second DM user, or an empty string if this message was not sent through a DM chat.
     * </pre>
     *
     * <code>string user_id_two = 7 [json_name = "userIdTwo"];</code>
     * @param value The bytes for userIdTwo to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdTwoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      userIdTwo_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.realtime.ChannelPresenceEvent)
  }

  // @@protoc_insertion_point(class_scope:nakama.realtime.ChannelPresenceEvent)
  private static final com.heroiclabs.nakama.rtapi.ChannelPresenceEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.rtapi.ChannelPresenceEvent();
  }

  public static com.heroiclabs.nakama.rtapi.ChannelPresenceEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ChannelPresenceEvent>
      PARSER = new com.google.protobuf.AbstractParser<ChannelPresenceEvent>() {
    @java.lang.Override
    public ChannelPresenceEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ChannelPresenceEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChannelPresenceEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.ChannelPresenceEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

