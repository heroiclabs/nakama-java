// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/rtapi/realtime.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.rtapi;

public interface MatchDataSendOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nakama.realtime.MatchDataSend)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The match unique ID.
   * </pre>
   *
   * <code>string match_id = 1 [json_name = "matchId"];</code>
   * @return The matchId.
   */
  java.lang.String getMatchId();
  /**
   * <pre>
   * The match unique ID.
   * </pre>
   *
   * <code>string match_id = 1 [json_name = "matchId"];</code>
   * @return The bytes for matchId.
   */
  com.google.protobuf.ByteString
      getMatchIdBytes();

  /**
   * <pre>
   * Op code value.
   * </pre>
   *
   * <code>int64 op_code = 2 [json_name = "opCode"];</code>
   * @return The opCode.
   */
  long getOpCode();

  /**
   * <pre>
   * Data payload, if any.
   * </pre>
   *
   * <code>bytes data = 3 [json_name = "data"];</code>
   * @return The data.
   */
  com.google.protobuf.ByteString getData();

  /**
   * <pre>
   * List of presences in the match to deliver to, if filtering is required. Otherwise deliver to everyone in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 4 [json_name = "presences"];</code>
   */
  java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> 
      getPresencesList();
  /**
   * <pre>
   * List of presences in the match to deliver to, if filtering is required. Otherwise deliver to everyone in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 4 [json_name = "presences"];</code>
   */
  com.heroiclabs.nakama.rtapi.UserPresence getPresences(int index);
  /**
   * <pre>
   * List of presences in the match to deliver to, if filtering is required. Otherwise deliver to everyone in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 4 [json_name = "presences"];</code>
   */
  int getPresencesCount();
  /**
   * <pre>
   * List of presences in the match to deliver to, if filtering is required. Otherwise deliver to everyone in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 4 [json_name = "presences"];</code>
   */
  java.util.List<? extends com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
      getPresencesOrBuilderList();
  /**
   * <pre>
   * List of presences in the match to deliver to, if filtering is required. Otherwise deliver to everyone in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 4 [json_name = "presences"];</code>
   */
  com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getPresencesOrBuilder(
      int index);

  /**
   * <pre>
   * True if the data should be sent reliably, false otherwise.
   * </pre>
   *
   * <code>bool reliable = 5 [json_name = "reliable"];</code>
   * @return The reliable.
   */
  boolean getReliable();
}
