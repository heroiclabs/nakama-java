// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/rtapi/realtime.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.rtapi;

/**
 * <pre>
 * Start a new matchmaking process.
 * </pre>
 *
 * Protobuf type {@code nakama.realtime.MatchmakerAdd}
 */
public final class MatchmakerAdd extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.realtime.MatchmakerAdd)
    MatchmakerAddOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      MatchmakerAdd.class.getName());
  }
  // Use MatchmakerAdd.newBuilder() to construct.
  private MatchmakerAdd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private MatchmakerAdd() {
    query_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 4:
        return internalGetStringProperties();
      case 5:
        return internalGetNumericProperties();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.rtapi.MatchmakerAdd.class, com.heroiclabs.nakama.rtapi.MatchmakerAdd.Builder.class);
  }

  private int bitField0_;
  public static final int MIN_COUNT_FIELD_NUMBER = 1;
  private int minCount_ = 0;
  /**
   * <pre>
   * Minimum total user count to match together.
   * </pre>
   *
   * <code>int32 min_count = 1 [json_name = "minCount"];</code>
   * @return The minCount.
   */
  @java.lang.Override
  public int getMinCount() {
    return minCount_;
  }

  public static final int MAX_COUNT_FIELD_NUMBER = 2;
  private int maxCount_ = 0;
  /**
   * <pre>
   * Maximum total user count to match together.
   * </pre>
   *
   * <code>int32 max_count = 2 [json_name = "maxCount"];</code>
   * @return The maxCount.
   */
  @java.lang.Override
  public int getMaxCount() {
    return maxCount_;
  }

  public static final int QUERY_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object query_ = "";
  /**
   * <pre>
   * Filter query used to identify suitable users.
   * </pre>
   *
   * <code>string query = 3 [json_name = "query"];</code>
   * @return The query.
   */
  @java.lang.Override
  public java.lang.String getQuery() {
    java.lang.Object ref = query_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      query_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Filter query used to identify suitable users.
   * </pre>
   *
   * <code>string query = 3 [json_name = "query"];</code>
   * @return The bytes for query.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getQueryBytes() {
    java.lang.Object ref = query_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      query_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STRING_PROPERTIES_FIELD_NUMBER = 4;
  private static final class StringPropertiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_StringPropertiesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> stringProperties_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetStringProperties() {
    if (stringProperties_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          StringPropertiesDefaultEntryHolder.defaultEntry);
    }
    return stringProperties_;
  }
  public int getStringPropertiesCount() {
    return internalGetStringProperties().getMap().size();
  }
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
   */
  @java.lang.Override
  public boolean containsStringProperties(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetStringProperties().getMap().containsKey(key);
  }
  /**
   * Use {@link #getStringPropertiesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getStringProperties() {
    return getStringPropertiesMap();
  }
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getStringPropertiesMap() {
    return internalGetStringProperties().getMap();
  }
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getStringPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetStringProperties().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
   */
  @java.lang.Override
  public java.lang.String getStringPropertiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetStringProperties().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int NUMERIC_PROPERTIES_FIELD_NUMBER = 5;
  private static final class NumericPropertiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Double> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Double>newDefaultInstance(
                com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_NumericPropertiesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.DOUBLE,
                0D);
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Double> numericProperties_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
  internalGetNumericProperties() {
    if (numericProperties_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          NumericPropertiesDefaultEntryHolder.defaultEntry);
    }
    return numericProperties_;
  }
  public int getNumericPropertiesCount() {
    return internalGetNumericProperties().getMap().size();
  }
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
   */
  @java.lang.Override
  public boolean containsNumericProperties(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetNumericProperties().getMap().containsKey(key);
  }
  /**
   * Use {@link #getNumericPropertiesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Double> getNumericProperties() {
    return getNumericPropertiesMap();
  }
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.Double> getNumericPropertiesMap() {
    return internalGetNumericProperties().getMap();
  }
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
   */
  @java.lang.Override
  public double getNumericPropertiesOrDefault(
      java.lang.String key,
      double defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Double> map =
        internalGetNumericProperties().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
   */
  @java.lang.Override
  public double getNumericPropertiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Double> map =
        internalGetNumericProperties().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int COUNT_MULTIPLE_FIELD_NUMBER = 6;
  private com.google.protobuf.Int32Value countMultiple_;
  /**
   * <pre>
   * Optional multiple of the count that must be satisfied.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
   * @return Whether the countMultiple field is set.
   */
  @java.lang.Override
  public boolean hasCountMultiple() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Optional multiple of the count that must be satisfied.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
   * @return The countMultiple.
   */
  @java.lang.Override
  public com.google.protobuf.Int32Value getCountMultiple() {
    return countMultiple_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : countMultiple_;
  }
  /**
   * <pre>
   * Optional multiple of the count that must be satisfied.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int32ValueOrBuilder getCountMultipleOrBuilder() {
    return countMultiple_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : countMultiple_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (minCount_ != 0) {
      output.writeInt32(1, minCount_);
    }
    if (maxCount_ != 0) {
      output.writeInt32(2, maxCount_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(query_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, query_);
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetStringProperties(),
        StringPropertiesDefaultEntryHolder.defaultEntry,
        4);
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetNumericProperties(),
        NumericPropertiesDefaultEntryHolder.defaultEntry,
        5);
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(6, getCountMultiple());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (minCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, minCount_);
    }
    if (maxCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, maxCount_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(query_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, query_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetStringProperties().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      stringProperties__ = StringPropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, stringProperties__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
         : internalGetNumericProperties().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
      numericProperties__ = NumericPropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, numericProperties__);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getCountMultiple());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.rtapi.MatchmakerAdd)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.rtapi.MatchmakerAdd other = (com.heroiclabs.nakama.rtapi.MatchmakerAdd) obj;

    if (getMinCount()
        != other.getMinCount()) return false;
    if (getMaxCount()
        != other.getMaxCount()) return false;
    if (!getQuery()
        .equals(other.getQuery())) return false;
    if (!internalGetStringProperties().equals(
        other.internalGetStringProperties())) return false;
    if (!internalGetNumericProperties().equals(
        other.internalGetNumericProperties())) return false;
    if (hasCountMultiple() != other.hasCountMultiple()) return false;
    if (hasCountMultiple()) {
      if (!getCountMultiple()
          .equals(other.getCountMultiple())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MIN_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getMinCount();
    hash = (37 * hash) + MAX_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getMaxCount();
    hash = (37 * hash) + QUERY_FIELD_NUMBER;
    hash = (53 * hash) + getQuery().hashCode();
    if (!internalGetStringProperties().getMap().isEmpty()) {
      hash = (37 * hash) + STRING_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetStringProperties().hashCode();
    }
    if (!internalGetNumericProperties().getMap().isEmpty()) {
      hash = (37 * hash) + NUMERIC_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetNumericProperties().hashCode();
    }
    if (hasCountMultiple()) {
      hash = (37 * hash) + COUNT_MULTIPLE_FIELD_NUMBER;
      hash = (53 * hash) + getCountMultiple().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.rtapi.MatchmakerAdd prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Start a new matchmaking process.
   * </pre>
   *
   * Protobuf type {@code nakama.realtime.MatchmakerAdd}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.realtime.MatchmakerAdd)
      com.heroiclabs.nakama.rtapi.MatchmakerAddOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetStringProperties();
        case 5:
          return internalGetNumericProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableStringProperties();
        case 5:
          return internalGetMutableNumericProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.rtapi.MatchmakerAdd.class, com.heroiclabs.nakama.rtapi.MatchmakerAdd.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.rtapi.MatchmakerAdd.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getCountMultipleFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      minCount_ = 0;
      maxCount_ = 0;
      query_ = "";
      internalGetMutableStringProperties().clear();
      internalGetMutableNumericProperties().clear();
      countMultiple_ = null;
      if (countMultipleBuilder_ != null) {
        countMultipleBuilder_.dispose();
        countMultipleBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerAdd_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerAdd getDefaultInstanceForType() {
      return com.heroiclabs.nakama.rtapi.MatchmakerAdd.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerAdd build() {
      com.heroiclabs.nakama.rtapi.MatchmakerAdd result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerAdd buildPartial() {
      com.heroiclabs.nakama.rtapi.MatchmakerAdd result = new com.heroiclabs.nakama.rtapi.MatchmakerAdd(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.heroiclabs.nakama.rtapi.MatchmakerAdd result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.minCount_ = minCount_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxCount_ = maxCount_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.query_ = query_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.stringProperties_ = internalGetStringProperties();
        result.stringProperties_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.numericProperties_ = internalGetNumericProperties();
        result.numericProperties_.makeImmutable();
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.countMultiple_ = countMultipleBuilder_ == null
            ? countMultiple_
            : countMultipleBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.rtapi.MatchmakerAdd) {
        return mergeFrom((com.heroiclabs.nakama.rtapi.MatchmakerAdd)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.rtapi.MatchmakerAdd other) {
      if (other == com.heroiclabs.nakama.rtapi.MatchmakerAdd.getDefaultInstance()) return this;
      if (other.getMinCount() != 0) {
        setMinCount(other.getMinCount());
      }
      if (other.getMaxCount() != 0) {
        setMaxCount(other.getMaxCount());
      }
      if (!other.getQuery().isEmpty()) {
        query_ = other.query_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      internalGetMutableStringProperties().mergeFrom(
          other.internalGetStringProperties());
      bitField0_ |= 0x00000008;
      internalGetMutableNumericProperties().mergeFrom(
          other.internalGetNumericProperties());
      bitField0_ |= 0x00000010;
      if (other.hasCountMultiple()) {
        mergeCountMultiple(other.getCountMultiple());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              minCount_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              maxCount_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              query_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              stringProperties__ = input.readMessage(
                  StringPropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableStringProperties().getMutableMap().put(
                  stringProperties__.getKey(), stringProperties__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              numericProperties__ = input.readMessage(
                  NumericPropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableNumericProperties().getMutableMap().put(
                  numericProperties__.getKey(), numericProperties__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getCountMultipleFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int minCount_ ;
    /**
     * <pre>
     * Minimum total user count to match together.
     * </pre>
     *
     * <code>int32 min_count = 1 [json_name = "minCount"];</code>
     * @return The minCount.
     */
    @java.lang.Override
    public int getMinCount() {
      return minCount_;
    }
    /**
     * <pre>
     * Minimum total user count to match together.
     * </pre>
     *
     * <code>int32 min_count = 1 [json_name = "minCount"];</code>
     * @param value The minCount to set.
     * @return This builder for chaining.
     */
    public Builder setMinCount(int value) {

      minCount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum total user count to match together.
     * </pre>
     *
     * <code>int32 min_count = 1 [json_name = "minCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      minCount_ = 0;
      onChanged();
      return this;
    }

    private int maxCount_ ;
    /**
     * <pre>
     * Maximum total user count to match together.
     * </pre>
     *
     * <code>int32 max_count = 2 [json_name = "maxCount"];</code>
     * @return The maxCount.
     */
    @java.lang.Override
    public int getMaxCount() {
      return maxCount_;
    }
    /**
     * <pre>
     * Maximum total user count to match together.
     * </pre>
     *
     * <code>int32 max_count = 2 [json_name = "maxCount"];</code>
     * @param value The maxCount to set.
     * @return This builder for chaining.
     */
    public Builder setMaxCount(int value) {

      maxCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum total user count to match together.
     * </pre>
     *
     * <code>int32 max_count = 2 [json_name = "maxCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxCount_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object query_ = "";
    /**
     * <pre>
     * Filter query used to identify suitable users.
     * </pre>
     *
     * <code>string query = 3 [json_name = "query"];</code>
     * @return The query.
     */
    public java.lang.String getQuery() {
      java.lang.Object ref = query_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        query_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Filter query used to identify suitable users.
     * </pre>
     *
     * <code>string query = 3 [json_name = "query"];</code>
     * @return The bytes for query.
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      java.lang.Object ref = query_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Filter query used to identify suitable users.
     * </pre>
     *
     * <code>string query = 3 [json_name = "query"];</code>
     * @param value The query to set.
     * @return This builder for chaining.
     */
    public Builder setQuery(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      query_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter query used to identify suitable users.
     * </pre>
     *
     * <code>string query = 3 [json_name = "query"];</code>
     * @return This builder for chaining.
     */
    public Builder clearQuery() {
      query_ = getDefaultInstance().getQuery();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter query used to identify suitable users.
     * </pre>
     *
     * <code>string query = 3 [json_name = "query"];</code>
     * @param value The bytes for query to set.
     * @return This builder for chaining.
     */
    public Builder setQueryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      query_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringProperties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetStringProperties() {
      if (stringProperties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringPropertiesDefaultEntryHolder.defaultEntry);
      }
      return stringProperties_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableStringProperties() {
      if (stringProperties_ == null) {
        stringProperties_ = com.google.protobuf.MapField.newMapField(
            StringPropertiesDefaultEntryHolder.defaultEntry);
      }
      if (!stringProperties_.isMutable()) {
        stringProperties_ = stringProperties_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return stringProperties_;
    }
    public int getStringPropertiesCount() {
      return internalGetStringProperties().getMap().size();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public boolean containsStringProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetStringProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringPropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringProperties() {
      return getStringPropertiesMap();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getStringPropertiesMap() {
      return internalGetStringProperties().getMap();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getStringPropertiesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public java.lang.String getStringPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearStringProperties() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableStringProperties().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    public Builder removeStringProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableStringProperties().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableStringProperties() {
      bitField0_ |= 0x00000008;
      return internalGetMutableStringProperties().getMutableMap();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    public Builder putStringProperties(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableStringProperties().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 4 [json_name = "stringProperties"];</code>
     */
    public Builder putAllStringProperties(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableStringProperties().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> numericProperties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetNumericProperties() {
      if (numericProperties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NumericPropertiesDefaultEntryHolder.defaultEntry);
      }
      return numericProperties_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetMutableNumericProperties() {
      if (numericProperties_ == null) {
        numericProperties_ = com.google.protobuf.MapField.newMapField(
            NumericPropertiesDefaultEntryHolder.defaultEntry);
      }
      if (!numericProperties_.isMutable()) {
        numericProperties_ = numericProperties_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return numericProperties_;
    }
    public int getNumericPropertiesCount() {
      return internalGetNumericProperties().getMap().size();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public boolean containsNumericProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetNumericProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNumericPropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getNumericProperties() {
      return getNumericPropertiesMap();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Double> getNumericPropertiesMap() {
      return internalGetNumericProperties().getMap();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public double getNumericPropertiesOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetNumericProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public double getNumericPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetNumericProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearNumericProperties() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableNumericProperties().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    public Builder removeNumericProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableNumericProperties().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double>
        getMutableNumericProperties() {
      bitField0_ |= 0x00000010;
      return internalGetMutableNumericProperties().getMutableMap();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    public Builder putNumericProperties(
        java.lang.String key,
        double value) {
      if (key == null) { throw new NullPointerException("map key"); }

      internalGetMutableNumericProperties().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 5 [json_name = "numericProperties"];</code>
     */
    public Builder putAllNumericProperties(
        java.util.Map<java.lang.String, java.lang.Double> values) {
      internalGetMutableNumericProperties().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }

    private com.google.protobuf.Int32Value countMultiple_;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> countMultipleBuilder_;
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     * @return Whether the countMultiple field is set.
     */
    public boolean hasCountMultiple() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     * @return The countMultiple.
     */
    public com.google.protobuf.Int32Value getCountMultiple() {
      if (countMultipleBuilder_ == null) {
        return countMultiple_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : countMultiple_;
      } else {
        return countMultipleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    public Builder setCountMultiple(com.google.protobuf.Int32Value value) {
      if (countMultipleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        countMultiple_ = value;
      } else {
        countMultipleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    public Builder setCountMultiple(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (countMultipleBuilder_ == null) {
        countMultiple_ = builderForValue.build();
      } else {
        countMultipleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    public Builder mergeCountMultiple(com.google.protobuf.Int32Value value) {
      if (countMultipleBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          countMultiple_ != null &&
          countMultiple_ != com.google.protobuf.Int32Value.getDefaultInstance()) {
          getCountMultipleBuilder().mergeFrom(value);
        } else {
          countMultiple_ = value;
        }
      } else {
        countMultipleBuilder_.mergeFrom(value);
      }
      if (countMultiple_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    public Builder clearCountMultiple() {
      bitField0_ = (bitField0_ & ~0x00000020);
      countMultiple_ = null;
      if (countMultipleBuilder_ != null) {
        countMultipleBuilder_.dispose();
        countMultipleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    public com.google.protobuf.Int32Value.Builder getCountMultipleBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getCountMultipleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getCountMultipleOrBuilder() {
      if (countMultipleBuilder_ != null) {
        return countMultipleBuilder_.getMessageOrBuilder();
      } else {
        return countMultiple_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : countMultiple_;
      }
    }
    /**
     * <pre>
     * Optional multiple of the count that must be satisfied.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value count_multiple = 6 [json_name = "countMultiple"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getCountMultipleFieldBuilder() {
      if (countMultipleBuilder_ == null) {
        countMultipleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getCountMultiple(),
                getParentForChildren(),
                isClean());
        countMultiple_ = null;
      }
      return countMultipleBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:nakama.realtime.MatchmakerAdd)
  }

  // @@protoc_insertion_point(class_scope:nakama.realtime.MatchmakerAdd)
  private static final com.heroiclabs.nakama.rtapi.MatchmakerAdd DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.rtapi.MatchmakerAdd();
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerAdd getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MatchmakerAdd>
      PARSER = new com.google.protobuf.AbstractParser<MatchmakerAdd>() {
    @java.lang.Override
    public MatchmakerAdd parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MatchmakerAdd> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MatchmakerAdd> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.MatchmakerAdd getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

