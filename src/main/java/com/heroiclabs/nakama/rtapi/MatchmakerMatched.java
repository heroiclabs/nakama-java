// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/rtapi/realtime.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.rtapi;

/**
 * <pre>
 * A successful matchmaking result.
 * </pre>
 *
 * Protobuf type {@code nakama.realtime.MatchmakerMatched}
 */
public final class MatchmakerMatched extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:nakama.realtime.MatchmakerMatched)
    MatchmakerMatchedOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      MatchmakerMatched.class.getName());
  }
  // Use MatchmakerMatched.newBuilder() to construct.
  private MatchmakerMatched(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private MatchmakerMatched() {
    ticket_ = "";
    users_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.heroiclabs.nakama.rtapi.MatchmakerMatched.class, com.heroiclabs.nakama.rtapi.MatchmakerMatched.Builder.class);
  }

  public interface MatchmakerUserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nakama.realtime.MatchmakerMatched.MatchmakerUser)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * User info.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
     * @return Whether the presence field is set.
     */
    boolean hasPresence();
    /**
     * <pre>
     * User info.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
     * @return The presence.
     */
    com.heroiclabs.nakama.rtapi.UserPresence getPresence();
    /**
     * <pre>
     * User info.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
     */
    com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getPresenceOrBuilder();

    /**
     * <pre>
     * Party identifier, if this user was matched as a party member.
     * </pre>
     *
     * <code>string party_id = 2 [json_name = "partyId"];</code>
     * @return The partyId.
     */
    java.lang.String getPartyId();
    /**
     * <pre>
     * Party identifier, if this user was matched as a party member.
     * </pre>
     *
     * <code>string party_id = 2 [json_name = "partyId"];</code>
     * @return The bytes for partyId.
     */
    com.google.protobuf.ByteString
        getPartyIdBytes();

    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    int getStringPropertiesCount();
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    boolean containsStringProperties(
        java.lang.String key);
    /**
     * Use {@link #getStringPropertiesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStringProperties();
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStringPropertiesMap();
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    /* nullable */
java.lang.String getStringPropertiesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    java.lang.String getStringPropertiesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    int getNumericPropertiesCount();
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    boolean containsNumericProperties(
        java.lang.String key);
    /**
     * Use {@link #getNumericPropertiesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getNumericProperties();
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getNumericPropertiesMap();
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    double getNumericPropertiesOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    double getNumericPropertiesOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code nakama.realtime.MatchmakerMatched.MatchmakerUser}
   */
  public static final class MatchmakerUser extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nakama.realtime.MatchmakerMatched.MatchmakerUser)
      MatchmakerUserOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        MatchmakerUser.class.getName());
    }
    // Use MatchmakerUser.newBuilder() to construct.
    private MatchmakerUser(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MatchmakerUser() {
      partyId_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 5:
          return internalGetStringProperties();
        case 6:
          return internalGetNumericProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.class, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder.class);
    }

    private int bitField0_;
    public static final int PRESENCE_FIELD_NUMBER = 1;
    private com.heroiclabs.nakama.rtapi.UserPresence presence_;
    /**
     * <pre>
     * User info.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
     * @return Whether the presence field is set.
     */
    @java.lang.Override
    public boolean hasPresence() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * User info.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
     * @return The presence.
     */
    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.UserPresence getPresence() {
      return presence_ == null ? com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : presence_;
    }
    /**
     * <pre>
     * User info.
     * </pre>
     *
     * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
     */
    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getPresenceOrBuilder() {
      return presence_ == null ? com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : presence_;
    }

    public static final int PARTY_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object partyId_ = "";
    /**
     * <pre>
     * Party identifier, if this user was matched as a party member.
     * </pre>
     *
     * <code>string party_id = 2 [json_name = "partyId"];</code>
     * @return The partyId.
     */
    @java.lang.Override
    public java.lang.String getPartyId() {
      java.lang.Object ref = partyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partyId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Party identifier, if this user was matched as a party member.
     * </pre>
     *
     * <code>string party_id = 2 [json_name = "partyId"];</code>
     * @return The bytes for partyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPartyIdBytes() {
      java.lang.Object ref = partyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRING_PROPERTIES_FIELD_NUMBER = 5;
    private static final class StringPropertiesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_StringPropertiesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringProperties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStringProperties() {
      if (stringProperties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringPropertiesDefaultEntryHolder.defaultEntry);
      }
      return stringProperties_;
    }
    public int getStringPropertiesCount() {
      return internalGetStringProperties().getMap().size();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public boolean containsStringProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetStringProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringPropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringProperties() {
      return getStringPropertiesMap();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getStringPropertiesMap() {
      return internalGetStringProperties().getMap();
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getStringPropertiesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * String properties.
     * </pre>
     *
     * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
     */
    @java.lang.Override
    public java.lang.String getStringPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int NUMERIC_PROPERTIES_FIELD_NUMBER = 6;
    private static final class NumericPropertiesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_NumericPropertiesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> numericProperties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetNumericProperties() {
      if (numericProperties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NumericPropertiesDefaultEntryHolder.defaultEntry);
      }
      return numericProperties_;
    }
    public int getNumericPropertiesCount() {
      return internalGetNumericProperties().getMap().size();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public boolean containsNumericProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetNumericProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNumericPropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getNumericProperties() {
      return getNumericPropertiesMap();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Double> getNumericPropertiesMap() {
      return internalGetNumericProperties().getMap();
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public double getNumericPropertiesOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetNumericProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Numeric properties.
     * </pre>
     *
     * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
     */
    @java.lang.Override
    public double getNumericPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetNumericProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPresence());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(partyId_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, partyId_);
      }
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetStringProperties(),
          StringPropertiesDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetNumericProperties(),
          NumericPropertiesDefaultEntryHolder.defaultEntry,
          6);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPresence());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(partyId_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, partyId_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStringProperties().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        stringProperties__ = StringPropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, stringProperties__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetNumericProperties().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        numericProperties__ = NumericPropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, numericProperties__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser)) {
        return super.equals(obj);
      }
      com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser other = (com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser) obj;

      if (hasPresence() != other.hasPresence()) return false;
      if (hasPresence()) {
        if (!getPresence()
            .equals(other.getPresence())) return false;
      }
      if (!getPartyId()
          .equals(other.getPartyId())) return false;
      if (!internalGetStringProperties().equals(
          other.internalGetStringProperties())) return false;
      if (!internalGetNumericProperties().equals(
          other.internalGetNumericProperties())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPresence()) {
        hash = (37 * hash) + PRESENCE_FIELD_NUMBER;
        hash = (53 * hash) + getPresence().hashCode();
      }
      hash = (37 * hash) + PARTY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPartyId().hashCode();
      if (!internalGetStringProperties().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringProperties().hashCode();
      }
      if (!internalGetNumericProperties().getMap().isEmpty()) {
        hash = (37 * hash) + NUMERIC_PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNumericProperties().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nakama.realtime.MatchmakerMatched.MatchmakerUser}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nakama.realtime.MatchmakerMatched.MatchmakerUser)
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 5:
            return internalGetStringProperties();
          case 6:
            return internalGetNumericProperties();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableStringProperties();
          case 6:
            return internalGetMutableNumericProperties();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.class, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder.class);
      }

      // Construct using com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPresenceFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        presence_ = null;
        if (presenceBuilder_ != null) {
          presenceBuilder_.dispose();
          presenceBuilder_ = null;
        }
        partyId_ = "";
        internalGetMutableStringProperties().clear();
        internalGetMutableNumericProperties().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_MatchmakerUser_descriptor;
      }

      @java.lang.Override
      public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getDefaultInstanceForType() {
        return com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance();
      }

      @java.lang.Override
      public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser build() {
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser buildPartial() {
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser result = new com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.presence_ = presenceBuilder_ == null
              ? presence_
              : presenceBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.partyId_ = partyId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stringProperties_ = internalGetStringProperties();
          result.stringProperties_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.numericProperties_ = internalGetNumericProperties();
          result.numericProperties_.makeImmutable();
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser) {
          return mergeFrom((com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser other) {
        if (other == com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance()) return this;
        if (other.hasPresence()) {
          mergePresence(other.getPresence());
        }
        if (!other.getPartyId().isEmpty()) {
          partyId_ = other.partyId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        internalGetMutableStringProperties().mergeFrom(
            other.internalGetStringProperties());
        bitField0_ |= 0x00000004;
        internalGetMutableNumericProperties().mergeFrom(
            other.internalGetNumericProperties());
        bitField0_ |= 0x00000008;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPresenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                partyId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 42: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                stringProperties__ = input.readMessage(
                    StringPropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableStringProperties().getMutableMap().put(
                    stringProperties__.getKey(), stringProperties__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 42
              case 50: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
                numericProperties__ = input.readMessage(
                    NumericPropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableNumericProperties().getMutableMap().put(
                    numericProperties__.getKey(), numericProperties__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.heroiclabs.nakama.rtapi.UserPresence presence_;
      private com.google.protobuf.SingleFieldBuilder<
          com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> presenceBuilder_;
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       * @return Whether the presence field is set.
       */
      public boolean hasPresence() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       * @return The presence.
       */
      public com.heroiclabs.nakama.rtapi.UserPresence getPresence() {
        if (presenceBuilder_ == null) {
          return presence_ == null ? com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : presence_;
        } else {
          return presenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      public Builder setPresence(com.heroiclabs.nakama.rtapi.UserPresence value) {
        if (presenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          presence_ = value;
        } else {
          presenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      public Builder setPresence(
          com.heroiclabs.nakama.rtapi.UserPresence.Builder builderForValue) {
        if (presenceBuilder_ == null) {
          presence_ = builderForValue.build();
        } else {
          presenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      public Builder mergePresence(com.heroiclabs.nakama.rtapi.UserPresence value) {
        if (presenceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            presence_ != null &&
            presence_ != com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance()) {
            getPresenceBuilder().mergeFrom(value);
          } else {
            presence_ = value;
          }
        } else {
          presenceBuilder_.mergeFrom(value);
        }
        if (presence_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      public Builder clearPresence() {
        bitField0_ = (bitField0_ & ~0x00000001);
        presence_ = null;
        if (presenceBuilder_ != null) {
          presenceBuilder_.dispose();
          presenceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      public com.heroiclabs.nakama.rtapi.UserPresence.Builder getPresenceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPresenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      public com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder getPresenceOrBuilder() {
        if (presenceBuilder_ != null) {
          return presenceBuilder_.getMessageOrBuilder();
        } else {
          return presence_ == null ?
              com.heroiclabs.nakama.rtapi.UserPresence.getDefaultInstance() : presence_;
        }
      }
      /**
       * <pre>
       * User info.
       * </pre>
       *
       * <code>.nakama.realtime.UserPresence presence = 1 [json_name = "presence"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder> 
          getPresenceFieldBuilder() {
        if (presenceBuilder_ == null) {
          presenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.heroiclabs.nakama.rtapi.UserPresence, com.heroiclabs.nakama.rtapi.UserPresence.Builder, com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder>(
                  getPresence(),
                  getParentForChildren(),
                  isClean());
          presence_ = null;
        }
        return presenceBuilder_;
      }

      private java.lang.Object partyId_ = "";
      /**
       * <pre>
       * Party identifier, if this user was matched as a party member.
       * </pre>
       *
       * <code>string party_id = 2 [json_name = "partyId"];</code>
       * @return The partyId.
       */
      public java.lang.String getPartyId() {
        java.lang.Object ref = partyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partyId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Party identifier, if this user was matched as a party member.
       * </pre>
       *
       * <code>string party_id = 2 [json_name = "partyId"];</code>
       * @return The bytes for partyId.
       */
      public com.google.protobuf.ByteString
          getPartyIdBytes() {
        java.lang.Object ref = partyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Party identifier, if this user was matched as a party member.
       * </pre>
       *
       * <code>string party_id = 2 [json_name = "partyId"];</code>
       * @param value The partyId to set.
       * @return This builder for chaining.
       */
      public Builder setPartyId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        partyId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Party identifier, if this user was matched as a party member.
       * </pre>
       *
       * <code>string party_id = 2 [json_name = "partyId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPartyId() {
        partyId_ = getDefaultInstance().getPartyId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Party identifier, if this user was matched as a party member.
       * </pre>
       *
       * <code>string party_id = 2 [json_name = "partyId"];</code>
       * @param value The bytes for partyId to set.
       * @return This builder for chaining.
       */
      public Builder setPartyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        partyId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> stringProperties_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetStringProperties() {
        if (stringProperties_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringPropertiesDefaultEntryHolder.defaultEntry);
        }
        return stringProperties_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableStringProperties() {
        if (stringProperties_ == null) {
          stringProperties_ = com.google.protobuf.MapField.newMapField(
              StringPropertiesDefaultEntryHolder.defaultEntry);
        }
        if (!stringProperties_.isMutable()) {
          stringProperties_ = stringProperties_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return stringProperties_;
      }
      public int getStringPropertiesCount() {
        return internalGetStringProperties().getMap().size();
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      @java.lang.Override
      public boolean containsStringProperties(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetStringProperties().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringPropertiesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStringProperties() {
        return getStringPropertiesMap();
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getStringPropertiesMap() {
        return internalGetStringProperties().getMap();
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getStringPropertiesOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringProperties().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      @java.lang.Override
      public java.lang.String getStringPropertiesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringProperties().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearStringProperties() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableStringProperties().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      public Builder removeStringProperties(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableStringProperties().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableStringProperties() {
        bitField0_ |= 0x00000004;
        return internalGetMutableStringProperties().getMutableMap();
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      public Builder putStringProperties(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableStringProperties().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * String properties.
       * </pre>
       *
       * <code>map&lt;string, string&gt; string_properties = 5 [json_name = "stringProperties"];</code>
       */
      public Builder putAllStringProperties(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStringProperties().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> numericProperties_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
          internalGetNumericProperties() {
        if (numericProperties_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NumericPropertiesDefaultEntryHolder.defaultEntry);
        }
        return numericProperties_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
          internalGetMutableNumericProperties() {
        if (numericProperties_ == null) {
          numericProperties_ = com.google.protobuf.MapField.newMapField(
              NumericPropertiesDefaultEntryHolder.defaultEntry);
        }
        if (!numericProperties_.isMutable()) {
          numericProperties_ = numericProperties_.copy();
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return numericProperties_;
      }
      public int getNumericPropertiesCount() {
        return internalGetNumericProperties().getMap().size();
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      @java.lang.Override
      public boolean containsNumericProperties(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetNumericProperties().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNumericPropertiesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getNumericProperties() {
        return getNumericPropertiesMap();
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Double> getNumericPropertiesMap() {
        return internalGetNumericProperties().getMap();
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      @java.lang.Override
      public double getNumericPropertiesOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetNumericProperties().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      @java.lang.Override
      public double getNumericPropertiesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetNumericProperties().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearNumericProperties() {
        bitField0_ = (bitField0_ & ~0x00000008);
        internalGetMutableNumericProperties().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      public Builder removeNumericProperties(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableNumericProperties().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
          getMutableNumericProperties() {
        bitField0_ |= 0x00000008;
        return internalGetMutableNumericProperties().getMutableMap();
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      public Builder putNumericProperties(
          java.lang.String key,
          double value) {
        if (key == null) { throw new NullPointerException("map key"); }

        internalGetMutableNumericProperties().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Numeric properties.
       * </pre>
       *
       * <code>map&lt;string, double&gt; numeric_properties = 6 [json_name = "numericProperties"];</code>
       */
      public Builder putAllNumericProperties(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableNumericProperties().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000008;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nakama.realtime.MatchmakerMatched.MatchmakerUser)
    }

    // @@protoc_insertion_point(class_scope:nakama.realtime.MatchmakerMatched.MatchmakerUser)
    private static final com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser();
    }

    public static com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchmakerUser>
        PARSER = new com.google.protobuf.AbstractParser<MatchmakerUser>() {
      @java.lang.Override
      public MatchmakerUser parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MatchmakerUser> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MatchmakerUser> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  private int idCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object id_;
  public enum IdCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    MATCH_ID(2),
    TOKEN(3),
    ID_NOT_SET(0);
    private final int value;
    private IdCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IdCase valueOf(int value) {
      return forNumber(value);
    }

    public static IdCase forNumber(int value) {
      switch (value) {
        case 2: return MATCH_ID;
        case 3: return TOKEN;
        case 0: return ID_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public IdCase
  getIdCase() {
    return IdCase.forNumber(
        idCase_);
  }

  public static final int TICKET_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object ticket_ = "";
  /**
   * <pre>
   * The matchmaking ticket that has completed.
   * </pre>
   *
   * <code>string ticket = 1 [json_name = "ticket"];</code>
   * @return The ticket.
   */
  @java.lang.Override
  public java.lang.String getTicket() {
    java.lang.Object ref = ticket_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ticket_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The matchmaking ticket that has completed.
   * </pre>
   *
   * <code>string ticket = 1 [json_name = "ticket"];</code>
   * @return The bytes for ticket.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTicketBytes() {
    java.lang.Object ref = ticket_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ticket_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MATCH_ID_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Match ID.
   * </pre>
   *
   * <code>string match_id = 2 [json_name = "matchId"];</code>
   * @return Whether the matchId field is set.
   */
  public boolean hasMatchId() {
    return idCase_ == 2;
  }
  /**
   * <pre>
   * Match ID.
   * </pre>
   *
   * <code>string match_id = 2 [json_name = "matchId"];</code>
   * @return The matchId.
   */
  public java.lang.String getMatchId() {
    java.lang.Object ref = "";
    if (idCase_ == 2) {
      ref = id_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (idCase_ == 2) {
        id_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Match ID.
   * </pre>
   *
   * <code>string match_id = 2 [json_name = "matchId"];</code>
   * @return The bytes for matchId.
   */
  public com.google.protobuf.ByteString
      getMatchIdBytes() {
    java.lang.Object ref = "";
    if (idCase_ == 2) {
      ref = id_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (idCase_ == 2) {
        id_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOKEN_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Match join token.
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return Whether the token field is set.
   */
  public boolean hasToken() {
    return idCase_ == 3;
  }
  /**
   * <pre>
   * Match join token.
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The token.
   */
  public java.lang.String getToken() {
    java.lang.Object ref = "";
    if (idCase_ == 3) {
      ref = id_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (idCase_ == 3) {
        id_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Match join token.
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The bytes for token.
   */
  public com.google.protobuf.ByteString
      getTokenBytes() {
    java.lang.Object ref = "";
    if (idCase_ == 3) {
      ref = id_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (idCase_ == 3) {
        id_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser> users_;
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  @java.lang.Override
  public java.util.List<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser> getUsersList() {
    return users_;
  }
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> 
      getUsersOrBuilderList() {
    return users_;
  }
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  @java.lang.Override
  public int getUsersCount() {
    return users_.size();
  }
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getUsers(int index) {
    return users_.get(index);
  }
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder getUsersOrBuilder(
      int index) {
    return users_.get(index);
  }

  public static final int SELF_FIELD_NUMBER = 5;
  private com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser self_;
  /**
   * <pre>
   * A reference to the current user and their properties.
   * </pre>
   *
   * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
   * @return Whether the self field is set.
   */
  @java.lang.Override
  public boolean hasSelf() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A reference to the current user and their properties.
   * </pre>
   *
   * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
   * @return The self.
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getSelf() {
    return self_ == null ? com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance() : self_;
  }
  /**
   * <pre>
   * A reference to the current user and their properties.
   * </pre>
   *
   * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
   */
  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder getSelfOrBuilder() {
    return self_ == null ? com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance() : self_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ticket_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, ticket_);
    }
    if (idCase_ == 2) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, id_);
    }
    if (idCase_ == 3) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, id_);
    }
    for (int i = 0; i < users_.size(); i++) {
      output.writeMessage(4, users_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(5, getSelf());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ticket_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, ticket_);
    }
    if (idCase_ == 2) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, id_);
    }
    if (idCase_ == 3) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, id_);
    }
    for (int i = 0; i < users_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, users_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSelf());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.heroiclabs.nakama.rtapi.MatchmakerMatched)) {
      return super.equals(obj);
    }
    com.heroiclabs.nakama.rtapi.MatchmakerMatched other = (com.heroiclabs.nakama.rtapi.MatchmakerMatched) obj;

    if (!getTicket()
        .equals(other.getTicket())) return false;
    if (!getUsersList()
        .equals(other.getUsersList())) return false;
    if (hasSelf() != other.hasSelf()) return false;
    if (hasSelf()) {
      if (!getSelf()
          .equals(other.getSelf())) return false;
    }
    if (!getIdCase().equals(other.getIdCase())) return false;
    switch (idCase_) {
      case 2:
        if (!getMatchId()
            .equals(other.getMatchId())) return false;
        break;
      case 3:
        if (!getToken()
            .equals(other.getToken())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TICKET_FIELD_NUMBER;
    hash = (53 * hash) + getTicket().hashCode();
    if (getUsersCount() > 0) {
      hash = (37 * hash) + USERS_FIELD_NUMBER;
      hash = (53 * hash) + getUsersList().hashCode();
    }
    if (hasSelf()) {
      hash = (37 * hash) + SELF_FIELD_NUMBER;
      hash = (53 * hash) + getSelf().hashCode();
    }
    switch (idCase_) {
      case 2:
        hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + getMatchId().hashCode();
        break;
      case 3:
        hash = (37 * hash) + TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getToken().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.rtapi.MatchmakerMatched prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A successful matchmaking result.
   * </pre>
   *
   * Protobuf type {@code nakama.realtime.MatchmakerMatched}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.realtime.MatchmakerMatched)
      com.heroiclabs.nakama.rtapi.MatchmakerMatchedOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.heroiclabs.nakama.rtapi.MatchmakerMatched.class, com.heroiclabs.nakama.rtapi.MatchmakerMatched.Builder.class);
    }

    // Construct using com.heroiclabs.nakama.rtapi.MatchmakerMatched.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getUsersFieldBuilder();
        getSelfFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      ticket_ = "";
      if (usersBuilder_ == null) {
        users_ = java.util.Collections.emptyList();
      } else {
        users_ = null;
        usersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      self_ = null;
      if (selfBuilder_ != null) {
        selfBuilder_.dispose();
        selfBuilder_ = null;
      }
      idCase_ = 0;
      id_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.heroiclabs.nakama.rtapi.RealtimeProto.internal_static_nakama_realtime_MatchmakerMatched_descriptor;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched getDefaultInstanceForType() {
      return com.heroiclabs.nakama.rtapi.MatchmakerMatched.getDefaultInstance();
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched build() {
      com.heroiclabs.nakama.rtapi.MatchmakerMatched result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched buildPartial() {
      com.heroiclabs.nakama.rtapi.MatchmakerMatched result = new com.heroiclabs.nakama.rtapi.MatchmakerMatched(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.heroiclabs.nakama.rtapi.MatchmakerMatched result) {
      if (usersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          users_ = java.util.Collections.unmodifiableList(users_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.users_ = users_;
      } else {
        result.users_ = usersBuilder_.build();
      }
    }

    private void buildPartial0(com.heroiclabs.nakama.rtapi.MatchmakerMatched result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.ticket_ = ticket_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.self_ = selfBuilder_ == null
            ? self_
            : selfBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.heroiclabs.nakama.rtapi.MatchmakerMatched result) {
      result.idCase_ = idCase_;
      result.id_ = this.id_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.heroiclabs.nakama.rtapi.MatchmakerMatched) {
        return mergeFrom((com.heroiclabs.nakama.rtapi.MatchmakerMatched)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.heroiclabs.nakama.rtapi.MatchmakerMatched other) {
      if (other == com.heroiclabs.nakama.rtapi.MatchmakerMatched.getDefaultInstance()) return this;
      if (!other.getTicket().isEmpty()) {
        ticket_ = other.ticket_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (usersBuilder_ == null) {
        if (!other.users_.isEmpty()) {
          if (users_.isEmpty()) {
            users_ = other.users_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureUsersIsMutable();
            users_.addAll(other.users_);
          }
          onChanged();
        }
      } else {
        if (!other.users_.isEmpty()) {
          if (usersBuilder_.isEmpty()) {
            usersBuilder_.dispose();
            usersBuilder_ = null;
            users_ = other.users_;
            bitField0_ = (bitField0_ & ~0x00000008);
            usersBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getUsersFieldBuilder() : null;
          } else {
            usersBuilder_.addAllMessages(other.users_);
          }
        }
      }
      if (other.hasSelf()) {
        mergeSelf(other.getSelf());
      }
      switch (other.getIdCase()) {
        case MATCH_ID: {
          idCase_ = 2;
          id_ = other.id_;
          onChanged();
          break;
        }
        case TOKEN: {
          idCase_ = 3;
          id_ = other.id_;
          onChanged();
          break;
        }
        case ID_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ticket_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              idCase_ = 2;
              id_ = s;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              idCase_ = 3;
              id_ = s;
              break;
            } // case 26
            case 34: {
              com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser m =
                  input.readMessage(
                      com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.parser(),
                      extensionRegistry);
              if (usersBuilder_ == null) {
                ensureUsersIsMutable();
                users_.add(m);
              } else {
                usersBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getSelfFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int idCase_ = 0;
    private java.lang.Object id_;
    public IdCase
        getIdCase() {
      return IdCase.forNumber(
          idCase_);
    }

    public Builder clearId() {
      idCase_ = 0;
      id_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object ticket_ = "";
    /**
     * <pre>
     * The matchmaking ticket that has completed.
     * </pre>
     *
     * <code>string ticket = 1 [json_name = "ticket"];</code>
     * @return The ticket.
     */
    public java.lang.String getTicket() {
      java.lang.Object ref = ticket_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ticket_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The matchmaking ticket that has completed.
     * </pre>
     *
     * <code>string ticket = 1 [json_name = "ticket"];</code>
     * @return The bytes for ticket.
     */
    public com.google.protobuf.ByteString
        getTicketBytes() {
      java.lang.Object ref = ticket_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ticket_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The matchmaking ticket that has completed.
     * </pre>
     *
     * <code>string ticket = 1 [json_name = "ticket"];</code>
     * @param value The ticket to set.
     * @return This builder for chaining.
     */
    public Builder setTicket(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ticket_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The matchmaking ticket that has completed.
     * </pre>
     *
     * <code>string ticket = 1 [json_name = "ticket"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTicket() {
      ticket_ = getDefaultInstance().getTicket();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The matchmaking ticket that has completed.
     * </pre>
     *
     * <code>string ticket = 1 [json_name = "ticket"];</code>
     * @param value The bytes for ticket to set.
     * @return This builder for chaining.
     */
    public Builder setTicketBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ticket_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Match ID.
     * </pre>
     *
     * <code>string match_id = 2 [json_name = "matchId"];</code>
     * @return Whether the matchId field is set.
     */
    @java.lang.Override
    public boolean hasMatchId() {
      return idCase_ == 2;
    }
    /**
     * <pre>
     * Match ID.
     * </pre>
     *
     * <code>string match_id = 2 [json_name = "matchId"];</code>
     * @return The matchId.
     */
    @java.lang.Override
    public java.lang.String getMatchId() {
      java.lang.Object ref = "";
      if (idCase_ == 2) {
        ref = id_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (idCase_ == 2) {
          id_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Match ID.
     * </pre>
     *
     * <code>string match_id = 2 [json_name = "matchId"];</code>
     * @return The bytes for matchId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMatchIdBytes() {
      java.lang.Object ref = "";
      if (idCase_ == 2) {
        ref = id_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (idCase_ == 2) {
          id_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Match ID.
     * </pre>
     *
     * <code>string match_id = 2 [json_name = "matchId"];</code>
     * @param value The matchId to set.
     * @return This builder for chaining.
     */
    public Builder setMatchId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      idCase_ = 2;
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Match ID.
     * </pre>
     *
     * <code>string match_id = 2 [json_name = "matchId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchId() {
      if (idCase_ == 2) {
        idCase_ = 0;
        id_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Match ID.
     * </pre>
     *
     * <code>string match_id = 2 [json_name = "matchId"];</code>
     * @param value The bytes for matchId to set.
     * @return This builder for chaining.
     */
    public Builder setMatchIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      idCase_ = 2;
      id_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Match join token.
     * </pre>
     *
     * <code>string token = 3 [json_name = "token"];</code>
     * @return Whether the token field is set.
     */
    @java.lang.Override
    public boolean hasToken() {
      return idCase_ == 3;
    }
    /**
     * <pre>
     * Match join token.
     * </pre>
     *
     * <code>string token = 3 [json_name = "token"];</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      java.lang.Object ref = "";
      if (idCase_ == 3) {
        ref = id_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (idCase_ == 3) {
          id_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Match join token.
     * </pre>
     *
     * <code>string token = 3 [json_name = "token"];</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = "";
      if (idCase_ == 3) {
        ref = id_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (idCase_ == 3) {
          id_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Match join token.
     * </pre>
     *
     * <code>string token = 3 [json_name = "token"];</code>
     * @param value The token to set.
     * @return This builder for chaining.
     */
    public Builder setToken(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      idCase_ = 3;
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Match join token.
     * </pre>
     *
     * <code>string token = 3 [json_name = "token"];</code>
     * @return This builder for chaining.
     */
    public Builder clearToken() {
      if (idCase_ == 3) {
        idCase_ = 0;
        id_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Match join token.
     * </pre>
     *
     * <code>string token = 3 [json_name = "token"];</code>
     * @param value The bytes for token to set.
     * @return This builder for chaining.
     */
    public Builder setTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      idCase_ = 3;
      id_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser> users_ =
      java.util.Collections.emptyList();
    private void ensureUsersIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        users_ = new java.util.ArrayList<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser>(users_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> usersBuilder_;

    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser> getUsersList() {
      if (usersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(users_);
      } else {
        return usersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public int getUsersCount() {
      if (usersBuilder_ == null) {
        return users_.size();
      } else {
        return usersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getUsers(int index) {
      if (usersBuilder_ == null) {
        return users_.get(index);
      } else {
        return usersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder setUsers(
        int index, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser value) {
      if (usersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUsersIsMutable();
        users_.set(index, value);
        onChanged();
      } else {
        usersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder setUsers(
        int index, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder builderForValue) {
      if (usersBuilder_ == null) {
        ensureUsersIsMutable();
        users_.set(index, builderForValue.build());
        onChanged();
      } else {
        usersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder addUsers(com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser value) {
      if (usersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUsersIsMutable();
        users_.add(value);
        onChanged();
      } else {
        usersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder addUsers(
        int index, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser value) {
      if (usersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUsersIsMutable();
        users_.add(index, value);
        onChanged();
      } else {
        usersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder addUsers(
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder builderForValue) {
      if (usersBuilder_ == null) {
        ensureUsersIsMutable();
        users_.add(builderForValue.build());
        onChanged();
      } else {
        usersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder addUsers(
        int index, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder builderForValue) {
      if (usersBuilder_ == null) {
        ensureUsersIsMutable();
        users_.add(index, builderForValue.build());
        onChanged();
      } else {
        usersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder addAllUsers(
        java.lang.Iterable<? extends com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser> values) {
      if (usersBuilder_ == null) {
        ensureUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, users_);
        onChanged();
      } else {
        usersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder clearUsers() {
      if (usersBuilder_ == null) {
        users_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        usersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public Builder removeUsers(int index) {
      if (usersBuilder_ == null) {
        ensureUsersIsMutable();
        users_.remove(index);
        onChanged();
      } else {
        usersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder getUsersBuilder(
        int index) {
      return getUsersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder getUsersOrBuilder(
        int index) {
      if (usersBuilder_ == null) {
        return users_.get(index);  } else {
        return usersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public java.util.List<? extends com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> 
         getUsersOrBuilderList() {
      if (usersBuilder_ != null) {
        return usersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(users_);
      }
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder addUsersBuilder() {
      return getUsersFieldBuilder().addBuilder(
          com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance());
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder addUsersBuilder(
        int index) {
      return getUsersFieldBuilder().addBuilder(
          index, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance());
    }
    /**
     * <pre>
     * The users that have been matched together, and information about their matchmaking data.
     * </pre>
     *
     * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
     */
    public java.util.List<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder> 
         getUsersBuilderList() {
      return getUsersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> 
        getUsersFieldBuilder() {
      if (usersBuilder_ == null) {
        usersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder>(
                users_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        users_ = null;
      }
      return usersBuilder_;
    }

    private com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser self_;
    private com.google.protobuf.SingleFieldBuilder<
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> selfBuilder_;
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     * @return Whether the self field is set.
     */
    public boolean hasSelf() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     * @return The self.
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getSelf() {
      if (selfBuilder_ == null) {
        return self_ == null ? com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance() : self_;
      } else {
        return selfBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    public Builder setSelf(com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser value) {
      if (selfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        self_ = value;
      } else {
        selfBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    public Builder setSelf(
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder builderForValue) {
      if (selfBuilder_ == null) {
        self_ = builderForValue.build();
      } else {
        selfBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    public Builder mergeSelf(com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser value) {
      if (selfBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          self_ != null &&
          self_ != com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance()) {
          getSelfBuilder().mergeFrom(value);
        } else {
          self_ = value;
        }
      } else {
        selfBuilder_.mergeFrom(value);
      }
      if (self_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    public Builder clearSelf() {
      bitField0_ = (bitField0_ & ~0x00000010);
      self_ = null;
      if (selfBuilder_ != null) {
        selfBuilder_.dispose();
        selfBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder getSelfBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSelfFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    public com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder getSelfOrBuilder() {
      if (selfBuilder_ != null) {
        return selfBuilder_.getMessageOrBuilder();
      } else {
        return self_ == null ?
            com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.getDefaultInstance() : self_;
      }
    }
    /**
     * <pre>
     * A reference to the current user and their properties.
     * </pre>
     *
     * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> 
        getSelfFieldBuilder() {
      if (selfBuilder_ == null) {
        selfBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser.Builder, com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder>(
                getSelf(),
                getParentForChildren(),
                isClean());
        self_ = null;
      }
      return selfBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:nakama.realtime.MatchmakerMatched)
  }

  // @@protoc_insertion_point(class_scope:nakama.realtime.MatchmakerMatched)
  private static final com.heroiclabs.nakama.rtapi.MatchmakerMatched DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.heroiclabs.nakama.rtapi.MatchmakerMatched();
  }

  public static com.heroiclabs.nakama.rtapi.MatchmakerMatched getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MatchmakerMatched>
      PARSER = new com.google.protobuf.AbstractParser<MatchmakerMatched>() {
    @java.lang.Override
    public MatchmakerMatched parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MatchmakerMatched> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MatchmakerMatched> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.heroiclabs.nakama.rtapi.MatchmakerMatched getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

