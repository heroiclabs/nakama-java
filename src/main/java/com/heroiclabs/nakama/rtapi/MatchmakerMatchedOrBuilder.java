// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: github.com/heroiclabs/nakama-common/rtapi/realtime.proto
// Protobuf Java Version: 4.28.2

package com.heroiclabs.nakama.rtapi;

public interface MatchmakerMatchedOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nakama.realtime.MatchmakerMatched)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The matchmaking ticket that has completed.
   * </pre>
   *
   * <code>string ticket = 1 [json_name = "ticket"];</code>
   * @return The ticket.
   */
  java.lang.String getTicket();
  /**
   * <pre>
   * The matchmaking ticket that has completed.
   * </pre>
   *
   * <code>string ticket = 1 [json_name = "ticket"];</code>
   * @return The bytes for ticket.
   */
  com.google.protobuf.ByteString
      getTicketBytes();

  /**
   * <pre>
   * Match ID.
   * </pre>
   *
   * <code>string match_id = 2 [json_name = "matchId"];</code>
   * @return Whether the matchId field is set.
   */
  boolean hasMatchId();
  /**
   * <pre>
   * Match ID.
   * </pre>
   *
   * <code>string match_id = 2 [json_name = "matchId"];</code>
   * @return The matchId.
   */
  java.lang.String getMatchId();
  /**
   * <pre>
   * Match ID.
   * </pre>
   *
   * <code>string match_id = 2 [json_name = "matchId"];</code>
   * @return The bytes for matchId.
   */
  com.google.protobuf.ByteString
      getMatchIdBytes();

  /**
   * <pre>
   * Match join token.
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return Whether the token field is set.
   */
  boolean hasToken();
  /**
   * <pre>
   * Match join token.
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The token.
   */
  java.lang.String getToken();
  /**
   * <pre>
   * Match join token.
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  java.util.List<com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser> 
      getUsersList();
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getUsers(int index);
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  int getUsersCount();
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  java.util.List<? extends com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder> 
      getUsersOrBuilderList();
  /**
   * <pre>
   * The users that have been matched together, and information about their matchmaking data.
   * </pre>
   *
   * <code>repeated .nakama.realtime.MatchmakerMatched.MatchmakerUser users = 4 [json_name = "users"];</code>
   */
  com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder getUsersOrBuilder(
      int index);

  /**
   * <pre>
   * A reference to the current user and their properties.
   * </pre>
   *
   * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
   * @return Whether the self field is set.
   */
  boolean hasSelf();
  /**
   * <pre>
   * A reference to the current user and their properties.
   * </pre>
   *
   * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
   * @return The self.
   */
  com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUser getSelf();
  /**
   * <pre>
   * A reference to the current user and their properties.
   * </pre>
   *
   * <code>.nakama.realtime.MatchmakerMatched.MatchmakerUser self = 5 [json_name = "self"];</code>
   */
  com.heroiclabs.nakama.rtapi.MatchmakerMatched.MatchmakerUserOrBuilder getSelfOrBuilder();

  com.heroiclabs.nakama.rtapi.MatchmakerMatched.IdCase getIdCase();
}
